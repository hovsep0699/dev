{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{IconPlus,IconCheck}from'@distate/components/dist/icons';import set from'lodash.set';import{HTMLContainer,HTMLBody,HTMLTitle,HTMLText}from'../../styles/body';import{HTMLHeader,HTMLCell as HTMLHeaderCell}from'../../styles/header';import{HTMLFooter,HTMLButtonAppend}from'../../styles/footer';import{HTMLTable,HTMLRow,HTMLCell}from'../../styles/table';import{HTMLButtonTrue,HTMLInput}from'../../styles/form';import{isAutoSumma,autoCalculator,normalizeRows}from'./utils';import{TrackingRow}from'./tracking.row';export var Tracking=function Tracking(_ref){var onSubmit=_ref.onSubmit,_ref$data=_ref.data,data=_ref$data===void 0?[]:_ref$data;var _useState=useState(autoCalculator(data)),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var handleOnSubmit=function handleOnSubmit(){var rows=normalizeRows(formData.rows);onSubmit===null||onSubmit===void 0?void 0:onSubmit(rows);};var inputOnChange=function inputOnChange(index,name,value){set(formData.rows[index],name,value);setFormData(_objectSpread({},formData));};var inputOnBluer=function inputOnBluer(name){if(isAutoSumma(name)){var newFormData=autoCalculator(formData.rows);setFormData(newFormData);}};var onAppend=function onAppend(){var newFormData=_objectSpread({},formData);newFormData.rows.push({});setFormData(newFormData);};var onRemove=function onRemove(index){var newFormData=_objectSpread({},formData);delete newFormData.rows[index];newFormData.rows=newFormData.rows.filter(Boolean);setFormData(newFormData);};var rows=formData.rows,total=formData.total;return/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(HTMLTitle,null,\"\\u0421\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F \\u043E \\u0442\\u043E\\u0432\\u0430\\u0440\\u0435, \\u043F\\u043E\\u0434\\u043B\\u0435\\u0436\\u0430\\u0449\\u0435\\u043C \\u043F\\u0440\\u043E\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u043E\\u0441\\u0442\\u0438\"),/*#__PURE__*/React.createElement(HTMLTable,null,/*#__PURE__*/React.createElement(\"colgroup\",null,/*#__PURE__*/React.createElement(\"col\",{width:\"10\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"15\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"15\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"35\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"10\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"10\"})),/*#__PURE__*/React.createElement(HTMLHeader,null,/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLHeaderCell,{colSpan:2},/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u0430\\u0440\\u0442\\u0438\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\")),/*#__PURE__*/React.createElement(HTMLHeaderCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0415\\u0434\\u0438\\u043D\\u0438\\u0446\\u0430 \\u0438\\u0437\\u043C\\u0435\\u0440\\u0435\\u043D\\u0438\\u044F\")),/*#__PURE__*/React.createElement(HTMLHeaderCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\")),/*#__PURE__*/React.createElement(HTMLHeaderCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u041A\\u043E\\u043B-\\u0432\\u043E\")),/*#__PURE__*/React.createElement(HTMLHeaderCell,null))),/*#__PURE__*/React.createElement(HTMLBody,null,rows.map(function(row,i){return/*#__PURE__*/React.createElement(TrackingRow,{key:\"\".concat(i,\"-\").concat(row.additionalIndicator),index:i,row:row,onChange:inputOnChange,onRemove:onRemove,onBlur:inputOnBluer});})),/*#__PURE__*/React.createElement(HTMLFooter,null,/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,{colSpan:3,rowSpan:2,plain:true},/*#__PURE__*/React.createElement(HTMLButtonAppend,{icon:/*#__PURE__*/React.createElement(IconPlus,null),onClick:onAppend},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\")),/*#__PURE__*/React.createElement(HTMLCell,{colSpan:1},/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0443\\u0432\\u0435\\u043B\\u0438\\u0447\\u0435\\u043D\\u0438\\u0435\")),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,value:total.increase,disabled:true})),/*#__PURE__*/React.createElement(HTMLCell,{rowSpan:2,plain:true})),/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,{colSpan:1},/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0443\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u0438\\u0435\")),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,value:total.decrease,disabled:true}))))),/*#__PURE__*/React.createElement(HTMLButtonTrue,{onClick:handleOnSubmit},/*#__PURE__*/React.createElement(IconCheck,{style:{fill:'currentcolor'}}),\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/TableUniversalCorrection/components/tracking/tracking.tsx"],"names":["React","useState","IconPlus","IconCheck","set","HTMLContainer","HTMLBody","HTMLTitle","HTMLText","HTMLHeader","HTMLCell","HTMLHeaderCell","HTMLFooter","HTMLButtonAppend","HTMLTable","HTMLRow","HTMLButtonTrue","HTMLInput","isAutoSumma","autoCalculator","normalizeRows","TrackingRow","Tracking","onSubmit","data","formData","setFormData","handleOnSubmit","rows","inputOnChange","index","name","value","inputOnBluer","newFormData","onAppend","push","onRemove","filter","Boolean","total","map","row","i","additionalIndicator","increase","decrease","fill"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { IconPlus, IconCheck } from '@distate/components/dist/icons';\r\nimport set from 'lodash.set';\r\n\r\nimport { HTMLContainer, HTMLBody, HTMLTitle, HTMLText } from '../../styles/body';\r\nimport { HTMLHeader, HTMLCell as HTMLHeaderCell } from '../../styles/header';\r\nimport { HTMLFooter, HTMLButtonAppend } from '../../styles/footer';\r\nimport { HTMLTable, HTMLRow, HTMLCell } from '../../styles/table';\r\nimport { HTMLButtonTrue, HTMLInput } from '../../styles/form';\r\nimport { isAutoSumma, autoCalculator, normalizeRows } from './utils';\r\nimport { TrackingRow } from './tracking.row';\r\n\r\nexport type TrackingData = {\r\n  number?: string;\r\n  measurementCode?: string;\r\n  measurementTitle?: string;\r\n  additionalIndicator?: string;\r\n  measurementValueChange?: {\r\n    increase: number | string;\r\n    decrease: number | string;\r\n    before?: number | string;\r\n    after?: number | string;\r\n  };\r\n};\r\n\r\nexport interface TrackingProps {\r\n  data: TrackingData[];\r\n  onSubmit?: (data: TrackingData[]) => void;\r\n}\r\n\r\nexport const Tracking: FC<TrackingProps> = ({ onSubmit, data = [] }) => {\r\n  const [formData, setFormData] = useState(autoCalculator(data));\r\n\r\n  const handleOnSubmit = () => {\r\n    const rows = normalizeRows(formData.rows);\r\n    onSubmit?.(rows);\r\n  };\r\n\r\n  const inputOnChange = (index: number, name: string, value: unknown) => {\r\n    set(formData.rows[index], name, value);\r\n    setFormData({ ...formData });\r\n  };\r\n\r\n  const inputOnBluer = (name: string) => {\r\n    if (isAutoSumma(name)) {\r\n      const newFormData = autoCalculator(formData.rows);\r\n      setFormData(newFormData);\r\n    }\r\n  };\r\n\r\n  const onAppend = () => {\r\n    const newFormData = { ...formData };\r\n    newFormData.rows.push({});\r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const onRemove = (index: number) => {\r\n    let newFormData = { ...formData };\r\n    delete newFormData.rows[index];\r\n\r\n    newFormData.rows = newFormData.rows.filter(Boolean);\r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const { rows, total } = formData;\r\n  return (\r\n    <HTMLContainer>\r\n      <HTMLTitle>Сведения о товаре, подлежащем прослеживаемости</HTMLTitle>\r\n      <HTMLTable>\r\n        <colgroup>\r\n          <col width=\"10\" />\r\n          <col width=\"15\" />\r\n          <col width=\"15\" />\r\n          <col width=\"35\" />\r\n          <col width=\"10\" />\r\n          <col width=\"10\" />\r\n        </colgroup>\r\n        <HTMLHeader>\r\n          <HTMLRow>\r\n            <HTMLHeaderCell colSpan={2}>\r\n              <HTMLText>Регистрационный номер партии товаров</HTMLText>\r\n            </HTMLHeaderCell>\r\n            <HTMLHeaderCell>\r\n              <HTMLText>Единица измерения</HTMLText>\r\n            </HTMLHeaderCell>\r\n            <HTMLHeaderCell>\r\n              <HTMLText>Дополнительная информация</HTMLText>\r\n            </HTMLHeaderCell>\r\n            <HTMLHeaderCell>\r\n              <HTMLText>Кол-во</HTMLText>\r\n            </HTMLHeaderCell>\r\n            <HTMLHeaderCell></HTMLHeaderCell>\r\n          </HTMLRow>\r\n        </HTMLHeader>\r\n        <HTMLBody>\r\n          {rows.map((row, i) => (\r\n            <TrackingRow\r\n              key={`${i}-${row.additionalIndicator}`}\r\n              index={i}\r\n              row={row}\r\n              onChange={inputOnChange}\r\n              onRemove={onRemove}\r\n              onBlur={inputOnBluer}\r\n            />\r\n          ))}\r\n        </HTMLBody>\r\n        <HTMLFooter>\r\n          <HTMLRow>\r\n            <HTMLCell colSpan={3} rowSpan={2} plain>\r\n              <HTMLButtonAppend icon={<IconPlus />} onClick={onAppend}>\r\n                Добавить запись\r\n              </HTMLButtonAppend>\r\n            </HTMLCell>\r\n            <HTMLCell colSpan={1}>\r\n              <HTMLText>Всего увеличение</HTMLText>\r\n            </HTMLCell>\r\n            <HTMLCell>\r\n              <HTMLInput float={2} value={total.increase} disabled />\r\n            </HTMLCell>\r\n            <HTMLCell rowSpan={2} plain></HTMLCell>\r\n          </HTMLRow>\r\n          <HTMLRow>\r\n            <HTMLCell colSpan={1}>\r\n              <HTMLText>Всего уменьшение</HTMLText>\r\n            </HTMLCell>\r\n            <HTMLCell>\r\n              <HTMLInput float={2} value={total.decrease} disabled />\r\n            </HTMLCell>\r\n          </HTMLRow>\r\n        </HTMLFooter>\r\n      </HTMLTable>\r\n      <HTMLButtonTrue onClick={handleOnSubmit}>\r\n        <IconCheck style={{ fill: 'currentcolor' }} />\r\n        Сохранить\r\n      </HTMLButtonTrue>\r\n    </HTMLContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}