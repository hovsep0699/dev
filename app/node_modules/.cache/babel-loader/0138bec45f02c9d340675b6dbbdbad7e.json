{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport AuthHandlerBase from '../AuthHandlerBase';\nimport AuthRequest from '../../AuthRequest';\nimport Environment from '../../../Environment';\n\nvar AjaxEmailPasswordHandler = /*#__PURE__*/function (_AuthHandlerBase) {\n  _inherits(AjaxEmailPasswordHandler, _AuthHandlerBase);\n\n  var _super = _createSuper(AjaxEmailPasswordHandler);\n\n  function AjaxEmailPasswordHandler(successCallback) {\n    var _this;\n\n    _classCallCheck(this, AjaxEmailPasswordHandler);\n\n    _this = _super.call(this);\n    _this._successCallback = successCallback;\n    return _this;\n  }\n\n  _createClass(AjaxEmailPasswordHandler, [{\n    key: \"auth\",\n    value: function auth(request) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(AjaxEmailPasswordHandler.prototype), \"auth\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var url = '/front/login';\n        var formData = new FormData();\n        formData.append('email', request.email);\n        formData.append('password', request.password);\n\n        var successHandler = function successHandler(res) {\n          if (res.data && res.data.success) {\n            _this2._successCallback();\n\n            return _this2.doNextHandler(request);\n          }\n\n          var errResReq = AuthRequest.clone(request);\n          errResReq.error = _get(_getPrototypeOf(AjaxEmailPasswordHandler.prototype), \"createAuthError\", _this2).call(_this2, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), null, res.data.messages);\n          return _this2.doNextHandler(errResReq);\n        };\n\n        var failHandler = function failHandler(error) {\n          var errorRequest = AuthRequest.clone(request);\n          errorRequest.error = _get(_getPrototypeOf(AjaxEmailPasswordHandler.prototype), \"createAuthError\", _this2).call(_this2, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), error);\n          return _this2.doNextHandler(errorRequest);\n        };\n\n        return Environment.getAuthGateway().login(url, formData).then(successHandler).catch(failHandler);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(AjaxEmailPasswordHandler.prototype), \"canHandle\", this).call(this, request);\n\n      if (request.email && request.certificate) throw new Error('В запросе должен быть либо certificate, либо email/password');\n      if (request.email && !request.password) throw new Error('В запрос необходимо передать password');\n      return request.email && request.password;\n    }\n  }]);\n\n  return AjaxEmailPasswordHandler;\n}(AuthHandlerBase);\n\nexport default AjaxEmailPasswordHandler;","map":{"version":3,"sources":["../../../../../src/application/auth/handlers/auth/AjaxEmailPasswordHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP,MAAwB,sBAAxB;;IAEM,wB;;;;;AACJ,oCAAY,eAAZ,EAA2B;AAAA;;AAAA;;AACzB;AACA,UAAK,gBAAL,GAAwB,eAAxB;AAFyB;AAG1B;;;;yBAEI,O,EAAO;AAAA;;AACV,yFAAW,OAAX;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,GAAG,GAAG,cAAZ;AACA,YAAM,QAAQ,GAAG,IAAI,QAAJ,EAAjB;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,EAAyB,OAAO,CAAC,KAAjC;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,UAAhB,EAA4B,OAAO,CAAC,QAApC;;AAEA,YAAM,cAAc,GAAG,SAAjB,cAAiB,CAAA,GAAG,EAAG;AAC3B,cAAI,GAAG,CAAC,IAAJ,IAAY,GAAG,CAAC,IAAJ,CAAS,OAAzB,EAAkC;AAChC,YAAA,MAAI,CAAC,gBAAL;;AACA,mBAAO,MAAI,CAAC,aAAL,CAAmB,OAAnB,CAAP;AACD;;AACD,cAAM,SAAS,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAAlB;AACA,UAAA,SAAS,CAAC,KAAV,oJAAkD,GAAlD,GAAyD,IAAzD,EAA+D,GAAG,CAAC,IAAJ,CAAS,QAAxE;AACA,iBAAO,MAAI,CAAC,aAAL,CAAmB,SAAnB,CAAP;AACD,SARD;;AAUA,YAAM,WAAW,GAAG,SAAd,WAAc,CAAA,KAAK,EAAG;AAC1B,cAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAArB;AACA,UAAA,YAAY,CAAC,KAAb,oJAAqD,GAArD,GAA4D,KAA5D;AACA,iBAAO,MAAI,CAAC,aAAL,CAAmB,YAAnB,CAAP;AACD,SAJD;;AAMA,eAAO,WAAW,CAAC,cAAZ,GACJ,KADI,CACE,GADF,EACO,QADP,EAEJ,IAFI,CAEC,cAFD,EAGJ,KAHI,CAGE,WAHF,CAAP;AAID;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,8FAAgB,OAAhB;;AACA,UAAI,OAAO,CAAC,KAAR,IAAiB,OAAO,CAAC,WAA7B,EACE,MAAM,IAAI,KAAJ,CAAU,6DAAV,CAAN;AACF,UAAI,OAAO,CAAC,KAAR,IAAiB,CAAC,OAAO,CAAC,QAA9B,EACE,MAAM,IAAI,KAAJ,CAAU,uCAAV,CAAN;AACF,aAAO,OAAO,CAAC,KAAR,IAAiB,OAAO,CAAC,QAAhC;AACD;;;;EA7CoC,e;;AAgDvC,eAAe,wBAAf","sourceRoot":"","sourcesContent":["import AuthHandlerBase from '../AuthHandlerBase';\r\nimport AuthRequest from '../../AuthRequest';\r\nimport Environment from '../../../Environment';\r\nclass AjaxEmailPasswordHandler extends AuthHandlerBase {\r\n    constructor(successCallback) {\r\n        super();\r\n        this._successCallback = successCallback;\r\n    }\r\n    auth(request) {\r\n        super.auth(request);\r\n        if (this.canHandle(request)) {\r\n            const url = '/front/login';\r\n            const formData = new FormData();\r\n            formData.append('email', request.email);\r\n            formData.append('password', request.password);\r\n            const successHandler = res => {\r\n                if (res.data && res.data.success) {\r\n                    this._successCallback();\r\n                    return this.doNextHandler(request);\r\n                }\r\n                const errResReq = AuthRequest.clone(request);\r\n                errResReq.error = super.createAuthError(`Запрос ${url}`, null, res.data.messages);\r\n                return this.doNextHandler(errResReq);\r\n            };\r\n            const failHandler = error => {\r\n                const errorRequest = AuthRequest.clone(request);\r\n                errorRequest.error = super.createAuthError(`Запрос ${url}`, error);\r\n                return this.doNextHandler(errorRequest);\r\n            };\r\n            return Environment.getAuthGateway()\r\n                .login(url, formData)\r\n                .then(successHandler)\r\n                .catch(failHandler);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        if (request.email && request.certificate)\r\n            throw new Error('В запросе должен быть либо certificate, либо email/password');\r\n        if (request.email && !request.password)\r\n            throw new Error('В запрос необходимо передать password');\r\n        return request.email && request.password;\r\n    }\r\n}\r\nexport default AjaxEmailPasswordHandler;\r\n//# sourceMappingURL=AjaxEmailPasswordHandler.js.map"]},"metadata":{},"sourceType":"module"}