{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Адрес электронной почты(ЭлПочта) A(атрибут) текст(1-255)\r\n */\nvar Email = /*#__PURE__*/function () {\n  _createClass(Email, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return value && !Email.REG_EXP.test(value) ? 'Введите строку длиной 1–255 знаков' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Email.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      return value && value.slice(0, 255);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^.{1,255}$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите email';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите строку длиной 1–255 знаков';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Email';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'email';\n    }\n  }]);\n\n  function Email(value) {\n    _classCallCheck(this, Email);\n\n    if (!Email.isValid(\"\".concat(value))) {\n      this._error = new Error('Невозможно создать email. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(value);\n  }\n\n  _createClass(Email, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Email(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return Email;\n}();\n\nexport default Email;","map":{"version":3,"sources":["../../../../../../src/domain/documents/invoice/standard_element/contact/Email.js"],"names":[],"mappings":";;;AAAA;;;IAGM,K;;;6BAKY,K,EAAK;AACnB,aAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAN,CAAc,IAAd,CAAmB,KAAnB,CAAV,GAAsC,oCAAtC,GAA6E,SAApF;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,KAAK,CAAC,QAAN,CAAe,KAAf,CAAR;AACD;;;yBAEW,K,EAAK;AACf,aAAO,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,GAAf,CAAhB;AACD;;;wBAdiB;AAChB,aAAO,IAAI,MAAJ,CAAW,YAAX,CAAP;AACD;;;wBAcqB;AACpB,aAAO,eAAP;AACD;;;wBAEc;AACb,aAAO,oCAAP;AACD;;;wBAEc;AACb,aAAO,OAAP;AACD;;;wBAEe;AACd,aAAO,OAAP;AACD;;;AAED,iBAAY,KAAZ,EAAiB;AAAA;;AACf,QAAI,CAAC,KAAK,CAAC,OAAN,WAAiB,KAAjB,EAAL,EAAgC;AAC9B,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,4CAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,KAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,KAAJ,CAAU,KAAK,KAAf,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,KAAf","sourceRoot":"","sourcesContent":["/*\r\n  Адрес электронной почты(ЭлПочта) A(атрибут) текст(1-255)\r\n */\r\nclass Email {\r\n    static get REG_EXP() {\r\n        return new RegExp('^.{1,255}$');\r\n    }\r\n    static validate(value) {\r\n        return value && !Email.REG_EXP.test(value) ? 'Введите строку длиной 1–255 знаков' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Email.validate(value);\r\n    }\r\n    static mask(value) {\r\n        return value && value.slice(0, 255);\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите email';\r\n    }\r\n    static get hint() {\r\n        return 'Введите строку длиной 1–255 знаков';\r\n    }\r\n    static get name() {\r\n        return 'Email';\r\n    }\r\n    static get field() {\r\n        return 'email';\r\n    }\r\n    constructor(value) {\r\n        if (!Email.isValid(`${value}`)) {\r\n            this._error = new Error('Невозможно создать email. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${value}`;\r\n    }\r\n    clone() {\r\n        return new Email(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default Email;\r\n//# sourceMappingURL=Email.js.map"]},"metadata":{},"sourceType":"module"}