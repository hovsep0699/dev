{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useField}from'formik';import DateInput from'../elements/DateInput';import{StyledFormField,FieldWrapper}from'../Form.styles';import FieldLabel from'../FieldLabel';import FieldError from'../FieldError';import{format,isValid}from'date-fns';var DateInputField=function DateInputField(_ref){var name=_ref.name,label=_ref.label,hideErrors=_ref.hideErrors,placeholder=_ref.placeholder;var _useField=useField({name:name,type:'date'}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var value=field.value;var touched=meta.touched,error=meta.error;var setValue=helpers.setValue;var dateFormat='dd.MM.yyyy';var handleChange=function handleChange(date){return isValid(date)&&setValue(format(date,dateFormat));};var handleFocus=function handleFocus(){return value===''&&setValue(format(new Date(),dateFormat));};return/*#__PURE__*/React.createElement(StyledFormField,null,label&&/*#__PURE__*/React.createElement(FieldLabel,{name:name},label),/*#__PURE__*/React.createElement(FieldWrapper,null,/*#__PURE__*/React.createElement(DateInput,{name:name,value:value,hasError:!!error,touched:touched,hideErrors:hideErrors,setValue:setValue,placeholder:placeholder,onChange:handleChange,onFocus:handleFocus,dateFormat:dateFormat})),!hideErrors&&touched&&error&&/*#__PURE__*/React.createElement(FieldError,null,error));};export default DateInputField;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/Form/fields/DateInputField.tsx"],"names":["React","useField","DateInput","StyledFormField","FieldWrapper","FieldLabel","FieldError","format","isValid","DateInputField","name","label","hideErrors","placeholder","type","field","meta","helpers","value","touched","error","setValue","dateFormat","handleChange","date","handleFocus","Date"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,gBAA9C,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,UAAhC,CASA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA8D,IAA3DC,CAAAA,IAA2D,MAA3DA,IAA2D,CAArDC,KAAqD,MAArDA,KAAqD,CAA9CC,UAA8C,MAA9CA,UAA8C,CAAlCC,WAAkC,MAAlCA,WAAkC,eACpDZ,QAAQ,CAAC,CAAES,IAAI,CAAJA,IAAF,CAAQI,IAAI,CAAE,MAAd,CAAD,CAD4C,wCAC5EC,KAD4E,eACrEC,IADqE,eAC/DC,OAD+D,kBAE3EC,CAAAA,KAF2E,CAEjEH,KAFiE,CAE3EG,KAF2E,IAG3EC,CAAAA,OAH2E,CAGxDH,IAHwD,CAG3EG,OAH2E,CAGlEC,KAHkE,CAGxDJ,IAHwD,CAGlEI,KAHkE,IAI3EC,CAAAA,QAJ2E,CAI9DJ,OAJ8D,CAI3EI,QAJ2E,CAKnF,GAAMC,CAAAA,UAAU,CAAG,YAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,QAAgBhB,CAAAA,OAAO,CAACgB,IAAD,CAAP,EAAiBH,QAAQ,CAACd,MAAM,CAACiB,IAAD,CAAOF,UAAP,CAAP,CAAzC,EAArB,CACA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMP,CAAAA,KAAK,GAAK,EAAV,EAAgBG,QAAQ,CAACd,MAAM,CAAC,GAAImB,CAAAA,IAAJ,EAAD,CAAaJ,UAAb,CAAP,CAA9B,EAApB,CAEA,mBACE,oBAAC,eAAD,MACGX,KAAK,eAAI,oBAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EAAyBC,KAAzB,CADZ,cAGE,oBAAC,YAAD,mBACE,oBAAC,SAAD,EACE,IAAI,CAAED,IADR,CAEE,KAAK,CAAEQ,KAFT,CAGE,QAAQ,CAAE,CAAC,CAACE,KAHd,CAIE,OAAO,CAAED,OAJX,CAKE,UAAU,CAAEP,UALd,CAME,QAAQ,CAAES,QANZ,CAOE,WAAW,CAAER,WAPf,CAQE,QAAQ,CAAEU,YARZ,CASE,OAAO,CAAEE,WATX,CAUE,UAAU,CAAEH,UAVd,EADF,CAHF,CAkBG,CAACV,UAAD,EAAeO,OAAf,EAA0BC,KAA1B,eAAmC,oBAAC,UAAD,MAAaA,KAAb,CAlBtC,CADF,CAsBD,CAhCD,CAkCA,cAAeX,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\nimport DateInput from '../elements/DateInput';\r\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\r\nimport FieldLabel from '../FieldLabel';\r\nimport FieldError from '../FieldError';\r\nimport { format, isValid } from 'date-fns';\r\n\r\ntype DateInputField = {\r\n  name: string;\r\n  label?: string;\r\n  hideErrors?: boolean;\r\n  placeholder?: string;\r\n};\r\n\r\nconst DateInputField = ({ name, label, hideErrors, placeholder }: DateInputField) => {\r\n  const [field, meta, helpers] = useField({ name, type: 'date' });\r\n  const { value } = field;\r\n  const { touched, error } = meta;\r\n  const { setValue } = helpers;\r\n  const dateFormat = 'dd.MM.yyyy';\r\n\r\n  const handleChange = (date: Date) => isValid(date) && setValue(format(date, dateFormat));\r\n  const handleFocus = () => value === '' && setValue(format(new Date(), dateFormat));\r\n\r\n  return (\r\n    <StyledFormField>\r\n      {label && <FieldLabel name={name}>{label}</FieldLabel>}\r\n\r\n      <FieldWrapper>\r\n        <DateInput\r\n          name={name}\r\n          value={value}\r\n          hasError={!!error}\r\n          touched={touched}\r\n          hideErrors={hideErrors}\r\n          setValue={setValue}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          onFocus={handleFocus}\r\n          dateFormat={dateFormat}\r\n        />\r\n      </FieldWrapper>\r\n\r\n      {!hideErrors && touched && error && <FieldError>{error}</FieldError>}\r\n    </StyledFormField>\r\n  );\r\n};\r\n\r\nexport default DateInputField;\r\n"]},"metadata":{},"sourceType":"module"}