{"ast":null,"code":"import{DestinationType}from'../pages/contractors/helpers/contractors.typings';/** возвращает название типа (без типа Локальный), либо undefined */export var getExternalTypeTitle=function getExternalTypeTitle(type){if(type===DestinationType.LoaclRoaming)return'Локальный роуминг';if(type===DestinationType.Roaming)return'Роуминг';if(type===DestinationType.Connector)return'Коннектор';if(type===DestinationType.Hub1c)return'1С-ЭДО';return;};/** объединяет не пустые значения в строку */export var joinNoEmptyValues=function joinNoEmptyValues(args){var separator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:' ';var noEmptyArr=args.filter(function(item){return!!item&&item!==null;});var result=noEmptyArr.join(separator);if(noEmptyArr.length>0){return result;}};/** возвращает оформленную или пустую строку типа контрагента */export var getExternalTypeToString=function getExternalTypeToString(type,operator,network){var typeTitle=getExternalTypeTitle(type);var allParamsToString=joinNoEmptyValues([typeTitle,operator,network]);var resultStr=allParamsToString?\" (\".concat(allParamsToString,\")\"):'';return resultStr;};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/helpers/heplers.ts"],"names":["DestinationType","getExternalTypeTitle","type","LoaclRoaming","Roaming","Connector","Hub1c","joinNoEmptyValues","args","separator","noEmptyArr","filter","item","result","join","length","getExternalTypeToString","operator","network","typeTitle","allParamsToString","resultStr"],"mappings":"AAAA,OAASA,eAAT,KAAgC,kDAAhC,CAEA,oEACA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,IAAD,CAAuC,CACzE,GAAIA,IAAI,GAAKF,eAAe,CAACG,YAA7B,CAA2C,MAAO,mBAAP,CAC3C,GAAID,IAAI,GAAKF,eAAe,CAACI,OAA7B,CAAsC,MAAO,SAAP,CACtC,GAAIF,IAAI,GAAKF,eAAe,CAACK,SAA7B,CAAwC,MAAO,WAAP,CACxC,GAAIH,IAAI,GAAKF,eAAe,CAACM,KAA7B,CAAoC,MAAO,QAAP,CAEpC,OACD,CAPM,CASP,6CACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAsD,IAAxCC,CAAAA,SAAwC,2DAA5B,GAA4B,CACrF,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,MAAL,CAAY,SAAAC,IAAI,QAAI,CAAC,CAACA,IAAF,EAAUA,IAAI,GAAK,IAAvB,EAAhB,CAAnB,CACA,GAAMC,CAAAA,MAAM,CAAGH,UAAU,CAACI,IAAX,CAAgBL,SAAhB,CAAf,CACA,GAAIC,UAAU,CAACK,MAAX,CAAoB,CAAxB,CAA2B,CACzB,MAAOF,CAAAA,MAAP,CACD,CACF,CANM,CAQP,gEACA,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CACrCd,IADqC,CAErCe,QAFqC,CAGrCC,OAHqC,CAI1B,CACX,GAAMC,CAAAA,SAAS,CAAGlB,oBAAoB,CAACC,IAAD,CAAtC,CACA,GAAMkB,CAAAA,iBAAiB,CAAGb,iBAAiB,CAAC,CAACY,SAAD,CAAYF,QAAZ,CAAsBC,OAAtB,CAAD,CAA3C,CACA,GAAMG,CAAAA,SAAS,CAAGD,iBAAiB,aAAQA,iBAAR,MAA+B,EAAlE,CAEA,MAAOC,CAAAA,SAAP,CACD,CAVM","sourcesContent":["import { DestinationType } from '../pages/contractors/helpers/contractors.typings';\r\n\r\n/** возвращает название типа (без типа Локальный), либо undefined */\r\nexport const getExternalTypeTitle = (type?: string): string | undefined => {\r\n  if (type === DestinationType.LoaclRoaming) return 'Локальный роуминг';\r\n  if (type === DestinationType.Roaming) return 'Роуминг';\r\n  if (type === DestinationType.Connector) return 'Коннектор';\r\n  if (type === DestinationType.Hub1c) return '1С-ЭДО';\r\n\r\n  return;\r\n};\r\n\r\n/** объединяет не пустые значения в строку */\r\nexport const joinNoEmptyValues = (args: any[], separator = ' '): string | undefined => {\r\n  const noEmptyArr = args.filter(item => !!item && item !== null);\r\n  const result = noEmptyArr.join(separator);\r\n  if (noEmptyArr.length > 0) {\r\n    return result;\r\n  }\r\n};\r\n\r\n/** возвращает оформленную или пустую строку типа контрагента */\r\nexport const getExternalTypeToString = (\r\n  type?: string,\r\n  operator?: string,\r\n  network?: string\r\n): string => {\r\n  const typeTitle = getExternalTypeTitle(type);\r\n  const allParamsToString = joinNoEmptyValues([typeTitle, operator, network]);\r\n  const resultStr = allParamsToString ? ` (${allParamsToString})` : '';\r\n\r\n  return resultStr;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}