{"ast":null,"code":"import styled from'styled-components';import{hideVisually}from'polished';import{IconCheck}from'../../assets/icons';import{rgba}from'polished';export var Label=styled.label.withConfig({displayName:\"CheckBoxstyles__Label\",componentId:\"sc-1cc6ja0-0\"})([\"display:inline-block;cursor:pointer;line-height:30px;\"]);export var Icon=styled(IconCheck).withConfig({displayName:\"CheckBoxstyles__Icon\",componentId:\"sc-1cc6ja0-1\"})([\"fill:\",\";width:19px;height:19px;\"],function(_ref){var theme=_ref.theme;return theme.main.font.color.black;});export var HiddenCheckbox=styled.input.attrs({type:'checkbox'}).withConfig({displayName:\"CheckBoxstyles__HiddenCheckbox\",componentId:\"sc-1cc6ja0-2\"})([\"\",\"\"],hideVisually());export var StyledCheckbox=styled.div.withConfig({displayName:\"CheckBoxstyles__StyledCheckbox\",componentId:\"sc-1cc6ja0-3\"})([\"display:inline-block;vertical-align:middle;width:\",\"px;height:\",\"px;border:1px solid #d7d7d7;border-radius:3px;transition:all 150ms;margin-right:\",\";position:relative;flex:none;background-color:\",\";&:hover{box-shadow:\",\";}\",\":active + &{border:1px solid \",\";box-shadow:\",\";}\",\"{transform:\",\";visibility:\",\";transition:transform \",\";}\"],function(_ref2){var theme=_ref2.theme;return parseInt(theme.main.sizes.lineHeight.default)/2;},function(_ref3){var theme=_ref3.theme;return parseInt(theme.main.sizes.lineHeight.default)/2;},function(_ref4){var $isLabel=_ref4.$isLabel;return $isLabel?'14px':'0';},function(_ref5){var theme=_ref5.theme;return theme.main.color.white;},function(_ref6){var theme=_ref6.theme;return theme.main.shadow.lowInset;},HiddenCheckbox,function(_ref7){var theme=_ref7.theme;return theme.main.color.primary;},function(_ref8){var theme=_ref8.theme;return\"inset 0 2px 5px 0 \".concat(rgba(theme.main.color.primary,0.26),\",\\n    inset 0 2px 10px 0 \").concat(rgba(theme.main.color.primary,0.06));},Icon,function(_ref9){var checked=_ref9.checked;return checked?'translateY(-3px)':'translateY(-6px)';},function(_ref10){var checked=_ref10.checked;return checked?'visible':'hidden';},function(_ref11){var theme=_ref11.theme;return theme.main.animation.fast;});export var LabelContent=styled.span.withConfig({displayName:\"CheckBoxstyles__LabelContent\",componentId:\"sc-1cc6ja0-4\"})([\"vertical-align:middle;color:\",\";\"],function(_ref12){var theme=_ref12.theme,dark=_ref12.dark;return!dark?theme.main.font.color.dark:theme.main.font.color.light;});","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/CheckBox/CheckBox.styles.ts"],"names":["styled","hideVisually","IconCheck","rgba","Label","label","Icon","theme","main","font","color","black","HiddenCheckbox","input","attrs","type","StyledCheckbox","div","parseInt","sizes","lineHeight","default","$isLabel","white","shadow","lowInset","primary","checked","animation","fast","LabelContent","span","dark","light"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,YAAT,KAA6B,UAA7B,CACA,OAASC,SAAT,KAA0B,oBAA1B,CAEA,OAASC,IAAT,KAAqB,UAArB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAGJ,MAAM,CAACK,KAAV,wIAAX,CAMP,MAAO,IAAMC,CAAAA,IAAI,CAAGN,MAAM,CAACE,SAAD,CAAT,kHACP,kBAAGK,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,KAArC,EADO,CAAV,CAMP,MAAO,IAAMC,CAAAA,cAAc,CAAGZ,MAAM,CAACa,KAAP,CAAaC,KAAb,CAAmB,CAAEC,IAAI,CAAE,UAAR,CAAnB,CAAH,+FACvBd,YAAY,EADW,CAApB,CAQP,MAAO,IAAMe,CAAAA,cAAc,CAAGhB,MAAM,CAACiB,GAAV,yaAGhB,mBAAGV,CAAAA,KAAH,OAAGA,KAAH,OAAeW,CAAAA,QAAQ,CAACX,KAAK,CAACC,IAAN,CAAWW,KAAX,CAAiBC,UAAjB,CAA4BC,OAA7B,CAAR,CAAgD,CAA/D,EAHgB,CAIf,mBAAGd,CAAAA,KAAH,OAAGA,KAAH,OAAeW,CAAAA,QAAQ,CAACX,KAAK,CAACC,IAAN,CAAWW,KAAX,CAAiBC,UAAjB,CAA4BC,OAA7B,CAAR,CAAgD,CAA/D,EAJe,CAQT,mBAAGC,CAAAA,QAAH,OAAGA,QAAH,OAAmBA,CAAAA,QAAQ,CAAG,MAAH,CAAY,GAAvC,EARS,CAWL,mBAAGf,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWE,KAAX,CAAiBa,KAAhC,EAXK,CAcT,mBAAGhB,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWgB,MAAX,CAAkBC,QAAjC,EAdS,CAiBvBb,cAjBuB,CAkBH,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWE,KAAX,CAAiBgB,OAAhC,EAlBG,CAmBT,mBAAGnB,CAAAA,KAAH,OAAGA,KAAH,mCAAoCJ,IAAI,CAACI,KAAK,CAACC,IAAN,CAAWE,KAAX,CAAiBgB,OAAlB,CAA2B,IAA3B,CAAxC,sCACOvB,IAAI,CAACI,KAAK,CAACC,IAAN,CAAWE,KAAX,CAAiBgB,OAAlB,CAA2B,IAA3B,CADX,GAnBS,CAuBvBpB,IAvBuB,CAwBV,mBAAGqB,CAAAA,OAAH,OAAGA,OAAH,OAAkBA,CAAAA,OAAO,CAAG,kBAAH,CAAwB,kBAAjD,EAxBU,CAyBT,oBAAGA,CAAAA,OAAH,QAAGA,OAAH,OAAkBA,CAAAA,OAAO,CAAG,SAAH,CAAe,QAAxC,EAzBS,CA0BC,oBAAGpB,CAAAA,KAAH,QAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWoB,SAAX,CAAqBC,IAApC,EA1BD,CAApB,CAgCP,MAAO,IAAMC,CAAAA,YAAY,CAAG9B,MAAM,CAAC+B,IAAV,0HAEd,oBAAGxB,CAAAA,KAAH,QAAGA,KAAH,CAAUyB,IAAV,QAAUA,IAAV,OAAsB,CAACA,IAAD,CAAQzB,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBsB,IAA9B,CAAqCzB,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBuB,KAAjF,EAFc,CAAlB","sourcesContent":["import styled from 'styled-components';\r\nimport { hideVisually } from 'polished';\r\nimport { IconCheck } from '../../assets/icons';\r\nimport { ICheckBox } from './CheckBox';\r\nimport { rgba } from 'polished';\r\n\r\nexport const Label = styled.label`\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  line-height: 30px;\r\n`;\r\n\r\nexport const Icon = styled(IconCheck)`\r\n  fill: ${({ theme }) => theme.main.font.color.black};\r\n  width: 19px;\r\n  height: 19px;\r\n`;\r\n\r\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  ${hideVisually()}\r\n`;\r\n\r\nexport type StyledCheckboxType = {\r\n  $isLabel: boolean;\r\n} & Pick<ICheckBox, 'checked'>;\r\n\r\nexport const StyledCheckbox = styled.div<StyledCheckboxType>`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: ${({ theme }) => parseInt(theme.main.sizes.lineHeight.default) / 2}px;\r\n  height: ${({ theme }) => parseInt(theme.main.sizes.lineHeight.default) / 2}px;\r\n  border: 1px solid #d7d7d7;\r\n  border-radius: 3px;\r\n  transition: all 150ms;\r\n  margin-right: ${({ $isLabel }) => ($isLabel ? '14px' : '0')};\r\n  position: relative;\r\n  flex: none;\r\n  background-color: ${({ theme }) => theme.main.color.white};\r\n\r\n  &:hover {\r\n    box-shadow: ${({ theme }) => theme.main.shadow.lowInset};\r\n  }\r\n\r\n  ${HiddenCheckbox}:active + & {\r\n    border: 1px solid ${({ theme }) => theme.main.color.primary};\r\n    box-shadow: ${({ theme }) => `inset 0 2px 5px 0 ${rgba(theme.main.color.primary, 0.26)},\r\n    inset 0 2px 10px 0 ${rgba(theme.main.color.primary, 0.06)}`};\r\n  }\r\n\r\n  ${Icon} {\r\n    transform: ${({ checked }) => (checked ? 'translateY(-3px)' : 'translateY(-6px)')};\r\n    visibility: ${({ checked }) => (checked ? 'visible' : 'hidden')};\r\n    transition: transform ${({ theme }) => theme.main.animation.fast};\r\n  }\r\n`;\r\n\r\nexport type LabelContentType = Pick<ICheckBox, 'dark'>;\r\n\r\nexport const LabelContent = styled.span<LabelContentType>`\r\n  vertical-align: middle;\r\n  color: ${({ theme, dark }) => (!dark ? theme.main.font.color.dark : theme.main.font.color.light)};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}