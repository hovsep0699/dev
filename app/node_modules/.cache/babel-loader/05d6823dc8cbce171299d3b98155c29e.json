{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{getNotificationSetting,changeNotificationSetting}from'../../store/actions';import{notificationSettingRowSelector}from'../../store/selectors';import{CheckBox,Button,ButtonKinds,Icons}from'@distate/components';import'./style.css';/** Кабинет - Оповещения */export var Notification=function Notification(){var dispatch=useDispatch();var initialNotificationList=useSelector(notificationSettingRowSelector);var _useState=useState(),_useState2=_slicedToArray(_useState,2),notificationList=_useState2[0],setNotificationList=_useState2[1];useEffect(function(){dispatch(getNotificationSetting());},[dispatch]);useEffect(function(){setNotificationList(initialNotificationList);},[initialNotificationList]);/** обработка чекбоксов кроме первого */var onChangeCheckBox=function onChangeCheckBox(e,id){e.preventDefault();var newArr=notificationList===null||notificationList===void 0?void 0:notificationList.map(function(item){if(item.type_id===id){return _objectSpread(_objectSpread({},item),{},{email:!item.email});}return item;});setNotificationList(newArr);};/** чекбокс \"Выбрать все\" */var onChangeAll=function onChangeAll(e,checkedAll){e.preventDefault();if(checkedAll){var newArr=notificationList===null||notificationList===void 0?void 0:notificationList.map(function(item){return _objectSpread(_objectSpread({},item),{},{email:false});});setNotificationList(newArr);}else{var _newArr=notificationList===null||notificationList===void 0?void 0:notificationList.map(function(item){return _objectSpread(_objectSpread({},item),{},{email:true});});setNotificationList(_newArr);}};var onSave=function onSave(){var resultArr=notificationList===null||notificationList===void 0?void 0:notificationList.map(function(item){return{typeId:item.type_id,isEnabled:item.email};});dispatch(changeNotificationSetting(resultArr));};var checkedAll=notificationList===null||notificationList===void 0?void 0:notificationList.every(function(item){return item.email;});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"check-list-element\",onClick:function onClick(e){return onChangeAll(e,checkedAll);}},/*#__PURE__*/React.createElement(\"div\",{className:\"check-list-element__left-block\"},/*#__PURE__*/React.createElement(CheckBox,{defaultValue:checkedAll})),/*#__PURE__*/React.createElement(\"div\",{className:\"check-list-element__right-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"check-list-element__title\"},\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0451\"),/*#__PURE__*/React.createElement(\"small\",{className:\"check-list-element__description\"},\"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u043E\\u043F\\u043E\\u0432\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F.\"))),notificationList===null||notificationList===void 0?void 0:notificationList.map(function(item){var type_id=item.type_id,title=item.title,comment=item.comment,email=item.email;return/*#__PURE__*/React.createElement(\"div\",{key:type_id,className:\"check-list-element\",onClick:function onClick(e){return onChangeCheckBox(e,type_id);}},/*#__PURE__*/React.createElement(\"div\",{className:\"check-list-element__left-block\"},/*#__PURE__*/React.createElement(CheckBox,{defaultValue:email,onChange:function onChange(){return true;}})),/*#__PURE__*/React.createElement(\"div\",{className:\"check-list-element__right-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"check-list-element__title\"},title),/*#__PURE__*/React.createElement(\"small\",{className:\"check-list-element__description\"},comment)));}),/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Orange,icon:/*#__PURE__*/React.createElement(Icons.IconCheck,{fill:\"currentColor\"}),onClick:onSave,style:{marginTop:20}},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/cabinet/components/notification/Notification.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getNotificationSetting","changeNotificationSetting","notificationSettingRowSelector","CheckBox","Button","ButtonKinds","Icons","Notification","dispatch","initialNotificationList","notificationList","setNotificationList","onChangeCheckBox","e","id","preventDefault","newArr","map","item","type_id","email","onChangeAll","checkedAll","onSave","resultArr","typeId","isEnabled","every","title","comment","Orange","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getNotificationSetting, changeNotificationSetting } from '../../store/actions';\r\nimport { notificationSettingRowSelector } from '../../store/selectors';\r\nimport { CheckBox, Button, ButtonKinds, Icons } from '@distate/components';\r\nimport './style.css';\r\n\r\n/** Кабинет - Оповещения */\r\nexport const Notification = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialNotificationList = useSelector(notificationSettingRowSelector);\r\n  const [notificationList, setNotificationList] = useState<[]>();\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotificationSetting());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setNotificationList(initialNotificationList);\r\n  }, [initialNotificationList]);\r\n\r\n  /** обработка чекбоксов кроме первого */\r\n  const onChangeCheckBox = (e: any, id: number) => {\r\n    e.preventDefault();\r\n    const newArr = notificationList?.map((item: any) => {\r\n      if (item.type_id === id) {\r\n        return { ...item, email: !item.email };\r\n      }\r\n      return item;\r\n    });\r\n    setNotificationList(newArr as never);\r\n  };\r\n\r\n  /** чекбокс \"Выбрать все\" */\r\n  const onChangeAll = (e: any, checkedAll?: boolean) => {\r\n    e.preventDefault();\r\n\r\n    if (checkedAll) {\r\n      const newArr = notificationList?.map((item: any) => {\r\n        return { ...item, email: false };\r\n      });\r\n      setNotificationList(newArr as never);\r\n    } else {\r\n      const newArr = notificationList?.map((item: any) => {\r\n        return { ...item, email: true };\r\n      });\r\n      setNotificationList(newArr as never);\r\n    }\r\n  };\r\n\r\n  const onSave = () => {\r\n    const resultArr = notificationList?.map((item: any) => ({\r\n      typeId: item.type_id,\r\n      isEnabled: item.email\r\n    }));\r\n\r\n    dispatch(changeNotificationSetting(resultArr));\r\n  };\r\n\r\n  const checkedAll = notificationList?.every((item: any) => item.email);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"check-list-element\" onClick={e => onChangeAll(e, checkedAll)}>\r\n        <div className=\"check-list-element__left-block\">\r\n          {<CheckBox defaultValue={checkedAll} />}\r\n        </div>\r\n        <div className=\"check-list-element__right-block\">\r\n          <span className=\"check-list-element__title\">Выбрать всё</span>\r\n          <small className=\"check-list-element__description\">Подписаться на все оповещения.</small>\r\n        </div>\r\n      </div>\r\n      {notificationList?.map((item: any) => {\r\n        const { type_id, title, comment, email } = item;\r\n\r\n        return (\r\n          <div\r\n            key={type_id}\r\n            className=\"check-list-element\"\r\n            onClick={e => onChangeCheckBox(e, type_id)}\r\n          >\r\n            <div className=\"check-list-element__left-block\">\r\n              {<CheckBox defaultValue={email} onChange={() => true} />}\r\n            </div>\r\n            <div className=\"check-list-element__right-block\">\r\n              <span className=\"check-list-element__title\">{title}</span>\r\n              <small className=\"check-list-element__description\">{comment}</small>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <Button\r\n        kind={ButtonKinds.Orange}\r\n        icon={<Icons.IconCheck fill=\"currentColor\" />}\r\n        onClick={onSave}\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        Сохранить изменения\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}