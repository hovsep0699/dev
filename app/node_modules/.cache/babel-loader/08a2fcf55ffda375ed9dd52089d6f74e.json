{"ast":null,"code":"/** возвращает первый месяц квартала к которому пренадлежит переданный месяц */function getCurrentQuarterFirstMonth(month){if(month<=3){return 0;}if(month>=4&&month<=7){return 4;}return 8;}/** добавление 0 если число состоит из одной цифры */function addZero(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var strValue=String(value);if(strValue.length===1){return'0'+strValue;}return strValue;}/** возвращает дату понедельника или ближайшего прошедшего */function getMondayDay(){var day=new Date().getDay();var now=new Date().getTime();/** миллисекунд в одном дне */var msToDay=24*3600*1000;/** если воскресенье */if(day===0){var _mondayDate=new Date(now-msToDay*6);var _modnayYear=_mondayDate.getFullYear();var _mondayMonth=_mondayDate.getMonth();var _mondayDay=_mondayDate.getDate();return\"\".concat(_modnayYear,\"-\").concat(addZero(_mondayMonth+1),\"-\").concat(addZero(_mondayDay));}/** если понедельник */if(day===1){var _mondayDate2=new Date(now);var _modnayYear2=_mondayDate2.getFullYear();var _mondayMonth2=_mondayDate2.getMonth();var _mondayDay2=_mondayDate2.getDate();return\"\".concat(_modnayYear2,\"-\").concat(addZero(_mondayMonth2+1),\"-\").concat(addZero(_mondayDay2));}/** вторник-суббота */var mondayDate=new Date(now-msToDay*(day-1));var modnayYear=mondayDate.getFullYear();var mondayMonth=mondayDate.getMonth();var mondayDay=mondayDate.getDate();return\"\".concat(modnayYear,\"-\").concat(addZero(mondayMonth+1),\"-\").concat(addZero(mondayDay));}export var Period;/** возвращает число начала периода - неделя/месяц/квартал */(function(Period){Period[Period[\"week\"]=0]=\"week\";Period[Period[\"month\"]=1]=\"month\";Period[Period[\"quarter\"]=2]=\"quarter\";})(Period||(Period={}));export function getPeriodStart(period){var month=new Date().getMonth();// месяц начинается с 0\nvar year=new Date().getFullYear();if(period===Period.week){return getMondayDay();}if(period===Period.month){return\"\".concat(year,\"-\").concat(addZero(month+1),\"-01\");}if(period===Period.quarter){var firstMonth=getCurrentQuarterFirstMonth(month);return\"\".concat(year,\"-\").concat(addZero(firstMonth+1),\"-01\");}return;}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/helpers/dateUtils.ts"],"names":["getCurrentQuarterFirstMonth","month","addZero","value","strValue","String","length","getMondayDay","day","Date","getDay","now","getTime","msToDay","mondayDate","modnayYear","getFullYear","mondayMonth","getMonth","mondayDay","getDate","Period","getPeriodStart","period","year","week","quarter","firstMonth"],"mappings":"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","sourcesContent":["/** возвращает первый месяц квартала к которому пренадлежит переданный месяц */\r\nfunction getCurrentQuarterFirstMonth(month: number) {\r\n  if (month <= 3) {\r\n    return 0;\r\n  }\r\n  if (month >= 4 && month <= 7) {\r\n    return 4;\r\n  }\r\n  return 8;\r\n}\r\n\r\n/** добавление 0 если число состоит из одной цифры */\r\nfunction addZero(value: string | number = 0): string {\r\n  const strValue = String(value);\r\n  if (strValue.length === 1) {\r\n    return '0' + strValue;\r\n  }\r\n  return strValue;\r\n}\r\n\r\n/** возвращает дату понедельника или ближайшего прошедшего */\r\nfunction getMondayDay() {\r\n  const day = new Date().getDay();\r\n  const now = new Date().getTime();\r\n\r\n  /** миллисекунд в одном дне */\r\n  const msToDay = 24 * 3600 * 1000;\r\n\r\n  /** если воскресенье */\r\n  if (day === 0) {\r\n    const mondayDate = new Date(now - msToDay * 6);\r\n    const modnayYear = mondayDate.getFullYear();\r\n    const mondayMonth = mondayDate.getMonth();\r\n    const mondayDay = mondayDate.getDate();\r\n\r\n    return `${modnayYear}-${addZero(mondayMonth + 1)}-${addZero(mondayDay)}`;\r\n  }\r\n\r\n  /** если понедельник */\r\n  if (day === 1) {\r\n    const mondayDate = new Date(now);\r\n    const modnayYear = mondayDate.getFullYear();\r\n    const mondayMonth = mondayDate.getMonth();\r\n    const mondayDay = mondayDate.getDate();\r\n\r\n    return `${modnayYear}-${addZero(mondayMonth + 1)}-${addZero(mondayDay)}`;\r\n  }\r\n  /** вторник-суббота */\r\n  const mondayDate = new Date(now - msToDay * (day - 1));\r\n  const modnayYear = mondayDate.getFullYear();\r\n  const mondayMonth = mondayDate.getMonth();\r\n  const mondayDay = mondayDate.getDate();\r\n\r\n  return `${modnayYear}-${addZero(mondayMonth + 1)}-${addZero(mondayDay)}`;\r\n}\r\n\r\nexport enum Period {\r\n  /** неделя */\r\n  'week',\r\n  /** месяц */\r\n  'month',\r\n  /** квартал */\r\n  'quarter'\r\n}\r\n/** возвращает число начала периода - неделя/месяц/квартал */\r\nexport function getPeriodStart(period?: Period) {\r\n  const month = new Date().getMonth(); // месяц начинается с 0\r\n  const year = new Date().getFullYear();\r\n\r\n  if (period === Period.week) {\r\n    return getMondayDay();\r\n  }\r\n  if (period === Period.month) {\r\n    return `${year}-${addZero(month + 1)}-01`;\r\n  }\r\n  if (period === Period.quarter) {\r\n    const firstMonth = getCurrentQuarterFirstMonth(month);\r\n    return `${year}-${addZero(firstMonth + 1)}-01`;\r\n  }\r\n  return;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}