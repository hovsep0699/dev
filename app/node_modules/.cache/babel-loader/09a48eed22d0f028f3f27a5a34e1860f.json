{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getEmployeeEntityGroupEffect),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(getEmployeeGroupWorker);import{takeLatest,put}from'redux-saga/effects';import{getEmployeeGroup,setEmployeeGroup}from'../actions';import{Flash}from'../../../../common/flash/Flash';import{ContractorApiServices}from'../../services/contractors.api';export function getEmployeeEntityGroupEffect(){return _regeneratorRuntime.wrap(function getEmployeeEntityGroupEffect$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(getEmployeeGroup,getEmployeeGroupWorker);case 2:case\"end\":return _context.stop();}}},_marked);}/** Получение списка Сотрудников, которых можно добавить в группу */function getEmployeeGroupWorker(_ref){var payload,id,offset,limit,name,surname,patronymic,position,employeeInfo,message;return _regeneratorRuntime.wrap(function getEmployeeGroupWorker$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref.payload;_context2.prev=1;id=payload.id,offset=payload.offset,limit=payload.limit,name=payload.name,surname=payload.surname,patronymic=payload.patronymic,position=payload.position;_context2.next=5;return ContractorApiServices.getEmployeeGroup({id:id,inverseJoin:true,offset:offset,limit:limit,name:name,surname:surname,patronymic:patronymic,position:position});case 5:employeeInfo=_context2.sent;_context2.next=8;return put(setEmployeeGroup(employeeInfo));case 8:_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);message=_context2.t0.message;_context2.next=15;return Flash.error(message||'Возникла ошибка');case 15:case\"end\":return _context2.stop();}}},_marked2,null,[[1,10]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/contractors/store/sagas/getEmployeeGroup.effect.ts"],"names":["getEmployeeEntityGroupEffect","getEmployeeGroupWorker","takeLatest","put","getEmployeeGroup","setEmployeeGroup","Flash","ContractorApiServices","payload","id","offset","limit","name","surname","patronymic","position","inverseJoin","employeeInfo","message","error"],"mappings":"oNAMiBA,4B,iDAePC,sB,EArBV,OAASC,UAAT,CAAqBC,GAArB,KAAgC,oBAAhC,CAEA,OAASC,gBAAT,CAA2BC,gBAA3B,KAAmD,YAAnD,CACA,OAASC,KAAT,KAAsB,gCAAtB,CACA,OAASC,qBAAT,KAAsC,gCAAtC,CAEA,MAAO,SAAUP,CAAAA,4BAAV,wJACL,MAAME,CAAAA,UAAU,CAACE,gBAAD,CAAmBH,sBAAnB,CAAhB,CADK,sDAcP,oEACA,QAAUA,CAAAA,sBAAV,2NAAmCO,OAAnC,MAAmCA,OAAnC,kBAEYC,EAFZ,CAEuED,OAFvE,CAEYC,EAFZ,CAEgBC,MAFhB,CAEuEF,OAFvE,CAEgBE,MAFhB,CAEwBC,KAFxB,CAEuEH,OAFvE,CAEwBG,KAFxB,CAE+BC,IAF/B,CAEuEJ,OAFvE,CAE+BI,IAF/B,CAEqCC,OAFrC,CAEuEL,OAFvE,CAEqCK,OAFrC,CAE8CC,UAF9C,CAEuEN,OAFvE,CAE8CM,UAF9C,CAE0DC,QAF1D,CAEuEP,OAFvE,CAE0DO,QAF1D,kBAGyB,MAAMR,CAAAA,qBAAqB,CAACH,gBAAtB,CAAuC,CAChEK,EAAE,CAAFA,EADgE,CAEhEO,WAAW,CAAE,IAFmD,CAGhEN,MAAM,CAANA,MAHgE,CAIhEC,KAAK,CAALA,KAJgE,CAKhEC,IAAI,CAAJA,IALgE,CAMhEC,OAAO,CAAPA,OANgE,CAOhEC,UAAU,CAAVA,UAPgE,CAQhEC,QAAQ,CAARA,QARgE,CAAvC,CAAN,CAHzB,OAGUE,YAHV,iCAaI,MAAMd,CAAAA,GAAG,CAACE,gBAAgB,CAACY,YAAD,CAAjB,CAAT,CAbJ,4FAcaC,OAdb,cAcaA,OAdb,mBAeI,MAAMZ,CAAAA,KAAK,CAACa,KAAN,CAAYD,OAAO,EAAI,iBAAvB,CAAN,CAfJ","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport { getEmployeeGroup, setEmployeeGroup } from '../actions';\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { ContractorApiServices } from '../../services/contractors.api';\r\n\r\nexport function* getEmployeeEntityGroupEffect() {\r\n  yield takeLatest(getEmployeeGroup, getEmployeeGroupWorker);\r\n}\r\n\r\ninterface Payload {\r\n  id: number;\r\n  offset: number;\r\n  limit: number;\r\n  name: string;\r\n  surname: string;\r\n  patronymic: string;\r\n  position: string;\r\n}\r\n\r\n/** Получение списка Сотрудников, которых можно добавить в группу */\r\nfunction* getEmployeeGroupWorker({ payload }: { payload: Payload }) {\r\n  try {\r\n    const { id, offset, limit, name, surname, patronymic, position } = payload;\r\n    const employeeInfo = yield ContractorApiServices.getEmployeeGroup({\r\n      id,\r\n      inverseJoin: true,\r\n      offset,\r\n      limit,\r\n      name,\r\n      surname,\r\n      patronymic,\r\n      position\r\n    });\r\n    yield put(setEmployeeGroup(employeeInfo));\r\n  } catch ({ message }) {\r\n    yield Flash.error(message || 'Возникла ошибка');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}