{"ast":null,"code":"import React from 'react';\nimport set from 'lodash.set';\nimport { dateParse, dateFormat } from '../utils';\nimport { Context } from '../context';\nimport { DatePicker } from '../../DatePicker';\n\nvar DateWidget = function DateWidget(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? [] : _ref$error,\n      options = _ref.options,\n      formValue = _ref.formValue,\n      formDefaultValue = _ref.formDefaultValue,\n      schemaPath = _ref.schemaPath,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema;\n\n  var _React$useContext = React.useContext(Context),\n      onChange = _React$useContext.onChange,\n      formData = _React$useContext.formData;\n\n  var placeholder = uiSchema.placeholder,\n      disabled = uiSchema.disabled;\n  var _options$format = options.format,\n      format = _options$format === void 0 ? 'dd.MM.yyyy' : _options$format;\n  var result = typeof formValue === 'undefined' ? formDefaultValue : formValue;\n  var value = React.useMemo(function () {\n    return dateParse(result, format);\n  }, [format, result]);\n\n  var onChangeStartHandle = function onChangeStartHandle(date) {\n    var data = set(formData, schemaPath, dateFormat(date, format));\n    onChange(Object.assign({}, data));\n  };\n\n  return React.createElement(DatePicker, {\n    placeholder: placeholder,\n    name: name,\n    label: label,\n    error: Boolean(error.length),\n    onChange: onChangeStartHandle,\n    value: value,\n    dateFormat: format,\n    disabled: disabled\n  });\n};\n\nexport { DateWidget };","map":{"version":3,"sources":["../../../src/FormSchema/widgets/date.widget.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP,MAAgB,YAAhB;AAEA,SAAS,SAAT,EAAoB,UAApB,QAAsC,UAAtC;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,UAAT,QAA2B,kBAA3B;;AAEA,IAAM,UAAU,GAAkB,SAA5B,UAA4B,OAS7B;AAAA,MARH,IAQG,QARH,IAQG;AAAA,MAPH,KAOG,QAPH,KAOG;AAAA,wBANH,KAMG;AAAA,MANH,KAMG,2BANK,EAML;AAAA,MALH,OAKG,QALH,OAKG;AAAA,MAJH,SAIG,QAJH,SAIG;AAAA,MAHH,gBAGG,QAHH,gBAGG;AAAA,MAFH,UAEG,QAFH,UAEG;AAAA,2BADH,QACG;AAAA,MADH,QACG,8BADQ,EACR;;AAAA,0BAC4B,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAD5B;AAAA,MACK,QADL,qBACK,QADL;AAAA,MACe,QADf,qBACe,QADf;;AAAA,MAEK,WAFL,GAE+B,QAF/B,CAEK,WAFL;AAAA,MAEkB,QAFlB,GAE+B,QAF/B,CAEkB,QAFlB;AAAA,wBAG+B,OAH/B,CAGK,MAHL;AAAA,MAGK,MAHL,gCAGc,YAHd;AAKH,MAAM,MAAM,GAAG,OAAO,SAAP,KAAqB,WAArB,GAAmC,gBAAnC,GAAsD,SAArE;AACA,MAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc;AAAA,WAAM,SAAS,CAAC,MAAD,EAAS,MAAT,CAAf;AAAA,GAAd,EAA+C,CAAC,MAAD,EAAS,MAAT,CAA/C,CAAd;;AAEA,MAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,IAAD,EAAe;AACzC,QAAM,IAAI,GAAG,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAU,CAAC,IAAD,EAAO,MAAP,CAAjC,CAAhB;AACA,IAAA,QAAQ,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAN,CAAA,CAAR;AACD,GAHD;;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,WAAW,EAAE,WADJ;AAET,IAAA,IAAI,EAAE,IAFG;AAGT,IAAA,KAAK,EAAE,KAHE;AAIT,IAAA,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAP,CAJL;AAKT,IAAA,QAAQ,EAAE,mBALD;AAMT,IAAA,KAAK,EAAE,KANE;AAOT,IAAA,UAAU,EAAE,MAPH;AAQT,IAAA,QAAQ,EAAE;AARD,GAAX,CADF;AAYD,CAlCD;;AAoCA,SAAS,UAAT","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport set from 'lodash.set';\r\nimport { dateParse, dateFormat } from '../utils';\r\nimport { Context } from '../context';\r\nimport { DatePicker } from '../../DatePicker';\r\nconst DateWidget = ({ name, label, error = [], options, formValue, formDefaultValue, schemaPath, uiSchema = {} }) => {\r\n    const { onChange, formData } = React.useContext(Context);\r\n    const { placeholder, disabled } = uiSchema;\r\n    const { format = 'dd.MM.yyyy' } = options;\r\n    const result = typeof formValue === 'undefined' ? formDefaultValue : formValue;\r\n    const value = React.useMemo(() => dateParse(result, format), [format, result]);\r\n    const onChangeStartHandle = (date) => {\r\n        const data = set(formData, schemaPath, dateFormat(date, format));\r\n        onChange(Object.assign({}, data));\r\n    };\r\n    return (React.createElement(DatePicker, { placeholder: placeholder, name: name, label: label, error: Boolean(error.length), onChange: onChangeStartHandle, value: value, dateFormat: format, disabled: disabled }));\r\n};\r\nexport { DateWidget };\r\n//# sourceMappingURL=date.widget.js.map"]},"metadata":{},"sourceType":"module"}