{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  ДопПрослеж - Дополнительный показатель для идентификации товаров, подлежащих прослеживаемости.\r\n  T(1-1000)\r\n*/\nvar AdditionalIndicator = /*#__PURE__*/function () {\n  _createClass(AdditionalIndicator, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return value && !AdditionalIndicator.REG_EXP.test(value) ? 'Введите дополнительную информацию длиной 1-255 знаков' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !AdditionalIndicator.validate(value);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^.{0,255}$');\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите строку длиной до 255 знаков';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите дополнительную информацию';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Дополнительная информация';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'additionalIndicator';\n    }\n  }]);\n\n  function AdditionalIndicator(str) {\n    _classCallCheck(this, AdditionalIndicator);\n\n    if (!AdditionalIndicator.isValid(\"\".concat(str))) {\n      this._error = new Error('Невозможно создать дополнительную информацию. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(str);\n  }\n\n  _createClass(AdditionalIndicator, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AdditionalIndicator(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return AdditionalIndicator;\n}();\n\nexport default AdditionalIndicator;","map":{"version":3,"sources":["../../../../../../../../src/domain/documents/upd/vo/good/information/tracking/AdditionalIndicator.js"],"names":[],"mappings":";;;AAAA;;;;IAKM,mB;;;6BAKY,K,EAAK;AACnB,aAAO,KAAK,IAAI,CAAC,mBAAmB,CAAC,OAApB,CAA4B,IAA5B,CAAiC,KAAjC,CAAV,GAAoD,uDAApD,GAA8G,SAArH;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,mBAAmB,CAAC,QAApB,CAA6B,KAA7B,CAAR;AACD;;;wBAViB;AAChB,aAAO,IAAI,MAAJ,CAAW,YAAX,CAAP;AACD;;;wBAUc;AACb,aAAO,qCAAP;AACD;;;wBAEqB;AACpB,aAAO,mCAAP;AACD;;;wBAEc;AACb,aAAO,2BAAP;AACD;;;wBAEe;AACd,aAAO,qBAAP;AACD;;;AAED,+BAAY,GAAZ,EAAe;AAAA;;AACb,QAAI,CAAC,mBAAmB,CAAC,OAApB,WAA+B,GAA/B,EAAL,EAA4C;AAC1C,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,gEAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,GAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,mBAAJ,CAAwB,KAAK,KAA7B,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,mBAAf","sourceRoot":"","sourcesContent":["/*\r\n  ДопПрослеж - Дополнительный показатель для идентификации товаров, подлежащих прослеживаемости.\r\n  T(1-1000)\r\n*/\r\nclass AdditionalIndicator {\r\n    static get REG_EXP() {\r\n        return new RegExp('^.{0,255}$');\r\n    }\r\n    static validate(value) {\r\n        return value && !AdditionalIndicator.REG_EXP.test(value) ? 'Введите дополнительную информацию длиной 1-255 знаков' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !AdditionalIndicator.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Введите строку длиной до 255 знаков';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите дополнительную информацию';\r\n    }\r\n    static get name() {\r\n        return 'Дополнительная информация';\r\n    }\r\n    static get field() {\r\n        return 'additionalIndicator';\r\n    }\r\n    constructor(str) {\r\n        if (!AdditionalIndicator.isValid(`${str}`)) {\r\n            this._error = new Error('Невозможно создать дополнительную информацию. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${str}`;\r\n    }\r\n    clone() {\r\n        return new AdditionalIndicator(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default AdditionalIndicator;\r\n//# sourceMappingURL=AdditionalIndicator.js.map"]},"metadata":{},"sourceType":"module"}