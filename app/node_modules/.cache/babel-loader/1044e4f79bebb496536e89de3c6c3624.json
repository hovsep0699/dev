{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{getIncreaseDecrease}from'../../utils';export var normalizeRows=function normalizeRows(rows){return rows.map(function(row){var value=row.measurementValueChange;var increase='0';var decrease='0';if((value===null||value===void 0?void 0:value.increase)==='0'&&value.decrease==='0'){decrease=null;}else if((value===null||value===void 0?void 0:value.increase)==='0'&&(value===null||value===void 0?void 0:value.decrease)!=='0'){increase=null;decrease=value.decrease;}else if((value===null||value===void 0?void 0:value.increase)!=='0'&&(value===null||value===void 0?void 0:value.decrease)==='0'){increase=value===null||value===void 0?void 0:value.increase;decrease=null;}return _objectSpread(_objectSpread({},row),{},{measurementValueChange:_objectSpread(_objectSpread({},value),{},{increase:increase,decrease:decrease})});});};export var getSummary=function getSummary(val1,val2){return Number.parseFloat(String(Number(val1)+Number(val2)));};export var autoCalculator=function autoCalculator(data){var rows=data.map(function(item){var measurementValueChange=getIncreaseDecrease(item.measurementValueChange);return _objectSpread(_objectSpread({},item),{},{measurementValueChange:measurementValueChange});});var reducer=function reducer(prev,item){prev.increase=getSummary(prev.increase,item.measurementValueChange.increase);prev.decrease=getSummary(prev.decrease,item.measurementValueChange.decrease);return prev;};var total=rows.reduce(reducer,{increase:0,decrease:0});return{rows:rows,total:total};};export var isAutoSumma=function isAutoSumma(name){var fields=['measurementValueChange.after'];return fields.indexOf(name)!==-1;};export var dataToSelect=function dataToSelect(data){return data.reduce(function(prev,_ref){var code=_ref.code,title=_ref.title;prev.push({value:code,label:title});return prev;},[]);};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/TableUniversalCorrection/components/tracking/utils.tsx"],"names":["getIncreaseDecrease","normalizeRows","rows","map","row","value","measurementValueChange","increase","decrease","getSummary","val1","val2","Number","parseFloat","String","autoCalculator","data","item","reducer","prev","total","reduce","isAutoSumma","name","fields","indexOf","dataToSelect","code","title","push","label"],"mappings":"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","sourcesContent":["import { TrackingData } from './tracking';\r\nimport { getIncreaseDecrease } from '../../utils';\r\n\r\nexport type AutoSumma = {\r\n  rows: TrackingData[];\r\n  total: {\r\n    increase: number;\r\n    decrease: number;\r\n  };\r\n};\r\n\r\nexport const normalizeRows = (rows: TrackingData[]): any[] => {\r\n  return rows.map(row => {\r\n    const { measurementValueChange: value } = row;\r\n    let increase: string | number | null = '0';\r\n    let decrease: string | number | null = '0';\r\n\r\n    if (value?.increase === '0' && value.decrease === '0') {\r\n      decrease = null;\r\n    } else if (value?.increase === '0' && value?.decrease !== '0') {\r\n      increase = null;\r\n      decrease = value.decrease;\r\n    } else if (value?.increase !== '0' && value?.decrease === '0') {\r\n      increase = value?.increase;\r\n      decrease = null;\r\n    }\r\n\r\n    return {\r\n      ...row,\r\n      measurementValueChange: {\r\n        ...value,\r\n        increase,\r\n        decrease\r\n      }\r\n    };\r\n  });\r\n};\r\n\r\nexport const getSummary = (val1: string | number, val2: string | number): number => {\r\n  return Number.parseFloat(String(Number(val1) + Number(val2)));\r\n};\r\n\r\nexport const autoCalculator = (data: TrackingData[]): AutoSumma => {\r\n  const rows = data.map(item => {\r\n    const measurementValueChange = getIncreaseDecrease(item.measurementValueChange);\r\n    return { ...item, measurementValueChange };\r\n  });\r\n\r\n  const reducer = (prev: any, item: Record<string, any>) => {\r\n    prev.increase = getSummary(prev.increase, item.measurementValueChange.increase);\r\n    prev.decrease = getSummary(prev.decrease, item.measurementValueChange.decrease);\r\n    return prev;\r\n  };\r\n\r\n  const total = rows.reduce(reducer, { increase: 0, decrease: 0 });\r\n\r\n  return { rows, total };\r\n};\r\n\r\nexport const isAutoSumma = (name: string): boolean => {\r\n  const fields = ['measurementValueChange.after'];\r\n  return fields.indexOf(name) !== -1;\r\n};\r\n\r\nexport const dataToSelect = (data: any[]) => {\r\n  return data.reduce((prev, { code, title }) => {\r\n    prev.push({ value: code, label: title });\r\n    return prev;\r\n  }, []);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}