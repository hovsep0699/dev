{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  УчастникТип\r\n */\nimport Division from './Division';\nimport InformationForParticipant from './InformationForParticipant';\nimport Bank from './Bank';\nimport AddressRussianType from '../address/AddressRussianType';\nimport ContactType from '../contact/ContactType';\nimport Type from './Type';\nimport Name from './UL/Name';\nimport IP from './IP';\nimport UL from './UL';\nimport OKPO from './OKPO';\n\nvar ParticipantType = /*#__PURE__*/function () {\n  _createClass(ParticipantType, null, [{\n    key: \"validate\",\n    value: function validate() {\n      return undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !ParticipantType.validate(value);\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите сведения об участнике';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите сведения об участнике';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Участник';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'participant';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [Type].concat(_toConsumableArray(IP.VOs), _toConsumableArray(UL.VOs), [Division, InformationForParticipant, AddressRussianType, Bank, ContactType]);\n    }\n  }]);\n\n  function ParticipantType(okpo, division, informationForParticipant, name, accountNumber, bankDetails, regionCode, postalCode, district, city, settlement, street, house, building, room, phone, email, type) {\n    _classCallCheck(this, ParticipantType);\n\n    this.okpo = okpo;\n    this.division = division;\n    this.informationForParticipant = informationForParticipant;\n    this.name = name;\n    this.setBank(accountNumber, bankDetails);\n    this.setAddress(regionCode, postalCode, district, city, settlement, street, house, building, room);\n    this.setContact(phone, email);\n    this.type = type;\n  }\n\n  _createClass(ParticipantType, [{\n    key: \"clone\",\n    value: function clone() {\n      return new ParticipantType(this.okpo, this.division, this.informationForParticipant, this.name, this.bank.accountNumber, this.bank.bankDetails, this.address.regionCode, this.address.postalCode, this.address.district, this.address.city, this.address.settlement, this.address.street, this.address.house, this.address.building, this.address.room, this.contact.phone, this.contact.email, this.type);\n    }\n  }, {\n    key: \"setBank\",\n    value: function setBank(accountNumber, bankDetails) {\n      this._bank = new Bank(accountNumber, bankDetails);\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(regionCode, postalCode, district, city, settlement, street, house, building, room) {\n      this._address = new AddressRussianType(regionCode, postalCode, district, city, settlement, street, house, building, room);\n    }\n  }, {\n    key: \"setContact\",\n    value: function setContact(phone, email) {\n      this._contact = new ContactType(phone, email);\n    }\n  }, {\n    key: \"okpo\",\n    set: function set(value) {\n      this._okpo = new OKPO(value);\n    },\n    get: function get() {\n      return this._okpo;\n    }\n  }, {\n    key: \"division\",\n    set: function set(value) {\n      this._division = new Division(value);\n    },\n    get: function get() {\n      return this._division;\n    }\n  }, {\n    key: \"informationForParticipant\",\n    set: function set(value) {\n      this._informationForParticipant = new InformationForParticipant(value);\n    },\n    get: function get() {\n      return this._informationForParticipant;\n    }\n  }, {\n    key: \"name\",\n    set: function set(value) {\n      this._name = new Name(value);\n    },\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"bank\",\n    get: function get() {\n      return this._bank;\n    }\n  }, {\n    key: \"address\",\n    get: function get() {\n      return this._address;\n    }\n  }, {\n    key: \"contact\",\n    get: function get() {\n      return this._contact;\n    }\n  }, {\n    key: \"type\",\n    set: function set(value) {\n      this._type = new Type(value);\n    },\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, OKPO.field, this.okpo), _defineProperty(_ref, Division.field, this.division), _defineProperty(_ref, InformationForParticipant.field, this.informationForParticipant), _defineProperty(_ref, Name.field, this.name), _defineProperty(_ref, Bank.field, this.bank), _defineProperty(_ref, AddressRussianType.field, this.address), _defineProperty(_ref, Type.field, this.type), _ref;\n    }\n  }]);\n\n  return ParticipantType;\n}();\n\nexport default ParticipantType;","map":{"version":3,"sources":["../../../../../../src/domain/documents/invoice/standard_element/participant/ParticipantType.js"],"names":[],"mappings":";;;;;AAAA;;;AAGA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,yBAAP,MAAsC,6BAAtC;AACA,OAAO,IAAP,MAAiB,QAAjB;AACA,OAAO,kBAAP,MAA+B,+BAA/B;AACA,OAAO,WAAP,MAAwB,wBAAxB;AACA,OAAO,IAAP,MAAiB,QAAjB;AACA,OAAO,IAAP,MAAiB,WAAjB;AACA,OAAO,EAAP,MAAe,MAAf;AACA,OAAO,EAAP,MAAe,MAAf;AACA,OAAO,IAAP,MAAiB,QAAjB;;IAEM,e;;;+BACW;AACb,aAAO,SAAP;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,eAAe,CAAC,QAAhB,CAAyB,KAAzB,CAAR;AACD;;;wBAEc;AACb,aAAO,+BAAP;AACD;;;wBAEqB;AACpB,aAAO,+BAAP;AACD;;;wBAEc;AACb,aAAO,UAAP;AACD;;;wBAEe;AACd,aAAO,aAAP;AACD;;;wBAEa;AACZ,cACE,IADF,4BAEK,EAAE,CAAC,GAFR,sBAGK,EAAE,CAAC,GAHR,IAIE,QAJF,EAKE,yBALF,EAME,kBANF,EAOE,IAPF,EAQE,WARF;AAUD;;;AAED,2BACE,IADF,EAEE,QAFF,EAGE,yBAHF,EAIE,IAJF,EAKE,aALF,EAME,WANF,EAOE,UAPF,EAQE,UARF,EASE,QATF,EAUE,IAVF,EAWE,UAXF,EAYE,MAZF,EAaE,KAbF,EAcE,QAdF,EAeE,IAfF,EAgBE,KAhBF,EAiBE,KAjBF,EAkBE,IAlBF,EAkBM;AAAA;;AAEJ,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,yBAAL,GAAiC,yBAAjC;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,CAAa,aAAb,EAA4B,WAA5B;AACA,SAAK,UAAL,CACE,UADF,EAEE,UAFF,EAGE,QAHF,EAIE,IAJF,EAKE,UALF,EAME,MANF,EAOE,KAPF,EAQE,QARF,EASE,IATF;AAWA,SAAK,UAAL,CAAgB,KAAhB,EAAuB,KAAvB;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;;;4BAEI;AACH,aAAO,IAAI,eAAJ,CACL,KAAK,IADA,EAEL,KAAK,QAFA,EAGL,KAAK,yBAHA,EAIL,KAAK,IAJA,EAKL,KAAK,IAAL,CAAU,aALL,EAML,KAAK,IAAL,CAAU,WANL,EAOL,KAAK,OAAL,CAAa,UAPR,EAQL,KAAK,OAAL,CAAa,UARR,EASL,KAAK,OAAL,CAAa,QATR,EAUL,KAAK,OAAL,CAAa,IAVR,EAWL,KAAK,OAAL,CAAa,UAXR,EAYL,KAAK,OAAL,CAAa,MAZR,EAaL,KAAK,OAAL,CAAa,KAbR,EAcL,KAAK,OAAL,CAAa,QAdR,EAeL,KAAK,OAAL,CAAa,IAfR,EAgBL,KAAK,OAAL,CAAa,KAhBR,EAiBL,KAAK,OAAL,CAAa,KAjBR,EAkBL,KAAK,IAlBA,CAAP;AAoBD;;;4BAkCO,a,EAAe,W,EAAW;AAChC,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,aAAT,EAAwB,WAAxB,CAAb;AACD;;;+BAMU,U,EAAY,U,EAAY,Q,EAAU,I,EAAM,U,EAAY,M,EAAQ,K,EAAO,Q,EAAU,I,EAAI;AAC1F,WAAK,QAAL,GAAgB,IAAI,kBAAJ,CACd,UADc,EAEd,UAFc,EAGd,QAHc,EAId,IAJc,EAKd,UALc,EAMd,MANc,EAOd,KAPc,EAQd,QARc,EASd,IATc,CAAhB;AAWD;;;+BAMU,K,EAAO,K,EAAK;AACrB,WAAK,QAAL,GAAgB,IAAI,WAAJ,CAAgB,KAAhB,EAAuB,KAAvB,CAAhB;AACD;;;sBA5DQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,KAAT,CAAb;AACD,K;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;;;sBAEY,K,EAAK;AAChB,WAAK,SAAL,GAAiB,IAAI,QAAJ,CAAa,KAAb,CAAjB;AACD,K;wBAEW;AACV,aAAO,KAAK,SAAZ;AACD;;;sBAE6B,K,EAAK;AACjC,WAAK,0BAAL,GAAkC,IAAI,yBAAJ,CAA8B,KAA9B,CAAlC;AACD,K;wBAE4B;AAC3B,aAAO,KAAK,0BAAZ;AACD;;;sBAEQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,KAAT,CAAb;AACD,K;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;;;wBAMO;AACN,aAAO,KAAK,KAAZ;AACD;;;wBAgBU;AACT,aAAO,KAAK,QAAZ;AACD;;;wBAMU;AACT,aAAO,KAAK,QAAZ;AACD;;;sBAEQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,KAAT,CAAb;AACD,K;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;;;wBAEQ;AAAA;;AACP,8CACG,IAAI,CAAC,KADR,EACgB,KAAK,IADrB,yBAEG,QAAQ,CAAC,KAFZ,EAEoB,KAAK,QAFzB,yBAGG,yBAAyB,CAAC,KAH7B,EAGqC,KAAK,yBAH1C,yBAIG,IAAI,CAAC,KAJR,EAIgB,KAAK,IAJrB,yBAKG,IAAI,CAAC,KALR,EAKgB,KAAK,IALrB,yBAMG,kBAAkB,CAAC,KANtB,EAM8B,KAAK,OANnC,yBAOG,IAAI,CAAC,KAPR,EAOgB,KAAK,IAPrB;AASD;;;;;;AAGH,eAAe,eAAf","sourceRoot":"","sourcesContent":["/*\r\n  УчастникТип\r\n */\r\nimport Division from './Division';\r\nimport InformationForParticipant from './InformationForParticipant';\r\nimport Bank from './Bank';\r\nimport AddressRussianType from '../address/AddressRussianType';\r\nimport ContactType from '../contact/ContactType';\r\nimport Type from './Type';\r\nimport Name from './UL/Name';\r\nimport IP from './IP';\r\nimport UL from './UL';\r\nimport OKPO from './OKPO';\r\nclass ParticipantType {\r\n    static validate() {\r\n        return undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !ParticipantType.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Введите сведения об участнике';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите сведения об участнике';\r\n    }\r\n    static get name() {\r\n        return 'Участник';\r\n    }\r\n    static get field() {\r\n        return 'participant';\r\n    }\r\n    static get VOs() {\r\n        return [\r\n            Type,\r\n            ...IP.VOs,\r\n            ...UL.VOs,\r\n            Division,\r\n            InformationForParticipant,\r\n            AddressRussianType,\r\n            Bank,\r\n            ContactType\r\n        ];\r\n    }\r\n    constructor(okpo, division, informationForParticipant, name, accountNumber, bankDetails, regionCode, postalCode, district, city, settlement, street, house, building, room, phone, email, type) {\r\n        this.okpo = okpo;\r\n        this.division = division;\r\n        this.informationForParticipant = informationForParticipant;\r\n        this.name = name;\r\n        this.setBank(accountNumber, bankDetails);\r\n        this.setAddress(regionCode, postalCode, district, city, settlement, street, house, building, room);\r\n        this.setContact(phone, email);\r\n        this.type = type;\r\n    }\r\n    clone() {\r\n        return new ParticipantType(this.okpo, this.division, this.informationForParticipant, this.name, this.bank.accountNumber, this.bank.bankDetails, this.address.regionCode, this.address.postalCode, this.address.district, this.address.city, this.address.settlement, this.address.street, this.address.house, this.address.building, this.address.room, this.contact.phone, this.contact.email, this.type);\r\n    }\r\n    set okpo(value) {\r\n        this._okpo = new OKPO(value);\r\n    }\r\n    get okpo() {\r\n        return this._okpo;\r\n    }\r\n    set division(value) {\r\n        this._division = new Division(value);\r\n    }\r\n    get division() {\r\n        return this._division;\r\n    }\r\n    set informationForParticipant(value) {\r\n        this._informationForParticipant = new InformationForParticipant(value);\r\n    }\r\n    get informationForParticipant() {\r\n        return this._informationForParticipant;\r\n    }\r\n    set name(value) {\r\n        this._name = new Name(value);\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    setBank(accountNumber, bankDetails) {\r\n        this._bank = new Bank(accountNumber, bankDetails);\r\n    }\r\n    get bank() {\r\n        return this._bank;\r\n    }\r\n    setAddress(regionCode, postalCode, district, city, settlement, street, house, building, room) {\r\n        this._address = new AddressRussianType(regionCode, postalCode, district, city, settlement, street, house, building, room);\r\n    }\r\n    get address() {\r\n        return this._address;\r\n    }\r\n    setContact(phone, email) {\r\n        this._contact = new ContactType(phone, email);\r\n    }\r\n    get contact() {\r\n        return this._contact;\r\n    }\r\n    set type(value) {\r\n        this._type = new Type(value);\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get value() {\r\n        return {\r\n            [OKPO.field]: this.okpo,\r\n            [Division.field]: this.division,\r\n            [InformationForParticipant.field]: this.informationForParticipant,\r\n            [Name.field]: this.name,\r\n            [Bank.field]: this.bank,\r\n            [AddressRussianType.field]: this.address,\r\n            [Type.field]: this.type\r\n        };\r\n    }\r\n}\r\nexport default ParticipantType;\r\n//# sourceMappingURL=ParticipantType.js.map"]},"metadata":{},"sourceType":"module"}