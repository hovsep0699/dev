{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(initRoot),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(sagaInit),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(sageCheckList);import{takeLatest,call,put}from'redux-saga/effects';import SecurityService from'@distate/core/dist/application/security/SecurityService';import{SingApiServices}from'../../services/sign.api';import{actionInit,actionAutosigning,actionCheckListRequest,actionCheckListSuccess,actionCheckListFailure,actionSignTotal,setHasRoleIncomplete}from'../actions';export function initRoot(){return _regeneratorRuntime.wrap(function initRoot$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionInit,sagaInit);case 2:_context.next=4;return takeLatest(actionCheckListRequest,sageCheckList);case 4:case\"end\":return _context.stop();}}},_marked);}function sagaInit(){var hasAutosigning,hasRoleIncomplete;return _regeneratorRuntime.wrap(function sagaInit$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:hasAutosigning=SecurityService.hasRole('ROLE_RECEIPTS_AUTOSIGNING');hasRoleIncomplete=SecurityService.hasRole('ROLE_INCOMPLETE');_context2.next=4;return put(setHasRoleIncomplete({hasRoleIncomplete:hasRoleIncomplete}));case 4:_context2.next=6;return put(actionAutosigning({hasAutosigning:hasAutosigning}));case 6:_context2.next=8;return put(actionCheckListRequest());case 8:case\"end\":return _context2.stop();}}},_marked2);}function sageCheckList(){var list;return _regeneratorRuntime.wrap(function sageCheckList$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return call(SingApiServices.getList);case 3:list=_context3.sent;_context3.next=6;return put(actionCheckListSuccess({signList:list}));case 6:_context3.next=8;return put(actionSignTotal({signTotal:list.length}));case 8:_context3.next=14;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);_context3.next=14;return put(actionCheckListFailure({signListFailure:_context3.t0}));case 14:case\"end\":return _context3.stop();}}},_marked3,null,[[0,10]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/sign/store/sagas/init.effect.ts"],"names":["initRoot","sagaInit","sageCheckList","takeLatest","call","put","SecurityService","SingApiServices","actionInit","actionAutosigning","actionCheckListRequest","actionCheckListSuccess","actionCheckListFailure","actionSignTotal","setHasRoleIncomplete","hasAutosigning","hasRole","hasRoleIncomplete","getList","list","signList","signTotal","length","signListFailure"],"mappings":"oNAciBA,Q,iDAKPC,Q,iDAUAC,a,EA7BV,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,MAAOC,CAAAA,eAAP,KAA4B,yDAA5B,CAEA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OACEC,UADF,CAEEC,iBAFF,CAGEC,sBAHF,CAIEC,sBAJF,CAKEC,sBALF,CAMEC,eANF,CAOEC,oBAPF,KAQO,YARP,CAUA,MAAO,SAAUd,CAAAA,QAAV,oIACL,MAAMG,CAAAA,UAAU,CAACK,UAAD,CAAaP,QAAb,CAAhB,CADK,uBAEL,MAAME,CAAAA,UAAU,CAACO,sBAAD,CAAyBR,aAAzB,CAAhB,CAFK,sDAKP,QAAUD,CAAAA,QAAV,4JACQc,cADR,CACyBT,eAAe,CAACU,OAAhB,CAAwB,2BAAxB,CADzB,CAEQC,iBAFR,CAE4BX,eAAe,CAACU,OAAhB,CAAwB,iBAAxB,CAF5B,kBAIE,MAAMX,CAAAA,GAAG,CAACS,oBAAoB,CAAC,CAAEG,iBAAiB,CAAjBA,iBAAF,CAAD,CAArB,CAAT,CAJF,wBAME,MAAMZ,CAAAA,GAAG,CAACI,iBAAiB,CAAC,CAAEM,cAAc,CAAdA,cAAF,CAAD,CAAlB,CAAT,CANF,wBAOE,MAAMV,CAAAA,GAAG,CAACK,sBAAsB,EAAvB,CAAT,CAPF,wDAUA,QAAUR,CAAAA,aAAV,uKAEiB,MAAME,CAAAA,IAAI,CAACG,eAAe,CAACW,OAAjB,CAAV,CAFjB,OAEUC,IAFV,iCAGI,MAAMd,CAAAA,GAAG,CAACM,sBAAsB,CAAC,CAAES,QAAQ,CAAED,IAAZ,CAAD,CAAvB,CAAT,CAHJ,wBAII,MAAMd,CAAAA,GAAG,CAACQ,eAAe,CAAC,CAAEQ,SAAS,CAAEF,IAAI,CAACG,MAAlB,CAAD,CAAhB,CAAT,CAJJ,8GAMI,MAAMjB,CAAAA,GAAG,CAACO,sBAAsB,CAAC,CAAEW,eAAe,aAAjB,CAAD,CAAvB,CAAT,CANJ","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport SecurityService from '@distate/core/dist/application/security/SecurityService';\r\n\r\nimport { SingApiServices } from '../../services/sign.api';\r\nimport {\r\n  actionInit,\r\n  actionAutosigning,\r\n  actionCheckListRequest,\r\n  actionCheckListSuccess,\r\n  actionCheckListFailure,\r\n  actionSignTotal,\r\n  setHasRoleIncomplete\r\n} from '../actions';\r\n\r\nexport function* initRoot() {\r\n  yield takeLatest(actionInit, sagaInit);\r\n  yield takeLatest(actionCheckListRequest, sageCheckList);\r\n}\r\n\r\nfunction* sagaInit() {\r\n  const hasAutosigning = SecurityService.hasRole('ROLE_RECEIPTS_AUTOSIGNING');\r\n  const hasRoleIncomplete = SecurityService.hasRole('ROLE_INCOMPLETE');\r\n\r\n  yield put(setHasRoleIncomplete({ hasRoleIncomplete }));\r\n\r\n  yield put(actionAutosigning({ hasAutosigning }));\r\n  yield put(actionCheckListRequest());\r\n}\r\n\r\nfunction* sageCheckList() {\r\n  try {\r\n    const list = yield call(SingApiServices.getList);\r\n    yield put(actionCheckListSuccess({ signList: list }));\r\n    yield put(actionSignTotal({ signTotal: list.length }));\r\n  } catch (error) {\r\n    yield put(actionCheckListFailure({ signListFailure: error }));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}