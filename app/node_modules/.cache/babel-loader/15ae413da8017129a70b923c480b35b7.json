{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport set from 'lodash.set';\nimport { Context } from '../context';\nimport { Select } from '../../Select';\nvar SelectWidget = React.memo(function (_ref) {\n  var onChange = _ref.onChange,\n      required = _ref.required,\n      name = _ref.name,\n      label = _ref.label,\n      options = _ref.options,\n      formValue = _ref.formValue,\n      formDefaultValue = _ref.formDefaultValue,\n      schemaPath = _ref.schemaPath,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? [] : _ref$error,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema;\n\n  var _options$enumOptions = options.enumOptions,\n      enumOptions = _options$enumOptions === void 0 ? [] : _options$enumOptions,\n      props = __rest(options, [\"enumOptions\"]);\n\n  var _React$useContext = React.useContext(Context),\n      onChangeDefault = _React$useContext.onChange,\n      formData = _React$useContext.formData;\n\n  var width = uiSchema.width,\n      _uiSchema$placeholder = uiSchema.placeholder,\n      placeholder = _uiSchema$placeholder === void 0 ? '' : _uiSchema$placeholder;\n\n  var handleOnChange = function handleOnChange(options) {\n    if (onChange) {\n      onChange(name, options);\n    } else {\n      var data = set(formData, schemaPath, options);\n      onChangeDefault(Object.assign({}, data));\n    }\n  };\n\n  var value = enumOptions.find(function (item) {\n    if (Array.isArray(formValue)) {\n      return formValue.indexOf(item.value) !== -1;\n    }\n\n    return formValue;\n  });\n\n  if (!value && formDefaultValue) {\n    value = enumOptions.find(function (item) {\n      return item.value === formDefaultValue;\n    });\n  }\n\n  return React.createElement(Select, Object.assign({}, props, {\n    name: name,\n    label: label,\n    error: Boolean(error.length),\n    value: formValue || formDefaultValue,\n    width: width,\n    onChange: handleOnChange,\n    options: enumOptions,\n    placeholder: placeholder,\n    required: required\n  }));\n});\nexport { SelectWidget };","map":{"version":3,"sources":["../../../src/FormSchema/widgets/select.widget.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP,MAAgB,YAAhB;AAGA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,MAAT,QAAuB,cAAvB;AAOA,IAAM,YAAY,GAAkB,KAAK,CAAC,IAAN,CAClC,gBAWK;AAAA,MAVH,QAUG,QAVH,QAUG;AAAA,MATH,QASG,QATH,QASG;AAAA,MARH,IAQG,QARH,IAQG;AAAA,MAPH,KAOG,QAPH,KAOG;AAAA,MANH,OAMG,QANH,OAMG;AAAA,MALH,SAKG,QALH,SAKG;AAAA,MAJH,gBAIG,QAJH,gBAIG;AAAA,MAHH,UAGG,QAHH,UAGG;AAAA,wBAFH,KAEG;AAAA,MAFH,KAEG,2BAFK,EAEL;AAAA,2BADH,QACG;AAAA,MADH,QACG,8BADQ,EACR;;AAAA,6BACoC,OADpC,CACK,WADL;AAAA,MACK,WADL,qCACmB,EADnB;AAAA,MAC0B,KAD1B,GAC+B,MAAA,CAAK,OAAL,EAA5B,CAAA,aAAA,CAA4B,CAD/B;;AAAA,0BAE6C,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAF7C;AAAA,MAEe,eAFf,qBAEK,QAFL;AAAA,MAEgC,QAFhC,qBAEgC,QAFhC;;AAAA,MAGK,KAHL,GAGiC,QAHjC,CAGK,KAHL;AAAA,8BAGiC,QAHjC,CAGY,WAHZ;AAAA,MAGY,WAHZ,sCAG0B,EAH1B;;AAKH,MAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,OAAD,EAA+B;AACpD,QAAI,QAAJ,EAAc;AACZ,MAAA,QAAQ,CAAC,IAAD,EAAO,OAAP,CAAR;AACD,KAFD,MAEO;AACL,UAAM,IAAI,GAAG,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAAhB;AACA,MAAA,eAAe,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAN,CAAA,CAAf;AACD;AACF,GAPD;;AASA,MAAI,KAAK,GAAG,WAAW,CAAC,IAAZ,CAAiB,UAAC,IAAD,EAAc;AACzC,QAAI,KAAK,CAAC,OAAN,CAAc,SAAd,CAAJ,EAA8B;AAC5B,aAAO,SAAS,CAAC,OAAV,CAAkB,IAAI,CAAC,KAAvB,MAAkC,CAAC,CAA1C;AACD;;AAED,WAAO,SAAP;AACD,GANW,CAAZ;;AAQA,MAAI,CAAC,KAAD,IAAU,gBAAd,EAAgC;AAC9B,IAAA,KAAK,GAAG,WAAW,CAAC,IAAZ,CAAiB,UAAC,IAAD;AAAA,aAAe,IAAI,CAAC,KAAL,KAAe,gBAA9B;AAAA,KAAjB,CAAR;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,KADC,EACI;AACT,IAAA,IAAI,EAAE,IADG;AAET,IAAA,KAAK,EAAE,KAFE;AAGT,IAAA,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAP,CAHL;AAIT,IAAA,KAAK,EAAE,SAAS,IAAI,gBAJX;AAKT,IAAA,KAAK,EAAE,KALE;AAMT,IAAA,QAAQ,EAAE,cAND;AAOT,IAAA,OAAO,EAAE,WAPA;AAQT,IAAA,WAAW,EAAE,WARJ;AAST,IAAA,QAAQ,EAAE;AATD,GADJ,CAAP,CADF;AAcD,CApDiC,CAApC;AAuDA,SAAS,YAAT","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport React from 'react';\r\nimport set from 'lodash.set';\r\nimport { Context } from '../context';\r\nimport { Select } from '../../Select';\r\nconst SelectWidget = React.memo(({ onChange, required, name, label, options, formValue, formDefaultValue, schemaPath, error = [], uiSchema = {} }) => {\r\n    const { enumOptions = [] } = options, props = __rest(options, [\"enumOptions\"]);\r\n    const { onChange: onChangeDefault, formData } = React.useContext(Context);\r\n    const { width, placeholder = '' } = uiSchema;\r\n    const handleOnChange = (options) => {\r\n        if (onChange) {\r\n            onChange(name, options);\r\n        }\r\n        else {\r\n            const data = set(formData, schemaPath, options);\r\n            onChangeDefault(Object.assign({}, data));\r\n        }\r\n    };\r\n    let value = enumOptions.find((item) => {\r\n        if (Array.isArray(formValue)) {\r\n            return formValue.indexOf(item.value) !== -1;\r\n        }\r\n        return formValue;\r\n    });\r\n    if (!value && formDefaultValue) {\r\n        value = enumOptions.find((item) => item.value === formDefaultValue);\r\n    }\r\n    return (React.createElement(Select, Object.assign({}, props, { name: name, label: label, error: Boolean(error.length), value: formValue || formDefaultValue, width: width, onChange: handleOnChange, options: enumOptions, placeholder: placeholder, required: required })));\r\n});\r\nexport { SelectWidget };\r\n//# sourceMappingURL=select.widget.js.map"]},"metadata":{},"sourceType":"module"}