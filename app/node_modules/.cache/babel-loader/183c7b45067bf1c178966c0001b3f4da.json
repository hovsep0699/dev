{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport RecoverPasswordHandlerBase from '../RecoverPasswordHandlerBase';\nimport RecoverRequest from '../../RecoverRequest';\nimport Environment from '../../../Environment';\n\nvar AjaxRemindPasswordHandler = /*#__PURE__*/function (_RecoverPasswordHandl) {\n  _inherits(AjaxRemindPasswordHandler, _RecoverPasswordHandl);\n\n  var _super = _createSuper(AjaxRemindPasswordHandler);\n\n  function AjaxRemindPasswordHandler() {\n    _classCallCheck(this, AjaxRemindPasswordHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AjaxRemindPasswordHandler, [{\n    key: \"recover\",\n    value: function recover(request) {\n      var _this = this;\n\n      _get(_getPrototypeOf(AjaxRemindPasswordHandler.prototype), \"recover\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var url = '/front/employee/password/remind';\n        var formData = new FormData();\n        formData.append('email', request.email);\n        formData.append('captcha', request.captcha);\n\n        var successHandler = function successHandler(_ref) {\n          var _ref$data = _ref.data,\n              success = _ref$data.success,\n              messages = _ref$data.messages;\n\n          if (success) {\n            return _this.doNextHandler(request);\n          }\n\n          var errResReq = RecoverRequest.clone(request);\n          errResReq.error = _get(_getPrototypeOf(AjaxRemindPasswordHandler.prototype), \"createRecoverError\", _this).call(_this, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), null, messages);\n          return _this.doNextHandler(errResReq);\n        };\n\n        var failHandler = function failHandler(error) {\n          var errorRequest = RecoverRequest.clone(request);\n          errorRequest.error = _get(_getPrototypeOf(AjaxRemindPasswordHandler.prototype), \"createRecoverError\", _this).call(_this, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), error);\n          return _this.doNextHandler(errorRequest);\n        };\n\n        return Environment.getAuthGateway().remind(url, formData).then(successHandler).catch(failHandler);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(AjaxRemindPasswordHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return true;\n    }\n  }]);\n\n  return AjaxRemindPasswordHandler;\n}(RecoverPasswordHandlerBase);\n\nexport default AjaxRemindPasswordHandler;","map":{"version":3,"sources":["../../../../../src/application/auth/handlers/recover/AjaxRemindPasswordHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,0BAAP,MAAuC,+BAAvC;AACA,OAAO,cAAP,MAA2B,sBAA3B;AACA,OAAO,WAAP,MAAwB,sBAAxB;;IAEM,yB;;;;;;;;;;;;;4BACI,O,EAAO;AAAA;;AACb,6FAAc,OAAd;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,GAAG,GAAG,iCAAZ;AACA,YAAM,QAAQ,GAAG,IAAI,QAAJ,EAAjB;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,EAAyB,OAAO,CAAC,KAAjC;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,SAAhB,EAA2B,OAAO,CAAC,OAAnC;;AAEA,YAAM,cAAc,GAAG,SAAjB,cAAiB,OAAoC;AAAA,+BAAjC,IAAiC;AAAA,cAAzB,OAAyB,aAAzB,OAAyB;AAAA,cAAhB,QAAgB,aAAhB,QAAgB;;AACzD,cAAI,OAAJ,EAAa;AACX,mBAAO,KAAI,CAAC,aAAL,CAAmB,OAAnB,CAAP;AACD;;AACD,cAAM,SAAS,GAAG,cAAc,CAAC,KAAf,CAAqB,OAArB,CAAlB;AACA,UAAA,SAAS,CAAC,KAAV,sJAAqD,GAArD,GAA4D,IAA5D,EAAkE,QAAlE;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,SAAnB,CAAP;AACD,SAPD;;AASA,YAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAU;AAC5B,cAAM,YAAY,GAAG,cAAc,CAAC,KAAf,CAAqB,OAArB,CAArB;AACA,UAAA,YAAY,CAAC,KAAb,sJAAwD,GAAxD,GAA+D,KAA/D;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,YAAnB,CAAP;AACD,SAJD;;AAMA,eAAO,WAAW,CAAC,cAAZ,GAA6B,MAA7B,CAAoC,GAApC,EAAyC,QAAzC,EAAmD,IAAnD,CAAwD,cAAxD,EAAwE,KAAxE,CAA8E,WAA9E,CAAP;AACD;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,+FAAgB,OAAhB;;AACA,aAAO,IAAP;AACD;;;;EAhCqC,0B;;AAmCxC,eAAe,yBAAf","sourceRoot":"","sourcesContent":["import RecoverPasswordHandlerBase from '../RecoverPasswordHandlerBase';\r\nimport RecoverRequest from '../../RecoverRequest';\r\nimport Environment from '../../../Environment';\r\nclass AjaxRemindPasswordHandler extends RecoverPasswordHandlerBase {\r\n    recover(request) {\r\n        super.recover(request);\r\n        if (this.canHandle(request)) {\r\n            const url = '/front/employee/password/remind';\r\n            const formData = new FormData();\r\n            formData.append('email', request.email);\r\n            formData.append('captcha', request.captcha);\r\n            const successHandler = ({ data: { success, messages } }) => {\r\n                if (success) {\r\n                    return this.doNextHandler(request);\r\n                }\r\n                const errResReq = RecoverRequest.clone(request);\r\n                errResReq.error = super.createRecoverError(`Запрос ${url}`, null, messages);\r\n                return this.doNextHandler(errResReq);\r\n            };\r\n            const failHandler = (error) => {\r\n                const errorRequest = RecoverRequest.clone(request);\r\n                errorRequest.error = super.createRecoverError(`Запрос ${url}`, error);\r\n                return this.doNextHandler(errorRequest);\r\n            };\r\n            return Environment.getAuthGateway().remind(url, formData).then(successHandler).catch(failHandler);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        return true;\r\n    }\r\n}\r\nexport default AjaxRemindPasswordHandler;\r\n//# sourceMappingURL=AjaxRemindPasswordHandler.js.map"]},"metadata":{},"sourceType":"module"}