{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Region = /*#__PURE__*/function () {\n  _createClass(Region, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return !value ? 'Введите регион' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Region.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      var result = value;\n\n      if (result) {\n        result = result.trimStart();\n      }\n\n      return result && result.slice(0, 50);\n    }\n  }, {\n    key: \"CODE_REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9]+$');\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Начните вводить название региона и выберите его из выпадающего списка';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите регион';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Регион';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'region';\n    }\n  }]);\n\n  function Region(code, title, id) {\n    _classCallCheck(this, Region);\n\n    if (!code || !title) {\n      throw new Error('Невозможно создать регион. Передайте код и название региона.');\n    }\n\n    if (typeof code !== 'string') {\n      throw new Error('Код региона должен быть строкой');\n    }\n\n    if (!Region.CODE_REG_EXP.test(code)) {\n      throw new Error('Неверный формат кода региона');\n    }\n\n    this._code = code;\n    this._title = title;\n\n    if (id) {\n      this._id = id;\n    }\n  }\n\n  _createClass(Region, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Region(this._code, this._title, this._id);\n    }\n  }, {\n    key: \"code\",\n    get: function get() {\n      return this._code;\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._title;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._title;\n    }\n  }]);\n\n  return Region;\n}();\n\nexport default Region;","map":{"version":3,"sources":["../../../../src/domain/common/address/Region.js"],"names":[],"mappings":";;;IAAM,M;;;6BAKY,K,EAAK;AACnB,aAAO,CAAC,KAAD,GAAS,gBAAT,GAA4B,SAAnC;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAR;AACD;;;yBAkBW,K,EAAK;AACf,UAAI,MAAM,GAAG,KAAb;;AACA,UAAI,MAAJ,EAAY;AACV,QAAA,MAAM,GAAG,MAAM,CAAC,SAAP,EAAT;AACD;;AACD,aAAO,MAAM,IAAI,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAjB;AACD;;;wBAlCsB;AACrB,aAAO,IAAI,MAAJ,CAAW,UAAX,CAAP;AACD;;;wBAUc;AACb,aAAO,uEAAP;AACD;;;wBAEqB;AACpB,aAAO,gBAAP;AACD;;;wBAEc;AACb,aAAO,QAAP;AACD;;;wBAEe;AACd,aAAO,QAAP;AACD;;;AAUD,kBAAY,IAAZ,EAAkB,KAAlB,EAAyB,EAAzB,EAA2B;AAAA;;AACzB,QAAI,CAAC,IAAD,IAAS,CAAC,KAAd,EAAqB;AACnB,YAAM,IAAI,KAAJ,CAAU,8DAAV,CAAN;AACD;;AACD,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACD,QAAI,CAAC,MAAM,CAAC,YAAP,CAAoB,IAApB,CAAyB,IAAzB,CAAL,EAAqC;AACnC,YAAM,IAAI,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,MAAL,GAAc,KAAd;;AAEA,QAAI,EAAJ,EAAQ;AACN,WAAK,GAAL,GAAW,EAAX;AACD;AACF;;;;4BAEI;AACH,aAAO,IAAI,MAAJ,CAAW,KAAK,KAAhB,EAAuB,KAAK,MAA5B,EAAoC,KAAK,GAAzC,CAAP;AACD;;;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEK;AACJ,aAAO,KAAK,GAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,MAAf","sourceRoot":"","sourcesContent":["class Region {\r\n    static get CODE_REG_EXP() {\r\n        return new RegExp('^[0-9]+$');\r\n    }\r\n    static validate(value) {\r\n        return !value ? 'Введите регион' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Region.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Начните вводить название региона и выберите его из выпадающего списка';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите регион';\r\n    }\r\n    static get name() {\r\n        return 'Регион';\r\n    }\r\n    static get field() {\r\n        return 'region';\r\n    }\r\n    static mask(value) {\r\n        let result = value;\r\n        if (result) {\r\n            result = result.trimStart();\r\n        }\r\n        return result && result.slice(0, 50);\r\n    }\r\n    constructor(code, title, id) {\r\n        if (!code || !title) {\r\n            throw new Error('Невозможно создать регион. Передайте код и название региона.');\r\n        }\r\n        if (typeof code !== 'string') {\r\n            throw new Error('Код региона должен быть строкой');\r\n        }\r\n        if (!Region.CODE_REG_EXP.test(code)) {\r\n            throw new Error('Неверный формат кода региона');\r\n        }\r\n        this._code = code;\r\n        this._title = title;\r\n        if (id) {\r\n            this._id = id;\r\n        }\r\n    }\r\n    clone() {\r\n        return new Region(this._code, this._title, this._id);\r\n    }\r\n    get code() {\r\n        return this._code;\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get value() {\r\n        return this._title;\r\n    }\r\n}\r\nexport default Region;\r\n//# sourceMappingURL=Region.js.map"]},"metadata":{},"sourceType":"module"}