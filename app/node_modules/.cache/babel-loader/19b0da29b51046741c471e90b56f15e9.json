{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useField}from'formik';import FieldLabel from'../FieldLabel';import FieldError from'../FieldError';import{StyledFormField,FieldWrapper}from'../Form.styles';import Select from'../../Select';var SelectField=function SelectField(_ref){var name=_ref.name,label=_ref.label,value=_ref.value,_ref$placeholder=_ref.placeholder,placeholder=_ref$placeholder===void 0?'':_ref$placeholder,options=_ref.options,_ref$hideErrors=_ref.hideErrors,hideErrors=_ref$hideErrors===void 0?false:_ref$hideErrors,rest=_objectWithoutProperties(_ref,[\"name\",\"label\",\"value\",\"placeholder\",\"options\",\"hideErrors\"]);var _useField=useField({name:name}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var touched=meta.touched,error=meta.error;var setValue=helpers.setValue,setTouched=helpers.setTouched;var handleOnChange=function handleOnChange(option,actionData){setTouched(true);if(actionData.action==='set-value'||actionData.action==='select-option'){setValue(option.value);}if(actionData.action==='clear'){setValue('');}};var handleOnBlur=function handleOnBlur(){setTouched(true);};return/*#__PURE__*/React.createElement(StyledFormField,null,label&&/*#__PURE__*/React.createElement(FieldLabel,{name:name},label),/*#__PURE__*/React.createElement(FieldWrapper,null,/*#__PURE__*/React.createElement(Select,Object.assign({name:field.name,placeholder:placeholder,options:options,value:options?options.find(function(option){return option.value===field.value;}):'',onChange:handleOnChange,onBlur:handleOnBlur,error:error,touched:touched,hideErrors:hideErrors},rest))),!hideErrors&&touched&&error?/*#__PURE__*/React.createElement(FieldError,null,error):null);};export default SelectField;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/Form/fields/SelectField.tsx"],"names":["React","useField","FieldLabel","FieldError","StyledFormField","FieldWrapper","Select","SelectField","name","label","value","placeholder","options","hideErrors","rest","field","meta","helpers","touched","error","setValue","setTouched","handleOnChange","option","actionData","action","handleOnBlur","find"],"mappings":"0WAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,gBAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAmBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAQI,IAPtBC,CAAAA,IAOsB,MAPtBA,IAOsB,CANtBC,KAMsB,MANtBA,KAMsB,CALtBC,KAKsB,MALtBA,KAKsB,uBAJtBC,WAIsB,CAJtBA,WAIsB,2BAJR,EAIQ,kBAHtBC,OAGsB,MAHtBA,OAGsB,sBAFtBC,UAEsB,CAFtBA,UAEsB,0BAFT,KAES,iBADnBC,IACmB,4GACSb,QAAQ,CAAC,CAAEO,IAAI,CAAJA,IAAF,CAAD,CADjB,wCACfO,KADe,eACRC,IADQ,eACFC,OADE,kBAEdC,CAAAA,OAFc,CAEKF,IAFL,CAEdE,OAFc,CAELC,KAFK,CAEKH,IAFL,CAELG,KAFK,IAGdC,CAAAA,QAHc,CAGWH,OAHX,CAGdG,QAHc,CAGJC,UAHI,CAGWJ,OAHX,CAGJI,UAHI,CAItB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAiBC,UAAjB,CAA2C,CAChEH,UAAU,CAAC,IAAD,CAAV,CACA,GAAIG,UAAU,CAACC,MAAX,GAAsB,WAAtB,EAAqCD,UAAU,CAACC,MAAX,GAAsB,eAA/D,CAAgF,CAC9EL,QAAQ,CAACG,MAAM,CAACb,KAAR,CAAR,CACD,CACD,GAAIc,UAAU,CAACC,MAAX,GAAsB,OAA1B,CAAmC,CACjCL,QAAQ,CAAC,EAAD,CAAR,CACD,CACF,CARD,CASA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBL,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,CAGA,mBACE,oBAAC,eAAD,MACGZ,KAAK,eAAI,oBAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EAAyBC,KAAzB,CADZ,cAGE,oBAAC,YAAD,mBACE,oBAAC,MAAD,gBACE,IAAI,CAAEM,KAAK,CAACP,IADd,CAEE,WAAW,CAAEG,WAFf,CAGE,OAAO,CAAEC,OAHX,CAIE,KAAK,CAAEA,OAAO,CAAGA,OAAO,CAACe,IAAR,CAAa,SAACJ,MAAD,QAAoBA,CAAAA,MAAM,CAACb,KAAP,GAAiBK,KAAK,CAACL,KAA3C,EAAb,CAAH,CAAoE,EAJpF,CAKE,QAAQ,CAAEY,cALZ,CAME,MAAM,CAAEI,YANV,CAOE,KAAK,CAAEP,KAPT,CAQE,OAAO,CAAED,OARX,CASE,UAAU,CAAEL,UATd,EAUMC,IAVN,EADF,CAHF,CAkBG,CAACD,UAAD,EAAeK,OAAf,EAA0BC,KAA1B,cAAkC,oBAAC,UAAD,MAAaA,KAAb,CAAlC,CAAqE,IAlBxE,CADF,CAsBD,CA9CD,CAgDA,cAAeZ,CAAAA,WAAf","sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\nimport FieldLabel from '../FieldLabel';\r\nimport FieldError from '../FieldError';\r\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\r\nimport Select from '../../Select';\r\n\r\ntype Option = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\ntype SelectFieldProps = {\r\n  name: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  value?: string | null;\r\n  options: Option[];\r\n  isClearable?: boolean;\r\n  isSearchable?: boolean;\r\n  hideErrors?: boolean;\r\n  onChange?: (value: any) => void;\r\n};\r\n\r\nconst SelectField = ({\r\n  name,\r\n  label,\r\n  value,\r\n  placeholder = '',\r\n  options,\r\n  hideErrors = false,\r\n  ...rest\r\n}: SelectFieldProps) => {\r\n  const [field, meta, helpers] = useField({ name });\r\n  const { touched, error } = meta;\r\n  const { setValue, setTouched } = helpers;\r\n  const handleOnChange = (option: Option, actionData: any): void => {\r\n    setTouched(true);\r\n    if (actionData.action === 'set-value' || actionData.action === 'select-option') {\r\n      setValue(option.value);\r\n    }\r\n    if (actionData.action === 'clear') {\r\n      setValue('');\r\n    }\r\n  };\r\n  const handleOnBlur = () => {\r\n    setTouched(true);\r\n  };\r\n  return (\r\n    <StyledFormField>\r\n      {label && <FieldLabel name={name}>{label}</FieldLabel>}\r\n\r\n      <FieldWrapper>\r\n        <Select\r\n          name={field.name}\r\n          placeholder={placeholder}\r\n          options={options}\r\n          value={options ? options.find((option: Option) => option.value === field.value) : ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={error}\r\n          touched={touched}\r\n          hideErrors={hideErrors}\r\n          {...rest}\r\n        />\r\n      </FieldWrapper>\r\n\r\n      {!hideErrors && touched && error ? <FieldError>{error}</FieldError> : null}\r\n    </StyledFormField>\r\n  );\r\n};\r\n\r\nexport default SelectField;\r\n"]},"metadata":{},"sourceType":"module"}