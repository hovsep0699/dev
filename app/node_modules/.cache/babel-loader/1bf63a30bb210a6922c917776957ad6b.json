{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from'react';/* \r\n Legal entity = անհատ ձեռներեց\r\n  Individual entrepreneur = իրավաբանական անձ\r\n  International Individual entrepreneur = միջազգային իրավաբանական անձ\r\n\r\n \r\n */export var UserType;(function(UserType){UserType[\"LegalEntity\"]=\"Legal entity\";UserType[\"IndividualEntrepreneur\"]=\"Individual entrepreneur\";UserType[\"InternationalIndividualEntrepreneur\"]=\"International Individual entrepreneur\";})(UserType||(UserType={}));var GlobalStateContext=createContext(undefined);export var GlobalStateProvider=function GlobalStateProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCompany=_useState2[0],setIsCompany=_useState2[1];var _useState3=useState(UserType.LegalEntity),_useState4=_slicedToArray(_useState3,2),userType=_useState4[0],setUserType=_useState4[1];// Default to 'Legal entity'\nvar _useState5=useState([{doviritel:'ООО \"Ромашка и Лютики\"',predstavitel:'Петров Петр Петрович (123456789123)',identifier:'98fca4ad-5a0c-4a4a-9d25-0b4d2f6b837e',dataVidachi:'16.05.2026',dataNachala:'16.05.2027 12:00:00+03:00',dataOkonchaniya:'16.05.2028 12:00:00+03:00',status:'Отозвана',isUsed:false},{doviritel:'ООО \"Ромашка облачко и партнеры\"',predstavitel:'Петров Петр Петрович (123456789123)',identifier:'a1b3c2d4-e5f6-4b7a-89c0-1d3e3f45g6h1',dataVidachi:'16.05.2026',dataNachala:'16.05.2027 12:00:00+03:00',dataOkonchaniya:'16.05.2028 12:00:00+03:00',status:'Действительна',isUsed:true}]),_useState6=_slicedToArray(_useState5,2),records=_useState6[0],setRecords=_useState6[1];return/*#__PURE__*/React.createElement(GlobalStateContext.Provider,{value:{records:records,setRecords:setRecords,isCompany:isCompany,setIsCompany:setIsCompany,userType:userType,setUserType:setUserType}},children);};export var useGlobalState=function useGlobalState(){var context=useContext(GlobalStateContext);if(context===undefined){throw new Error('useGlobalState must be used within a GlobalStateProvider');}return context;};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/mocks/context/GlobalState.tsx"],"names":["React","createContext","useContext","useState","UserType","GlobalStateContext","undefined","GlobalStateProvider","children","isCompany","setIsCompany","LegalEntity","userType","setUserType","doviritel","predstavitel","identifier","dataVidachi","dataNachala","dataOkonchaniya","status","isUsed","records","setRecords","useGlobalState","context","Error"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAAsE,OAAtE,CAaC;;;;;;GAQD,UAAYC,CAAAA,QAAZ,C,UAAYA,Q,EAAAA,Q,+BAAAA,Q,qDAAAA,Q,mFAAAA,Q,GAAAA,Q,MAeZ,GAAMC,CAAAA,kBAAkB,CAAGJ,aAAa,CAAqCK,SAArC,CAAxC,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAA2C,IAAxCC,CAAAA,QAAwC,MAAxCA,QAAwC,eAC1CL,QAAQ,CAAU,KAAV,CADkC,wCACrEM,SADqE,eAC1DC,YAD0D,8BAE5CP,QAAQ,CAAWC,QAAQ,CAACO,WAApB,CAFoC,yCAErEC,QAFqE,eAE3DC,WAF2D,eAEF;AAFE,eAG9CV,QAAQ,CAAe,CACnD,CACEW,SAAS,CAAE,wBADb,CAEEC,YAAY,CAAE,qCAFhB,CAGEC,UAAU,CAAE,sCAHd,CAIEC,WAAW,CAAE,YAJf,CAKEC,WAAW,CAAE,2BALf,CAMEC,eAAe,CAAE,2BANnB,CAOEC,MAAM,CAAE,UAPV,CAQEC,MAAM,CAAE,KARV,CADmD,CAWnD,CACEP,SAAS,CAAE,kCADb,CAEEC,YAAY,CAAE,qCAFhB,CAGEC,UAAU,CAAE,sCAHd,CAIEC,WAAW,CAAE,YAJf,CAKEC,WAAW,CAAE,2BALf,CAMEC,eAAe,CAAE,2BANnB,CAOEC,MAAM,CAAE,eAPV,CAQEC,MAAM,CAAE,IARV,CAXmD,CAAf,CAHsC,yCAGrEC,OAHqE,eAG5DC,UAH4D,eA0B5E,mBACE,oBAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAED,OAAO,CAAPA,OAAF,CAAWC,UAAU,CAAVA,UAAX,CAAuBd,SAAS,CAATA,SAAvB,CAAkCC,YAAY,CAAZA,YAAlC,CAAgDE,QAAQ,CAARA,QAAhD,CAA0DC,WAAW,CAAXA,WAA1D,CAApC,EACGL,QADH,CADF,CAKD,CA/BM,CAiCP,MAAO,IAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,GAAMC,CAAAA,OAAO,CAAGvB,UAAU,CAACG,kBAAD,CAA1B,CACA,GAAIoB,OAAO,GAAKnB,SAAhB,CAA2B,CACzB,KAAM,IAAIoB,CAAAA,KAAJ,CAAU,0DAAV,CAAN,CACD,CACD,MAAOD,CAAAA,OAAP,CACD,CANM","sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface RecordData {\r\n  doviritel: string;\r\n  predstavitel: string;\r\n  identifier: string;\r\n  dataVidachi: string;\r\n  dataNachala: string;\r\n  dataOkonchaniya: string;\r\n  status: string;\r\n  isUsed: boolean;\r\n}\r\n\r\n /* \r\n Legal entity = անհատ ձեռներեց\r\n  Individual entrepreneur = իրավաբանական անձ\r\n  International Individual entrepreneur = միջազգային իրավաբանական անձ\r\n\r\n \r\n */\r\n\r\nexport enum UserType {\r\n  LegalEntity = 'Legal entity',\r\n  IndividualEntrepreneur = 'Individual entrepreneur',\r\n  InternationalIndividualEntrepreneur = 'International Individual entrepreneur',\r\n}\r\n\r\ninterface GlobalStateContextType {\r\n  records: RecordData[];\r\n  setRecords: React.Dispatch<React.SetStateAction<RecordData[]>>;\r\n  isCompany: boolean;\r\n  setIsCompany: React.Dispatch<React.SetStateAction<boolean>>;\r\n  userType: UserType;\r\n  setUserType: React.Dispatch<React.SetStateAction<UserType>>;\r\n}\r\n\r\nconst GlobalStateContext = createContext<GlobalStateContextType | undefined>(undefined);\r\n\r\nexport const GlobalStateProvider = ({ children }: { children: ReactNode }) => {\r\n  const [isCompany, setIsCompany] = useState<boolean>(false);\r\n  const [userType, setUserType] = useState<UserType>(UserType.LegalEntity); // Default to 'Legal entity'\r\n  const [records, setRecords] = useState<RecordData[]>([\r\n    {\r\n      doviritel: 'ООО \"Ромашка и Лютики\"',\r\n      predstavitel: 'Петров Петр Петрович (123456789123)',\r\n      identifier: '98fca4ad-5a0c-4a4a-9d25-0b4d2f6b837e',\r\n      dataVidachi: '16.05.2026',\r\n      dataNachala: '16.05.2027 12:00:00+03:00',\r\n      dataOkonchaniya: '16.05.2028 12:00:00+03:00',\r\n      status: 'Отозвана',\r\n      isUsed: false,\r\n    },\r\n    {\r\n      doviritel: 'ООО \"Ромашка облачко и партнеры\"',\r\n      predstavitel: 'Петров Петр Петрович (123456789123)',\r\n      identifier: 'a1b3c2d4-e5f6-4b7a-89c0-1d3e3f45g6h1',\r\n      dataVidachi: '16.05.2026',\r\n      dataNachala: '16.05.2027 12:00:00+03:00',\r\n      dataOkonchaniya: '16.05.2028 12:00:00+03:00',\r\n      status: 'Действительна',\r\n      isUsed: true,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={{ records, setRecords, isCompany, setIsCompany, userType, setUserType }}>\r\n      {children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalState = () => {\r\n  const context = useContext(GlobalStateContext);\r\n  if (context === undefined) {\r\n    throw new Error('useGlobalState must be used within a GlobalStateProvider');\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}