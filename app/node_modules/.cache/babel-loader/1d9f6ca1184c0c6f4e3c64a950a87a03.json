{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Environment from '../../Environment';\n\nvar ContractorService = /*#__PURE__*/function () {\n  function ContractorService() {\n    _classCallCheck(this, ContractorService);\n  }\n\n  _createClass(ContractorService, [{\n    key: \"searchLocalCompany\",\n\n    /**\r\n     * Поиск ЮЛ/ИП для создания приглашения локально\r\n     * @param {string|undefined} inn\r\n     * @param {string|undefined} name\r\n     * @param {number|undefined} offset\r\n     */\n    value: function searchLocalCompany(inn, name, offset) {\n      return Environment.getContractorGateway().searchLocalCompany(inn, name, offset);\n    }\n    /**\r\n     * Поиск ЮЛ/ИП для создания приглашения - Локальный роуминг\r\n     */\n\n  }, {\n    key: \"searchLocalRoamingCompany\",\n    value: function searchLocalRoamingCompany(inn, offset, limit) {\n      return Environment.getContractorGateway().searchLocalRoamingCompany(inn, offset, limit);\n    }\n    /**\r\n     * Получить список контрагентов ФЛ\r\n     * @param {object} payload\r\n     */\n\n  }, {\n    key: \"searchNaturalEntity\",\n    value: function searchNaturalEntity(payload) {\n      return Environment.getContractorGateway().searchNaturalEntity(payload);\n    }\n    /**\r\n     * Cоздание приглашения ФЛ - Локально\r\n     */\n\n  }, {\n    key: \"createLocalInvitationPerson\",\n    value: function createLocalInvitationPerson(type, personID) {\n      return Environment.getContractorGateway().createLocalInvitationPerson(type, personID);\n    }\n    /**\r\n     * Cоздание приглашения ЮЛ - Локально\r\n     */\n\n  }, {\n    key: \"createLocalInvitationCompany\",\n    value: function createLocalInvitationCompany(type, companyID) {\n      return Environment.getContractorGateway().createLocalInvitationCompany(type, companyID);\n    }\n    /**\r\n     * Создание приглашения ЮЛ - Роуминг\r\n     */\n\n  }, {\n    key: \"createRoamingInvitationCompany\",\n    value: function createRoamingInvitationCompany(type, fnsUid, inn) {\n      return Environment.getContractorGateway().createRoamingInvitationCompany(type, fnsUid, inn);\n    }\n    /**\r\n     * Создание приглашения ЮЛ - Локальный Роуминг\r\n     */\n\n  }, {\n    key: \"createLocalRoamingInvitationCompany\",\n    value: function createLocalRoamingInvitationCompany(type, fnsUid, networkId) {\n      return Environment.getContractorGateway().createLocalRoamingInvitationCompany(type, fnsUid, networkId);\n    }\n    /**\r\n     * Создание приглашения ЮЛ - 1С-ЭДО\r\n     */\n\n  }, {\n    key: \"createTaxcomInvitationCompany\",\n    value: function createTaxcomInvitationCompany(type, fnsUid, inn) {\n      return Environment.getContractorGateway().createTaxcomInvitationCompany(type, fnsUid, inn);\n    }\n    /**\r\n     * Просмотр входящих приглашений\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     */\n\n  }, {\n    key: \"getInvitationIncome\",\n    value: function getInvitationIncome(limit, offset, name, surname, patronymic, inn) {\n      return Environment.getContractorGateway().getInvitationIncome(limit, offset, name, surname, patronymic, inn);\n    }\n    /**\r\n     * Просмотр исходящих приглашений\r\n     */\n\n  }, {\n    key: \"getInvitationOutcome\",\n    value: function getInvitationOutcome(limit, offset, name, surname, patronymic, inn) {\n      return Environment.getContractorGateway().getInvitationOutcome(limit, offset, name, surname, patronymic, inn);\n    }\n    /**\r\n     * Получить список контрагентов ЮЛ/ИП\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Наименование\r\n     * @param {string|undefined} inn - ИНН\r\n     */\n\n  }, {\n    key: \"getLegalEntityContractors\",\n    value: function getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status) {\n      return Environment.getContractorGateway().getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status);\n    }\n    /**\r\n    * Получить список контрагентов ФЛ\r\n    * @param {number|undefined} limit - Ограничение выборки\r\n    * @param {number|undefined} offset - Пропустить записей\r\n    * @param {string|undefined} name - Имя\r\n    * @param {string|undefined} patronymic - Отчество\r\n    * @param {string|undefined} surname - Фамилия\r\n    * @param {string|undefined} socialNumber - СНИЛС\r\n    */\n\n  }, {\n    key: \"getNaturalEntityContractors\",\n    value: function getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber) {\n      return Environment.getContractorGateway().getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber);\n    }\n    /** Получить список операторов */\n\n  }, {\n    key: \"getOperators\",\n    value: function getOperators() {\n      return Environment.getContractorGateway().getOperators();\n    }\n    /** Заблокировать контрагента */\n\n  }, {\n    key: \"blockContractor\",\n    value: function blockContractor(id) {\n      return Environment.getContractorGateway().blockContractor(id);\n    }\n    /** Принять или отклонить приглашение */\n\n  }, {\n    key: \"invitationDecision\",\n    value: function invitationDecision(id, decision) {\n      return Environment.getContractorGateway().invitationDecision(id, decision);\n    }\n    /** Получить список групп */\n\n  }, {\n    key: \"getContractorsGroup\",\n    value: function getContractorsGroup(offset, limit) {\n      return Environment.getContractorGateway().getContractorsGroup(offset, limit);\n    }\n    /** Изменить название группы контрагентов */\n\n  }, {\n    key: \"changeContractorsGroupTitle\",\n    value: function changeContractorsGroupTitle(id, title) {\n      return Environment.getContractorGateway().changeContractorsGroupTitle(id, title);\n    }\n    /** Получить список ЮЛ/ИП в группе контрагентов или список компаний доступных для добавления в группу */\n\n  }, {\n    key: \"getLegalEntityGroup\",\n    value: function getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn) {\n      return Environment.getContractorGateway().getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn);\n    }\n    /** Получить список ФЛ в группе контрагентов или список ФЛ доступных для добавления в группу */\n\n  }, {\n    key: \"getNaturalEntityGroup\",\n    value: function getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber) {\n      return Environment.getContractorGateway().getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber);\n    }\n    /** Получить список сотрудников в группе контрагентов или список сотрудников доступных для добавления в группу */\n\n  }, {\n    key: \"getEmployeeGroup\",\n    value: function getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position) {\n      return Environment.getContractorGateway().getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position);\n    }\n    /** Добавление контрагента в группу */\n\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().addToGroup(groupId, contractorId);\n    }\n    /** Удаление контрагента из группы */\n\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().removeFromGroup(groupId, contractorId);\n    }\n    /** Добавление сотрудника в группу */\n\n  }, {\n    key: \"addEmployeeToGroup\",\n    value: function addEmployeeToGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().addEmployeeToGroup(groupId, contractorId);\n    }\n    /** Удаление сотрудника из группы */\n\n  }, {\n    key: \"removeEmployeeFromGroup\",\n    value: function removeEmployeeFromGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().removeEmployeeFromGroup(groupId, contractorId);\n    }\n    /** Создание новой группы */\n\n  }, {\n    key: \"newGroupCreate\",\n    value: function newGroupCreate(title) {\n      return Environment.getContractorGateway().newGroupCreate(title);\n    }\n    /** Удаление группы */\n\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(id) {\n      return Environment.getContractorGateway().removeGroup(id);\n    }\n    /** Получить группы контрагента \"в которые он добавлен\"/\"в которых еще не состоит\" */\n\n  }, {\n    key: \"getContractorGroups\",\n    value: function getContractorGroups(id, inverseJoin, offset, limit) {\n      return Environment.getContractorGateway().getContractorGroups(id, inverseJoin, offset, limit);\n    }\n    /** Добавить контрагента в группу */\n\n  }, {\n    key: \"addContractorToGroup\",\n    value: function addContractorToGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().addContractorToGroup(groupId, contractorId);\n    }\n    /** Исключить контрагента из группы */\n\n  }, {\n    key: \"deleteContractorGroup\",\n    value: function deleteContractorGroup(groupId, contractorId) {\n      return Environment.getContractorGateway().deleteContractorGroup(groupId, contractorId);\n    }\n    /** Получить информацию о ФЛ */\n\n  }, {\n    key: \"getPersonInfo\",\n    value: function getPersonInfo(id) {\n      return Environment.getContractorGateway().getPersonInfo(id);\n    }\n    /** Получить информацию о ЮЛ */\n\n  }, {\n    key: \"getCompanyInfo\",\n    value: function getCompanyInfo(id) {\n      return Environment.getContractorGateway().getCompanyInfo(id);\n    }\n  }]);\n\n  return ContractorService;\n}();\n\nvar instance = new ContractorService();\nexport default instance;","map":{"version":3,"sources":["../../../../src/application/contractor/common/ContractorService.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Environment from '../../Environment';\r\nclass ContractorService {\r\n    /**\r\n     * Поиск ЮЛ/ИП для создания приглашения локально\r\n     * @param {string|undefined} inn\r\n     * @param {string|undefined} name\r\n     * @param {number|undefined} offset\r\n     */\r\n    searchLocalCompany(inn, name, offset) {\r\n        return Environment.getContractorGateway().searchLocalCompany(inn, name, offset);\r\n    }\r\n    /**\r\n     * Поиск ЮЛ/ИП для создания приглашения - Локальный роуминг\r\n     */\r\n    searchLocalRoamingCompany(inn, offset, limit) {\r\n        return Environment.getContractorGateway().searchLocalRoamingCompany(inn, offset, limit);\r\n    }\r\n    /**\r\n     * Получить список контрагентов ФЛ\r\n     * @param {object} payload\r\n     */\r\n    searchNaturalEntity(payload) {\r\n        return Environment.getContractorGateway().searchNaturalEntity(payload);\r\n    }\r\n    /**\r\n     * Cоздание приглашения ФЛ - Локально\r\n     */\r\n    createLocalInvitationPerson(type, personID) {\r\n        return Environment.getContractorGateway().createLocalInvitationPerson(type, personID);\r\n    }\r\n    /**\r\n     * Cоздание приглашения ЮЛ - Локально\r\n     */\r\n    createLocalInvitationCompany(type, companyID) {\r\n        return Environment.getContractorGateway().createLocalInvitationCompany(type, companyID);\r\n    }\r\n    /**\r\n     * Создание приглашения ЮЛ - Роуминг\r\n     */\r\n    createRoamingInvitationCompany(type, fnsUid, inn) {\r\n        return Environment.getContractorGateway().createRoamingInvitationCompany(type, fnsUid, inn);\r\n    }\r\n    /**\r\n     * Создание приглашения ЮЛ - Локальный Роуминг\r\n     */\r\n    createLocalRoamingInvitationCompany(type, fnsUid, networkId) {\r\n        return Environment.getContractorGateway().createLocalRoamingInvitationCompany(type, fnsUid, networkId);\r\n    }\r\n    /**\r\n     * Создание приглашения ЮЛ - 1С-ЭДО\r\n     */\r\n    createTaxcomInvitationCompany(type, fnsUid, inn) {\r\n        return Environment.getContractorGateway().createTaxcomInvitationCompany(type, fnsUid, inn);\r\n    }\r\n    /**\r\n     * Просмотр входящих приглашений\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     */\r\n    getInvitationIncome(limit, offset, name, surname, patronymic, inn) {\r\n        return Environment.getContractorGateway().getInvitationIncome(limit, offset, name, surname, patronymic, inn);\r\n    }\r\n    /**\r\n     * Просмотр исходящих приглашений\r\n     */\r\n    getInvitationOutcome(limit, offset, name, surname, patronymic, inn) {\r\n        return Environment.getContractorGateway().getInvitationOutcome(limit, offset, name, surname, patronymic, inn);\r\n    }\r\n    /**\r\n     * Получить список контрагентов ЮЛ/ИП\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Наименование\r\n     * @param {string|undefined} inn - ИНН\r\n     */\r\n    getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status) {\r\n        return Environment.getContractorGateway().getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status);\r\n    }\r\n    /**\r\n    * Получить список контрагентов ФЛ\r\n    * @param {number|undefined} limit - Ограничение выборки\r\n    * @param {number|undefined} offset - Пропустить записей\r\n    * @param {string|undefined} name - Имя\r\n    * @param {string|undefined} patronymic - Отчество\r\n    * @param {string|undefined} surname - Фамилия\r\n    * @param {string|undefined} socialNumber - СНИЛС\r\n    */\r\n    getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber) {\r\n        return Environment.getContractorGateway().getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber);\r\n    }\r\n    /** Получить список операторов */\r\n    getOperators() {\r\n        return Environment.getContractorGateway().getOperators();\r\n    }\r\n    /** Заблокировать контрагента */\r\n    blockContractor(id) {\r\n        return Environment.getContractorGateway().blockContractor(id);\r\n    }\r\n    /** Принять или отклонить приглашение */\r\n    invitationDecision(id, decision) {\r\n        return Environment.getContractorGateway().invitationDecision(id, decision);\r\n    }\r\n    /** Получить список групп */\r\n    getContractorsGroup(offset, limit) {\r\n        return Environment.getContractorGateway().getContractorsGroup(offset, limit);\r\n    }\r\n    /** Изменить название группы контрагентов */\r\n    changeContractorsGroupTitle(id, title) {\r\n        return Environment.getContractorGateway().changeContractorsGroupTitle(id, title);\r\n    }\r\n    /** Получить список ЮЛ/ИП в группе контрагентов или список компаний доступных для добавления в группу */\r\n    getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn) {\r\n        return Environment.getContractorGateway().getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn);\r\n    }\r\n    /** Получить список ФЛ в группе контрагентов или список ФЛ доступных для добавления в группу */\r\n    getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber) {\r\n        return Environment.getContractorGateway().getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber);\r\n    }\r\n    /** Получить список сотрудников в группе контрагентов или список сотрудников доступных для добавления в группу */\r\n    getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position) {\r\n        return Environment.getContractorGateway().getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position);\r\n    }\r\n    /** Добавление контрагента в группу */\r\n    addToGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().addToGroup(groupId, contractorId);\r\n    }\r\n    /** Удаление контрагента из группы */\r\n    removeFromGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().removeFromGroup(groupId, contractorId);\r\n    }\r\n    /** Добавление сотрудника в группу */\r\n    addEmployeeToGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().addEmployeeToGroup(groupId, contractorId);\r\n    }\r\n    /** Удаление сотрудника из группы */\r\n    removeEmployeeFromGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().removeEmployeeFromGroup(groupId, contractorId);\r\n    }\r\n    /** Создание новой группы */\r\n    newGroupCreate(title) {\r\n        return Environment.getContractorGateway().newGroupCreate(title);\r\n    }\r\n    /** Удаление группы */\r\n    removeGroup(id) {\r\n        return Environment.getContractorGateway().removeGroup(id);\r\n    }\r\n    /** Получить группы контрагента \"в которые он добавлен\"/\"в которых еще не состоит\" */\r\n    getContractorGroups(id, inverseJoin, offset, limit) {\r\n        return Environment.getContractorGateway().getContractorGroups(id, inverseJoin, offset, limit);\r\n    }\r\n    /** Добавить контрагента в группу */\r\n    addContractorToGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().addContractorToGroup(groupId, contractorId);\r\n    }\r\n    /** Исключить контрагента из группы */\r\n    deleteContractorGroup(groupId, contractorId) {\r\n        return Environment.getContractorGateway().deleteContractorGroup(groupId, contractorId);\r\n    }\r\n    /** Получить информацию о ФЛ */\r\n    getPersonInfo(id) {\r\n        return Environment.getContractorGateway().getPersonInfo(id);\r\n    }\r\n    /** Получить информацию о ЮЛ */\r\n    getCompanyInfo(id) {\r\n        return Environment.getContractorGateway().getCompanyInfo(id);\r\n    }\r\n}\r\nconst instance = new ContractorService();\r\nexport default instance;\r\n//# sourceMappingURL=ContractorService.js.map"]},"metadata":{},"sourceType":"module"}