{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport AJAX from '../../../infrastructure/AJAX';\n/**\r\n * Контрагенты\r\n */\n\nvar ContractorGateway = /*#__PURE__*/function () {\n  function ContractorGateway() {\n    _classCallCheck(this, ContractorGateway);\n  }\n\n  _createClass(ContractorGateway, [{\n    key: \"searchNaturalEntity\",\n\n    /**\r\n     * Поиск физ лица - Локальный\r\n     * @param {object} payload\r\n     */\n    value: function searchNaturalEntity(payload) {\n      return AJAX.doGet('/front/invitation/person/search_local', payload);\n    }\n    /**\r\n     * Поиск ЮЛ/ИП - Локальный\r\n     * @param {string|undefined} inn\r\n     * @param {string|undefined} name\r\n     * @param {number|undefined} offset\r\n     */\n\n  }, {\n    key: \"searchLocalCompany\",\n    value: function searchLocalCompany(inn, name, offset) {\n      return AJAX.doGet('/front/invitation/legal_entity/search_local', {\n        inn: inn,\n        name: name,\n        offset: offset\n      });\n    }\n    /**\r\n     * Поиск ЮЛ/ИП - Локальный роуминг\r\n     * @param {string} inn\r\n     */\n\n  }, {\n    key: \"searchLocalRoamingCompany\",\n    value: function searchLocalRoamingCompany(inn, offset, limit) {\n      return AJAX.doGet('/front/invitation/legal_entity/search_internal_roaming', {\n        inn: inn,\n        offset: offset,\n        limit: limit\n      });\n    }\n    /**\r\n     * создание приглашения ФЛ - Локально\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {number} personId\r\n     */\n\n  }, {\n    key: \"createLocalInvitationPerson\",\n    value: function createLocalInvitationPerson(type, personId) {\n      return AJAX.postJSON('/front/invitation/send', {\n        type: type,\n        personId: personId\n      });\n    }\n    /**\r\n     * создание приглашения ЮЛ - Локально\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {number} companyId\r\n     */\n\n  }, {\n    key: \"createLocalInvitationCompany\",\n    value: function createLocalInvitationCompany(type, companyId) {\n      return AJAX.postJSON('/front/invitation/send', {\n        type: type,\n        companyId: companyId\n      });\n    }\n    /**\r\n     * создание приглашения ЮЛ - Роуминг\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} inn\r\n     */\n\n  }, {\n    key: \"createRoamingInvitationCompany\",\n    value: function createRoamingInvitationCompany(type, fnsUid, inn) {\n      return AJAX.postJSON('/front/invitation/send', {\n        type: type,\n        fnsUid: fnsUid,\n        inn: inn\n      });\n    }\n    /**\r\n     * создание приглашения ЮЛ - Локальный Роуминг\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} networkId\r\n     */\n\n  }, {\n    key: \"createLocalRoamingInvitationCompany\",\n    value: function createLocalRoamingInvitationCompany(type, fnsUid, networkId) {\n      return AJAX.postJSON('/front/invitation/send', {\n        type: type,\n        fnsUid: fnsUid,\n        networkId: networkId\n      });\n    }\n    /**\r\n     * создание приглашения ЮЛ - 1С-ЭДО\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} inn\r\n     */\n\n  }, {\n    key: \"createTaxcomInvitationCompany\",\n    value: function createTaxcomInvitationCompany(type, fnsUid, inn) {\n      return AJAX.postJSON('/front/invitation/send', {\n        type: type,\n        fnsUid: fnsUid,\n        inn: inn\n      });\n    }\n    /**\r\n     * Просмотр входящих приглашений\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     */\n\n  }, {\n    key: \"getInvitationIncome\",\n    value: function getInvitationIncome(limit, offset, name, surname, patronymic, inn) {\n      return AJAX.doGet('/front/invitation/income', {\n        limit: limit,\n        offset: offset,\n        name: name,\n        surname: surname,\n        patronymic: patronymic,\n        inn: inn\n      });\n    }\n    /**\r\n     * Просмотр исходящих приглашений\r\n     */\n\n  }, {\n    key: \"getInvitationOutcome\",\n    value: function getInvitationOutcome(limit, offset, name, surname, patronymic, inn) {\n      return AJAX.doGet('/front/invitation/outcome', {\n        limit: limit,\n        offset: offset,\n        name: name,\n        surname: surname,\n        patronymic: patronymic,\n        inn: inn\n      });\n    }\n    /**\r\n     * Получить список контрагентов ЮЛ/ИП\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Наименование\r\n     * @param {string|undefined} inn - ИНН\r\n     */\n\n  }, {\n    key: \"getLegalEntityContractors\",\n    value: function getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status) {\n      return AJAX.doGet('/front/contractor/legal_entity', {\n        limit: limit,\n        offset: offset,\n        name: name,\n        inn: inn,\n        externalOperator: externalOperator,\n        externalType: externalType,\n        status: status\n      });\n    }\n    /**\r\n     * Получить список контрагентов ФЛ\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Имя\r\n     * @param {string|undefined} patronymic - Отчество\r\n     * @param {string|undefined} surname - Фамилия\r\n     * @param {string|undefined} socialNumber - СНИЛС\r\n     */\n\n  }, {\n    key: \"getNaturalEntityContractors\",\n    value: function getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber) {\n      return AJAX.doGet('/front/contractor/natural_entity', {\n        limit: limit,\n        offset: offset,\n        name: name,\n        patronymic: patronymic,\n        surname: surname,\n        socialNumber: socialNumber\n      });\n    }\n    /** Получить список операторов */\n\n  }, {\n    key: \"getOperators\",\n    value: function getOperators() {\n      return AJAX.doGet('/front/company/connector/');\n    }\n    /** Заблокировать контрагента */\n\n  }, {\n    key: \"blockContractor\",\n    value: function blockContractor(id) {\n      return AJAX.postJSON(\"/front/contractor/relation/\".concat(id, \"/block\"));\n    }\n    /** Принять или отклонить приглашение */\n\n  }, {\n    key: \"invitationDecision\",\n    value: function invitationDecision(id, decision) {\n      return AJAX.postJSON(\"/front/invitation/\".concat(id, \"/decision/\").concat(decision));\n    }\n    /** Получить список групп */\n\n  }, {\n    key: \"getContractorsGroup\",\n    value: function getContractorsGroup(offset) {\n      var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      return AJAX.doGet('/front/contractor_group/', {\n        offset: offset,\n        limit: limit\n      });\n    }\n    /** Изменить название группы контрагентов */\n\n  }, {\n    key: \"changeContractorsGroupTitle\",\n    value: function changeContractorsGroupTitle(id, title) {\n      return AJAX.postJSON(\"/front/contractor_group/\".concat(id), {\n        title: title\n      });\n    }\n    /** Получить список ЮЛ/ИП в группе контрагентов или список компаний доступных для добавления в группу */\n\n  }, {\n    key: \"getLegalEntityGroup\",\n    value: function getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn) {\n      return AJAX.doGet(\"/front/contractor_group/\".concat(id, \"/contractor/legal_entities\"), {\n        limit: limit,\n        offset: offset,\n        inverseJoin: Number(inverseJoin),\n        name: name,\n        inn: inn\n      });\n    }\n    /** Получить список ФЛ в группе контрагентов или список ФЛ доступных для добавления в группу */\n\n  }, {\n    key: \"getNaturalEntityGroup\",\n    value: function getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber) {\n      return AJAX.doGet(\"/front/contractor_group/\".concat(id, \"/contractor/natural_entities\"), {\n        limit: limit,\n        offset: offset,\n        inverseJoin: Number(inverseJoin),\n        name: name,\n        surname: surname,\n        patronymic: patronymic,\n        socialNumber: socialNumber\n      });\n    }\n    /** Получить список сотрудников в группе контрагентов или список сотрудников доступных для добавления в группу */\n\n  }, {\n    key: \"getEmployeeGroup\",\n    value: function getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position) {\n      return AJAX.doGet(\"/front/contractor_group/\".concat(id, \"/employee\"), {\n        limit: limit,\n        offset: offset,\n        inverseJoin: Number(inverseJoin),\n        name: name,\n        surname: surname,\n        patronymic: patronymic,\n        position: position\n      });\n    }\n    /** Добавление контрагента в группу */\n\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(groupId, contractorId) {\n      return AJAX.postJSON(\"/front/contractor_group/\".concat(groupId, \"/contractor/\").concat(contractorId));\n    }\n    /** Удаление контрагента из группы */\n\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(groupId, contractorId) {\n      return AJAX.doDelete(\"/front/contractor_group/\".concat(groupId, \"/contractor/\").concat(contractorId));\n    }\n    /** Добавление сотрудника в группу */\n\n  }, {\n    key: \"addEmployeeToGroup\",\n    value: function addEmployeeToGroup(groupId, contractorId) {\n      return AJAX.postJSON(\"/front/contractor_group/\".concat(groupId, \"/employee/\").concat(contractorId));\n    }\n    /** Удаление сотрудника из группы */\n\n  }, {\n    key: \"removeEmployeeFromGroup\",\n    value: function removeEmployeeFromGroup(groupId, contractorId) {\n      return AJAX.doDelete(\"/front/contractor_group/\".concat(groupId, \"/employee/\").concat(contractorId));\n    }\n    /** Создание новой группы */\n\n  }, {\n    key: \"newGroupCreate\",\n    value: function newGroupCreate(title) {\n      return AJAX.postJSON(\"/front/contractor_group/create\", {\n        title: title\n      });\n    }\n    /** Удаление группы */\n\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(id) {\n      return AJAX.doDelete(\"/front/contractor_group/\".concat(id));\n    }\n    /** Получить группы контрагента \"в которые он добавлен\"/\"в которых еще не состоит\" */\n\n  }, {\n    key: \"getContractorGroups\",\n    value: function getContractorGroups(id, inverseJoin, offset, limit) {\n      return AJAX.doGet(\"/front/contractor/\".concat(id, \"/group\"), {\n        inverseJoin: Number(inverseJoin),\n        offset: offset,\n        limit: limit\n      });\n    }\n    /** Добавить контрагента в группу */\n\n  }, {\n    key: \"addContractorToGroup\",\n    value: function addContractorToGroup(groupId, contractorId) {\n      return AJAX.postJSON(\"/front/contractor_group/\".concat(groupId, \"/contractor/\").concat(contractorId));\n    }\n    /** Исключить контрагента из группы */\n\n  }, {\n    key: \"deleteContractorGroup\",\n    value: function deleteContractorGroup(groupId, contractorId) {\n      return AJAX.doDelete(\"/front/contractor_group/\".concat(groupId, \"/contractor/\").concat(contractorId));\n    }\n    /** Получить информацию о ФЛ */\n\n  }, {\n    key: \"getPersonInfo\",\n    value: function getPersonInfo(id) {\n      return AJAX.doGet(\"/front/person/\".concat(id));\n    }\n    /** Получить информацию о ЮЛ */\n\n  }, {\n    key: \"getCompanyInfo\",\n    value: function getCompanyInfo(id) {\n      return AJAX.doGet(\"/front/contractor/legal_entity/\".concat(id));\n    }\n  }]);\n\n  return ContractorGateway;\n}();\n\nexport default ContractorGateway;","map":{"version":3,"sources":["../../../../src/application/contractor/common/ContractorGateway.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import AJAX from '../../../infrastructure/AJAX';\r\n/**\r\n * Контрагенты\r\n */\r\nclass ContractorGateway {\r\n    /**\r\n     * Поиск физ лица - Локальный\r\n     * @param {object} payload\r\n     */\r\n    searchNaturalEntity(payload) {\r\n        return AJAX.doGet('/front/invitation/person/search_local', payload);\r\n    }\r\n    /**\r\n     * Поиск ЮЛ/ИП - Локальный\r\n     * @param {string|undefined} inn\r\n     * @param {string|undefined} name\r\n     * @param {number|undefined} offset\r\n     */\r\n    searchLocalCompany(inn, name, offset) {\r\n        return AJAX.doGet('/front/invitation/legal_entity/search_local', {\r\n            inn,\r\n            name,\r\n            offset\r\n        });\r\n    }\r\n    /**\r\n     * Поиск ЮЛ/ИП - Локальный роуминг\r\n     * @param {string} inn\r\n     */\r\n    searchLocalRoamingCompany(inn, offset, limit) {\r\n        return AJAX.doGet('/front/invitation/legal_entity/search_internal_roaming', {\r\n            inn, offset, limit\r\n        });\r\n    }\r\n    /**\r\n     * создание приглашения ФЛ - Локально\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {number} personId\r\n     */\r\n    createLocalInvitationPerson(type, personId) {\r\n        return AJAX.postJSON('/front/invitation/send', {\r\n            type,\r\n            personId\r\n        });\r\n    }\r\n    /**\r\n     * создание приглашения ЮЛ - Локально\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {number} companyId\r\n     */\r\n    createLocalInvitationCompany(type, companyId) {\r\n        return AJAX.postJSON('/front/invitation/send', {\r\n            type,\r\n            companyId\r\n        });\r\n    }\r\n    /**\r\n     * создание приглашения ЮЛ - Роуминг\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} inn\r\n     */\r\n    createRoamingInvitationCompany(type, fnsUid, inn) {\r\n        return AJAX.postJSON('/front/invitation/send', {\r\n            type,\r\n            fnsUid,\r\n            inn\r\n        });\r\n    }\r\n    /**\r\n     * создание приглашения ЮЛ - Локальный Роуминг\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} networkId\r\n     */\r\n    createLocalRoamingInvitationCompany(type, fnsUid, networkId) {\r\n        return AJAX.postJSON('/front/invitation/send', {\r\n            type,\r\n            fnsUid,\r\n            networkId\r\n        });\r\n    }\r\n    /**\r\n     * создание приглашения ЮЛ - 1С-ЭДО\r\n     * @param {('local'|'roaming'|'internal_roaming'|'taxcom')} type\r\n     * @param {string} fnsUid\r\n     * @param {string} inn\r\n     */\r\n    createTaxcomInvitationCompany(type, fnsUid, inn) {\r\n        return AJAX.postJSON('/front/invitation/send', {\r\n            type,\r\n            fnsUid,\r\n            inn\r\n        });\r\n    }\r\n    /**\r\n     * Просмотр входящих приглашений\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     */\r\n    getInvitationIncome(limit, offset, name, surname, patronymic, inn) {\r\n        return AJAX.doGet('/front/invitation/income', {\r\n            limit,\r\n            offset,\r\n            name,\r\n            surname,\r\n            patronymic,\r\n            inn\r\n        });\r\n    }\r\n    /**\r\n     * Просмотр исходящих приглашений\r\n     */\r\n    getInvitationOutcome(limit, offset, name, surname, patronymic, inn) {\r\n        return AJAX.doGet('/front/invitation/outcome', {\r\n            limit,\r\n            offset,\r\n            name,\r\n            surname,\r\n            patronymic,\r\n            inn\r\n        });\r\n    }\r\n    /**\r\n     * Получить список контрагентов ЮЛ/ИП\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Наименование\r\n     * @param {string|undefined} inn - ИНН\r\n     */\r\n    getLegalEntityContractors(limit, offset, name, inn, externalOperator, externalType, status) {\r\n        return AJAX.doGet('/front/contractor/legal_entity', {\r\n            limit,\r\n            offset,\r\n            name,\r\n            inn,\r\n            externalOperator,\r\n            externalType,\r\n            status\r\n        });\r\n    }\r\n    /**\r\n     * Получить список контрагентов ФЛ\r\n     * @param {number|undefined} limit - Ограничение выборки\r\n     * @param {number|undefined} offset - Пропустить записей\r\n     * @param {string|undefined} name - Имя\r\n     * @param {string|undefined} patronymic - Отчество\r\n     * @param {string|undefined} surname - Фамилия\r\n     * @param {string|undefined} socialNumber - СНИЛС\r\n     */\r\n    getNaturalEntityContractors(limit, offset, name, patronymic, surname, socialNumber) {\r\n        return AJAX.doGet('/front/contractor/natural_entity', {\r\n            limit,\r\n            offset,\r\n            name,\r\n            patronymic,\r\n            surname,\r\n            socialNumber\r\n        });\r\n    }\r\n    /** Получить список операторов */\r\n    getOperators() {\r\n        return AJAX.doGet('/front/company/connector/');\r\n    }\r\n    /** Заблокировать контрагента */\r\n    blockContractor(id) {\r\n        return AJAX.postJSON(`/front/contractor/relation/${id}/block`);\r\n    }\r\n    /** Принять или отклонить приглашение */\r\n    invitationDecision(id, decision) {\r\n        return AJAX.postJSON(`/front/invitation/${id}/decision/${decision}`);\r\n    }\r\n    /** Получить список групп */\r\n    getContractorsGroup(offset, limit = 10) {\r\n        return AJAX.doGet('/front/contractor_group/', {\r\n            offset,\r\n            limit\r\n        });\r\n    }\r\n    /** Изменить название группы контрагентов */\r\n    changeContractorsGroupTitle(id, title) {\r\n        return AJAX.postJSON(`/front/contractor_group/${id}`, {\r\n            title\r\n        });\r\n    }\r\n    /** Получить список ЮЛ/ИП в группе контрагентов или список компаний доступных для добавления в группу */\r\n    getLegalEntityGroup(id, inverseJoin, offset, limit, name, inn) {\r\n        return AJAX.doGet(`/front/contractor_group/${id}/contractor/legal_entities`, {\r\n            limit,\r\n            offset,\r\n            inverseJoin: Number(inverseJoin),\r\n            name,\r\n            inn\r\n        });\r\n    }\r\n    /** Получить список ФЛ в группе контрагентов или список ФЛ доступных для добавления в группу */\r\n    getNaturalEntityGroup(id, inverseJoin, offset, limit, name, surname, patronymic, socialNumber) {\r\n        return AJAX.doGet(`/front/contractor_group/${id}/contractor/natural_entities`, {\r\n            limit,\r\n            offset,\r\n            inverseJoin: Number(inverseJoin),\r\n            name,\r\n            surname,\r\n            patronymic,\r\n            socialNumber\r\n        });\r\n    }\r\n    /** Получить список сотрудников в группе контрагентов или список сотрудников доступных для добавления в группу */\r\n    getEmployeeGroup(id, inverseJoin, offset, limit, name, surname, patronymic, position) {\r\n        return AJAX.doGet(`/front/contractor_group/${id}/employee`, {\r\n            limit,\r\n            offset,\r\n            inverseJoin: Number(inverseJoin),\r\n            name,\r\n            surname,\r\n            patronymic,\r\n            position\r\n        });\r\n    }\r\n    /** Добавление контрагента в группу */\r\n    addToGroup(groupId, contractorId) {\r\n        return AJAX.postJSON(`/front/contractor_group/${groupId}/contractor/${contractorId}`);\r\n    }\r\n    /** Удаление контрагента из группы */\r\n    removeFromGroup(groupId, contractorId) {\r\n        return AJAX.doDelete(`/front/contractor_group/${groupId}/contractor/${contractorId}`);\r\n    }\r\n    /** Добавление сотрудника в группу */\r\n    addEmployeeToGroup(groupId, contractorId) {\r\n        return AJAX.postJSON(`/front/contractor_group/${groupId}/employee/${contractorId}`);\r\n    }\r\n    /** Удаление сотрудника из группы */\r\n    removeEmployeeFromGroup(groupId, contractorId) {\r\n        return AJAX.doDelete(`/front/contractor_group/${groupId}/employee/${contractorId}`);\r\n    }\r\n    /** Создание новой группы */\r\n    newGroupCreate(title) {\r\n        return AJAX.postJSON(`/front/contractor_group/create`, {\r\n            title\r\n        });\r\n    }\r\n    /** Удаление группы */\r\n    removeGroup(id) {\r\n        return AJAX.doDelete(`/front/contractor_group/${id}`);\r\n    }\r\n    /** Получить группы контрагента \"в которые он добавлен\"/\"в которых еще не состоит\" */\r\n    getContractorGroups(id, inverseJoin, offset, limit) {\r\n        return AJAX.doGet(`/front/contractor/${id}/group`, {\r\n            inverseJoin: Number(inverseJoin),\r\n            offset,\r\n            limit\r\n        });\r\n    }\r\n    /** Добавить контрагента в группу */\r\n    addContractorToGroup(groupId, contractorId) {\r\n        return AJAX.postJSON(`/front/contractor_group/${groupId}/contractor/${contractorId}`);\r\n    }\r\n    /** Исключить контрагента из группы */\r\n    deleteContractorGroup(groupId, contractorId) {\r\n        return AJAX.doDelete(`/front/contractor_group/${groupId}/contractor/${contractorId}`);\r\n    }\r\n    /** Получить информацию о ФЛ */\r\n    getPersonInfo(id) {\r\n        return AJAX.doGet(`/front/person/${id}`);\r\n    }\r\n    /** Получить информацию о ЮЛ */\r\n    getCompanyInfo(id) {\r\n        return AJAX.doGet(`/front/contractor/legal_entity/${id}`);\r\n    }\r\n}\r\nexport default ContractorGateway;\r\n//# sourceMappingURL=ContractorGateway.js.map"]},"metadata":{},"sourceType":"module"}