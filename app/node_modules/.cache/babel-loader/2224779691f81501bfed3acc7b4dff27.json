{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";var _class,_temp;import autobind from\"autobind-decorator\";import{getKeyOrNull}from\"../../utils/string_helper\";import{PersonalDataJsonConverter}from\"../../data/converter/PersonalDataJsonConverter\";import{PowerDocumentJsonConverter}from\"../../data/converter/PowerDocumentJsonConverter\";import{OrganizationJsonConverter}from\"../../data/converter/OrganizationJsonConverter\";import{SubAdmin}from\"./SubAdmin\";import{compareArrays,deepEqual}from\"../../utils/json_hepler\";export var PrincipalAdmin=(_class=(_temp=/*#__PURE__*/function(){function PrincipalAdmin(admins,fields){_classCallCheck(this,PrincipalAdmin);this.admins=void 0;this.fields=void 0;this.fields=fields!==null&&fields!==void 0?fields:{};this.admins=admins!==null&&admins!==void 0?admins:new Array();}_createClass(PrincipalAdmin,[{key:\"getFields\",value:function getFields(){return this.fields;}},{key:\"getAdmins\",value:function getAdmins(){return this.admins;}},{key:\"changeAdmins\",value:function changeAdmins(admins){this.admins=admins;}},{key:\"removeAdmin\",value:function removeAdmin(index){this.admins.splice(index,1);}},{key:\"getAdmin\",value:function getAdmin(index){return this.admins[index];}},{key:\"addAdmin\",value:function addAdmin(admin){this.admins.push(new SubAdmin(admin));}},{key:\"editAdmin\",value:function editAdmin(index,admin){if(index>=0&&index<this.admins.length){this.admins[index].setFields(admin);}else{new Error(\"Invalid index for editing admin \".concat(index));}}},{key:\"setFields\",value:function setFields(fields){this.fields=fields;}},{key:\"copyWith\",value:function copyWith(_ref){var admins=_ref.admins,fields=_ref.fields;return new PrincipalAdmin(admins!==null&&admins!==void 0?admins:this.admins,fields!==null&&fields!==void 0?fields:this.fields);}},{key:\"compare\",value:function compare(other){return deepEqual(this.getFields(),other.getFields())&&compareArrays(this.getAdmins(),other.getAdmins());}},{key:\"toFlatJson\",value:function toFlatJson(){var fields=this.getFields();var currentType=fields[\"type\"];switch(currentType){case\"ADMINIP\":return{individualEntrepreneur:{name:getKeyOrNull(fields[\"nameText\"]),ogrn:getKeyOrNull(fields[\"ogrn\"]),inn:getKeyOrNull(fields[\"inn\"]),socialNumber:getKeyOrNull(fields[\"socialnumber\"]),personalData:PersonalDataJsonConverter.toFlatJson(fields),powers:PowerDocumentJsonConverter.toFlatJson(fields)}};// return {\n//     socialNumber: getKeyOrNull(fields[\"socialNumber\"]),\n//     inn: getKeyOrNull(fields[\"inn\"]),\n//     personalData: {\n//         fio: {\n//             name: getKeyOrNull(fields[\"fiasId\"]),\n//             surname: getKeyOrNull(fields[\"surname\"]),\n//             patronymic: getKeyOrNull(fields[\"patronymic\"]),\n//         },\n//         gender: getKeyOrNull(fields[\"gender\"]),\n//         citizenshipMark: getKeyOrNull(fields[\"citizenshipMark\"]),\n//         ernNumber: getKeyOrNull(fields[\"ernNumber\"]),\n//         birthday: getKeyOrNull(fields[\"birthday\"]),\n//         birthPlace: getKeyOrNull(fields[\"birthPlace\"]),\n//         citizenship: getKeyOrNull(fields[\"citizenship\"]),\n//         address: {\n//             addressText: getKeyOrNull(fields[\"addressText\"]),\n//             fiasText: getKeyOrNull(fields[\"fiasText\"]),\n//             fiasId: getKeyOrNull(fields[\"fiasId\"]),\n//             regionCode: getKeyOrNull(fields[\"regionCode\"]),\n//         },\n//         contacts: {\n//             phone: getKeyOrNull(fields[\"phone\"]),\n//             email: getKeyOrNull(fields[\"email\"]),\n//         },\n//         identificationDocument: {\n//             kind: getKeyOrNull(fields[\"kind\"]),\n//             serialNumber: getKeyOrNull(fields[\"serialNumber\"]),\n//             issuedAt: getKeyOrNull(fields[\"issuedAt\"]),\n//             issuer: getKeyOrNull(fields[\"issuer\"]),\n//             issuerCode: getKeyOrNull(fields[\"issuerCode\"]),\n//             expireAt: getKeyOrNull(fields[\"expireAt\"]),\n//         }\n//     },\n//     powers: {\n//         name: getKeyOrNull(fields[\"documentName\"]),\n//         issuedAt: getKeyOrNull(fields[\"issuedAtDocument\"]),\n//         issuedBy: getKeyOrNull(fields[\"issuedBy\"]),\n//         certification: getKeyOrNull(fields[\"certification\"]),\n//     }\n// };\ncase\"ADMINUL\":return{russianOrg:{org:OrganizationJsonConverter.toFlatJson(fields)}};case\"ADMINFL\":return{};default:return{};}}}]);return PrincipalAdmin;}(),_temp),(_applyDecoratedDescriptor(_class.prototype,\"getFields\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getFields\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getAdmins\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getAdmins\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"changeAdmins\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"changeAdmins\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"removeAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"removeAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"addAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"addAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"editAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"editAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setFields\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"setFields\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"copyWith\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"copyWith\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"compare\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"compare\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"toFlatJson\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"toFlatJson\"),_class.prototype)),_class);","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/domain/model/PrincipalAdmin.ts"],"names":["autobind","getKeyOrNull","PersonalDataJsonConverter","PowerDocumentJsonConverter","OrganizationJsonConverter","SubAdmin","compareArrays","deepEqual","PrincipalAdmin","admins","fields","Array","index","splice","admin","push","length","setFields","Error","other","getFields","getAdmins","currentType","individualEntrepreneur","name","ogrn","inn","socialNumber","personalData","toFlatJson","powers","russianOrg","org"],"mappings":"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","sourcesContent":["import autobind from \"autobind-decorator\";\r\nimport {getKeyOrNull} from \"../../utils/string_helper\";\r\nimport {PersonalDataJsonConverter} from \"../../data/converter/PersonalDataJsonConverter\";\r\nimport {PowerDocumentJsonConverter} from \"../../data/converter/PowerDocumentJsonConverter\";\r\nimport {OrganizationJsonConverter} from \"../../data/converter/OrganizationJsonConverter\";\r\nimport {SubAdmin} from \"./SubAdmin\";\r\nimport {IModel} from \"./IModel\";\r\nimport {compareArrays, deepEqual} from \"../../utils/json_hepler\";\r\n\r\nexport interface PrincipalAdminProps {\r\n    admins?: SubAdmin[] | null;\r\n    fields?: any | null;\r\n}\r\n\r\nexport class PrincipalAdmin implements IModel<PrincipalAdmin, PrincipalAdminProps> {\r\n    private admins: SubAdmin[];\r\n    private fields: any;\r\n\r\n    constructor(admins?: SubAdmin[] | null, fields?: any | null) {\r\n        this.fields = fields ?? {};\r\n        this.admins = admins ?? new Array<SubAdmin>();\r\n    }\r\n\r\n    @autobind\r\n    public getFields() {\r\n        return this.fields;\r\n    }\r\n\r\n    @autobind\r\n    public getAdmins(): SubAdmin[] {\r\n        return this.admins;\r\n    }\r\n\r\n    @autobind\r\n    public changeAdmins(admins: SubAdmin[]) {\r\n        this.admins = admins;\r\n    }\r\n\r\n    @autobind\r\n    public removeAdmin(index: number) {\r\n        this.admins.splice(index, 1);\r\n    }\r\n\r\n    @autobind\r\n    public getAdmin(index: number): SubAdmin {\r\n        return this.admins[index];\r\n    }\r\n\r\n    @autobind\r\n    public addAdmin(admin: any) {\r\n        this.admins.push(new SubAdmin(admin));\r\n    }\r\n\r\n    @autobind\r\n    public editAdmin(index: number, admin: any) {\r\n        if (index >= 0 && index < this.admins.length) {\r\n            this.admins[index].setFields(admin);\r\n        } else {\r\n            new Error(`Invalid index for editing admin ${index}`);\r\n        }\r\n    }\r\n\r\n    @autobind\r\n    public setFields(fields: any) {\r\n        this.fields = fields;\r\n    }\r\n\r\n    @autobind\r\n    public copyWith({admins, fields}: PrincipalAdminProps) {\r\n        return new PrincipalAdmin(admins ?? this.admins, fields ?? this.fields);\r\n    }\r\n\r\n    @autobind\r\n    public compare(other: PrincipalAdmin): boolean {\r\n        return deepEqual(this.getFields(), other.getFields()) &&\r\n            compareArrays<SubAdmin>(this.getAdmins(), other.getAdmins());\r\n    }\r\n\r\n    @autobind\r\n    public toFlatJson(): Record<string, any> {\r\n        const fields: Record<string, any> = this.getFields();\r\n        const currentType: string = fields[\"type\"];\r\n\r\n        switch (currentType) {\r\n            case \"ADMINIP\":\r\n                return {\r\n                    individualEntrepreneur: {\r\n                        name: getKeyOrNull(fields[\"nameText\"]),\r\n                        ogrn: getKeyOrNull(fields[\"ogrn\"]),\r\n                        inn: getKeyOrNull(fields[\"inn\"]),\r\n                        socialNumber: getKeyOrNull(fields[\"socialnumber\"]),\r\n                        personalData: PersonalDataJsonConverter.toFlatJson(fields),\r\n                        powers: PowerDocumentJsonConverter.toFlatJson(fields),\r\n                    }\r\n                }\r\n                // return {\r\n                //     socialNumber: getKeyOrNull(fields[\"socialNumber\"]),\r\n                //     inn: getKeyOrNull(fields[\"inn\"]),\r\n                //     personalData: {\r\n                //         fio: {\r\n                //             name: getKeyOrNull(fields[\"fiasId\"]),\r\n                //             surname: getKeyOrNull(fields[\"surname\"]),\r\n                //             patronymic: getKeyOrNull(fields[\"patronymic\"]),\r\n                //         },\r\n                //         gender: getKeyOrNull(fields[\"gender\"]),\r\n                //         citizenshipMark: getKeyOrNull(fields[\"citizenshipMark\"]),\r\n                //         ernNumber: getKeyOrNull(fields[\"ernNumber\"]),\r\n                //         birthday: getKeyOrNull(fields[\"birthday\"]),\r\n                //         birthPlace: getKeyOrNull(fields[\"birthPlace\"]),\r\n                //         citizenship: getKeyOrNull(fields[\"citizenship\"]),\r\n                //         address: {\r\n                //             addressText: getKeyOrNull(fields[\"addressText\"]),\r\n                //             fiasText: getKeyOrNull(fields[\"fiasText\"]),\r\n                //             fiasId: getKeyOrNull(fields[\"fiasId\"]),\r\n                //             regionCode: getKeyOrNull(fields[\"regionCode\"]),\r\n                //         },\r\n                //         contacts: {\r\n                //             phone: getKeyOrNull(fields[\"phone\"]),\r\n                //             email: getKeyOrNull(fields[\"email\"]),\r\n                //         },\r\n                //         identificationDocument: {\r\n                //             kind: getKeyOrNull(fields[\"kind\"]),\r\n                //             serialNumber: getKeyOrNull(fields[\"serialNumber\"]),\r\n                //             issuedAt: getKeyOrNull(fields[\"issuedAt\"]),\r\n                //             issuer: getKeyOrNull(fields[\"issuer\"]),\r\n                //             issuerCode: getKeyOrNull(fields[\"issuerCode\"]),\r\n                //             expireAt: getKeyOrNull(fields[\"expireAt\"]),\r\n                //         }\r\n                //     },\r\n                //     powers: {\r\n                //         name: getKeyOrNull(fields[\"documentName\"]),\r\n                //         issuedAt: getKeyOrNull(fields[\"issuedAtDocument\"]),\r\n                //         issuedBy: getKeyOrNull(fields[\"issuedBy\"]),\r\n                //         certification: getKeyOrNull(fields[\"certification\"]),\r\n                //     }\r\n                // };\r\n            case \"ADMINUL\":\r\n                return {\r\n                    russianOrg: {\r\n                        org: OrganizationJsonConverter.toFlatJson(fields),\r\n                    }\r\n                }\r\n            case \"ADMINFL\":\r\n                return {}\r\n            default:\r\n                return {}\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}