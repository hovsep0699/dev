{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import DisplayStrategyBase from'./strategies/DisplayStrategyBase';import withEvent from'../../utils/withEvent';var singleton=Symbol('singleton');var singletonEnforcer=Symbol('singletonEnforcer');var _displayStrategy=Symbol('displayStrategy');export var EVENT_ADD_INFO='DI_EVENT_FLASH_ADD_INFO';export var EVENT_ADD_ERROR='DI_EVENT_FLASH_ADD_ERROR';export var EVENT_ADD_SUCCESS='DI_EVENT_FLASH_ADD_SUCCESS';var BaseFlash=/*#__PURE__*/function(){function BaseFlash(enforcer){_classCallCheck(this,BaseFlash);if(enforcer!==singletonEnforcer){throw new Error('Это синглтон. Вместо оператора new используйте Flash.gi()');}}_createClass(BaseFlash,[{key:\"checkDisplayStrategy\",value:function checkDisplayStrategy(){if(!this.displayStrategy){throw new Error('Необходимо задать стратегию отображения.');}}},{key:\"error\",value:function error(err){this.checkDisplayStrategy();this.dispatch(EVENT_ADD_ERROR,err);}},{key:\"success\",value:function success(msg){this.checkDisplayStrategy();this.dispatch(EVENT_ADD_SUCCESS,msg);}},{key:\"info\",value:function info(msg){this.checkDisplayStrategy();this.dispatch(EVENT_ADD_INFO,msg);}},{key:\"displayStrategy\",set:function set(strategy){if(!strategy instanceof DisplayStrategyBase){throw new Error('Стратегия отображения должна быть подклассом DisplayStrategyBase');}this[_displayStrategy]=strategy;},get:function get(){return this[_displayStrategy];}}],[{key:\"gi\",value:function gi(){if(!this[singleton]){this[singleton]=withEvent(new BaseFlash(singletonEnforcer));}return this[singleton];}}]);return BaseFlash;}();var Flash=BaseFlash.gi();export{Flash};export default Flash;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/flash/Flash.js"],"names":["DisplayStrategyBase","withEvent","singleton","Symbol","singletonEnforcer","_displayStrategy","EVENT_ADD_INFO","EVENT_ADD_ERROR","EVENT_ADD_SUCCESS","BaseFlash","enforcer","Error","displayStrategy","err","checkDisplayStrategy","dispatch","msg","strategy","Flash","gi"],"mappings":"oVAAA,MAAOA,CAAAA,mBAAP,KAAgC,kCAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAGC,MAAM,CAAC,WAAD,CAAxB,CACA,GAAMC,CAAAA,iBAAiB,CAAGD,MAAM,CAAC,mBAAD,CAAhC,CAEA,GAAME,CAAAA,gBAAgB,CAAGF,MAAM,CAAC,iBAAD,CAA/B,CAEA,MAAO,IAAMG,CAAAA,cAAc,CAAG,yBAAvB,CACP,MAAO,IAAMC,CAAAA,eAAe,CAAG,0BAAxB,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,4BAA1B,C,GAEDC,CAAAA,S,yBACJ,mBAAYC,QAAZ,CAAsB,iCACpB,GAAIA,QAAQ,GAAKN,iBAAjB,CAAoC,CAClC,KAAM,IAAIO,CAAAA,KAAJ,CAAU,2DAAV,CAAN,CACD,CACF,C,yFAOsB,CACrB,GAAI,CAAC,KAAKC,eAAV,CAA2B,CACzB,KAAM,IAAID,CAAAA,KAAJ,CAAU,0CAAV,CAAN,CACD,CACF,C,oCACKE,G,CAAK,CACT,KAAKC,oBAAL,GACA,KAAKC,QAAL,CAAcR,eAAd,CAA+BM,GAA/B,EACD,C,wCACOG,G,CAAK,CACX,KAAKF,oBAAL,GACA,KAAKC,QAAL,CAAcP,iBAAd,CAAiCQ,GAAjC,EACD,C,kCACIA,G,CAAK,CACR,KAAKF,oBAAL,GACA,KAAKC,QAAL,CAAcT,cAAd,CAA8BU,GAA9B,EACD,C,0CACmBC,Q,CAAU,CAC5B,GAAI,CAACA,QAAD,WAAqBjB,CAAAA,mBAAzB,CAA8C,CAC5C,KAAM,IAAIW,CAAAA,KAAJ,CAAU,kEAAV,CAAN,CACD,CACD,KAAKN,gBAAL,EAAyBY,QAAzB,CACD,C,mBACqB,CACpB,MAAO,MAAKZ,gBAAL,CAAP,CACD,C,iCA/BW,CACV,GAAI,CAAC,KAAKH,SAAL,CAAL,CAAsB,CACpB,KAAKA,SAAL,EAAkBD,SAAS,CAAC,GAAIQ,CAAAA,SAAJ,CAAcL,iBAAd,CAAD,CAA3B,CACD,CACD,MAAO,MAAKF,SAAL,CAAP,CACD,C,yBA6BH,GAAMgB,CAAAA,KAAK,CAAGT,SAAS,CAACU,EAAV,EAAd,CAEA,OAASD,KAAT,EAEA,cAAeA,CAAAA,KAAf","sourcesContent":["import DisplayStrategyBase from './strategies/DisplayStrategyBase';\r\nimport withEvent from '../../utils/withEvent';\r\n\r\nconst singleton = Symbol('singleton');\r\nconst singletonEnforcer = Symbol('singletonEnforcer');\r\n\r\nconst _displayStrategy = Symbol('displayStrategy');\r\n\r\nexport const EVENT_ADD_INFO = 'DI_EVENT_FLASH_ADD_INFO';\r\nexport const EVENT_ADD_ERROR = 'DI_EVENT_FLASH_ADD_ERROR';\r\nexport const EVENT_ADD_SUCCESS = 'DI_EVENT_FLASH_ADD_SUCCESS';\r\n\r\nclass BaseFlash {\r\n  constructor(enforcer) {\r\n    if (enforcer !== singletonEnforcer) {\r\n      throw new Error('Это синглтон. Вместо оператора new используйте Flash.gi()');\r\n    }\r\n  }\r\n  static gi() {\r\n    if (!this[singleton]) {\r\n      this[singleton] = withEvent(new BaseFlash(singletonEnforcer));\r\n    }\r\n    return this[singleton];\r\n  }\r\n  checkDisplayStrategy() {\r\n    if (!this.displayStrategy) {\r\n      throw new Error('Необходимо задать стратегию отображения.');\r\n    }\r\n  }\r\n  error(err) {\r\n    this.checkDisplayStrategy();\r\n    this.dispatch(EVENT_ADD_ERROR, err);\r\n  }\r\n  success(msg) {\r\n    this.checkDisplayStrategy();\r\n    this.dispatch(EVENT_ADD_SUCCESS, msg);\r\n  }\r\n  info(msg) {\r\n    this.checkDisplayStrategy();\r\n    this.dispatch(EVENT_ADD_INFO, msg);\r\n  }\r\n  set displayStrategy(strategy) {\r\n    if (!strategy instanceof DisplayStrategyBase) {\r\n      throw new Error('Стратегия отображения должна быть подклассом DisplayStrategyBase');\r\n    }\r\n    this[_displayStrategy] = strategy;\r\n  }\r\n  get displayStrategy() {\r\n    return this[_displayStrategy];\r\n  }\r\n}\r\n\r\nconst Flash = BaseFlash.gi();\r\n\r\nexport { Flash };\r\n\r\nexport default Flash;\r\n"]},"metadata":{},"sourceType":"module"}