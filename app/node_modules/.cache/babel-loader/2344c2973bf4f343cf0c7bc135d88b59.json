{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import\"./CancelTextArea.css\";import Button,{ButtonKinds}from'../../../../common/Button';import{Box}from'grommet';import{Form,Formik}from'formik';import{Textarea}from\"@distate/app/src/common/textarea/Textarea\";var CancelModalContent=function CancelModalContent(_ref){var hideDialog=_ref.hideDialog;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];/* \r\n type InputFieldProps = {\r\n  name: string;\r\n  label?: string;\r\n  type?: 'text' | 'email' | 'number' | 'password' | 'search' | 'tel';\r\n  placeholder?: string;\r\n  hideErrors?: boolean;\r\n  mask?: IMask[];\r\n};\r\n */useEffect(function(){console.log(value);},[value]);return/*#__PURE__*/ (// <ModalWrapper top='40%' left='50%'>\nReact.createElement(Box,{direction:\"column\",height:\"260px\",width:\"100%\",pad:\"10px\"},/*#__PURE__*/React.createElement(Formik,{initialValues:{firstName:'',lastName:'',gender:'',email:'',number:0,password:'',search:'',tel:'',date:'',acceptedTerms:false},onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setTimeout(function(){alert(JSON.stringify(values,null,2));setSubmitting(false);},400);}},/*#__PURE__*/React.createElement(Form,{style:{height:\"100%\",display:\"flex\",flexDirection:\"column\",justifyItems:\"center\",width:\"100%\",gap:\"90px\"}},/*#__PURE__*/React.createElement(Box,{direction:\"column\",gap:\"20px\",align:\"center\",height:\"100%\",justify:\"center\",margin:\"10px 0\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",gap:\"20px\",alignContent:\"center\",height:\"100%\"},/*#__PURE__*/React.createElement(Textarea,{style:{height:\"178px\",width:\"400px\",resize:\"none\"},required:true,onChange:function onChange(e){return setValue(e.target.value);}}))),/*#__PURE__*/React.createElement(Box,{direction:\"row\",justify:\"center\",margin:{top:\"25px\",bottom:\"10px\"},pad:\"0 10px\",gap:\"20px\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,kind:ButtonKinds.Primary},/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:\"bold\",fontSize:\"16px\"}},\"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\")),/*#__PURE__*/React.createElement(Button,{fullWidth:true,onClick:function onClick(){return hideDialog?hideDialog():null;}},/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:\"bold\",fontSize:\"16px\"}},\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))))))// </ModalWrapper>\n);};export default CancelModalContent;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/pages/dashboard/modals/CancelModalContent.tsx"],"names":["React","useEffect","Button","ButtonKinds","Box","Form","Formik","Textarea","CancelModalContent","hideDialog","useState","value","setValue","console","log","firstName","lastName","gender","email","number","password","search","tel","date","acceptedTerms","values","setSubmitting","setTimeout","alert","JSON","stringify","height","display","flexDirection","justifyItems","width","gap","resize","e","target","top","bottom","Primary","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport \"./CancelTextArea.css\"\r\nimport Button, { ButtonKinds } from '../../../../common/Button'\r\nimport { Box } from 'grommet'\r\nimport { Form, Formik } from 'formik'\r\nimport {IDialogContentProps} from \"./IDialogContentProps\";\r\nimport {Textarea} from \"@distate/app/src/common/textarea/Textarea\";\r\n\r\nconst CancelModalContent: React.FC<IDialogContentProps> = ({hideDialog}: IDialogContentProps) => {\r\n  const [value, setValue] = React.useState<string>(\"\");\r\n /* \r\n type InputFieldProps = {\r\n  name: string;\r\n  label?: string;\r\n  type?: 'text' | 'email' | 'number' | 'password' | 'search' | 'tel';\r\n  placeholder?: string;\r\n  hideErrors?: boolean;\r\n  mask?: IMask[];\r\n};\r\n */\r\n    useEffect(() => {\r\n        console.log(value)\r\n    }, [value]);\r\n  return (\r\n    // <ModalWrapper top='40%' left='50%'>\r\n        \r\n        <Box direction={\"column\"}  height={\"260px\"} width={\"100%\"} pad={\"10px\"}>\r\n            <Formik\r\n                initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                gender: '',\r\n                email: '',\r\n                number: 0,\r\n                password: '',\r\n                search: '',\r\n                tel: '',\r\n                date: '',\r\n                acceptedTerms: false\r\n                }}\r\n                \r\n                onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                }, 400);\r\n                }}\r\n            >\r\n                <Form style={{height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyItems:\"center\",  width:\"100%\", gap: \"90px\"}}>\r\n                <Box  direction=\"column\" gap=\"20px\" align='center' height={\"100%\"} justify='center' margin=\"10px 0\">\r\n\r\n                    {/*//autocomplate*/}\r\n                    <Box direction=\"column\" gap=\"20px\" alignContent={\"center\"}  height={\"100%\"}>\r\n                        <Textarea style={{height: \"178px\", width: \"400px\", resize: \"none\"}} required={true} onChange={(e: any)=>setValue(e.target.value)}  />\r\n                    </Box>\r\n                    {/*</Box>*/}\r\n\r\n                </Box>\r\n\r\n                    <Box direction=\"row\" justify=\"center\" margin={{top: \"25px\", bottom: \"10px\"}} pad={\"0 10px\"} gap=\"20px\">\r\n                        <Button type='submit' fullWidth={true}  kind={ButtonKinds.Primary}>\r\n                            <span style={{fontWeight: \"bold\", fontSize: \"16px\"}}>Подписать</span>\r\n                        </Button>\r\n                        <Button fullWidth={true} onClick={() => hideDialog ? hideDialog() : null}>\r\n                            <span style={{fontWeight: \"bold\", fontSize: \"16px\"}}>Отмена</span>\r\n                        </Button>\r\n                    </Box>\r\n                </Form>\r\n            </Formik>\r\n            </Box>\r\n    // </ModalWrapper>\r\n  )\r\n}\r\n\r\nexport default CancelModalContent"]},"metadata":{},"sourceType":"module"}