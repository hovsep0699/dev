{"ast":null,"code":"import*as Yup from\"yup\";var isRequiredForType=function isRequiredForType(type){for(var _len=arguments.length,fields=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){fields[_key-1]=arguments[_key];}return function(value,context){var anyFieldFilled=fields.some(function(field){return context.parent[field];});var allFieldsFilled=fields.every(function(field){return context.parent[field];});if(fields.some(function(field){return field.name===\"expireAt\"?field.value:null;})&&!allFieldsFilled)return false;if(type==='REPRIP'||type==='REPRFL'){var _allFieldsFilled=fields.every(function(field){return context.parent[field];});if(value){return true;}if(!_allFieldsFilled){return false;}}else{if(anyFieldFilled){var _allFieldsFilled2=fields.every(function(field){return context.parent[field]||value;});if(!_allFieldsFilled2){return false;}}}return true;};};export var PersonalDocumentValidationScheme={kind:Yup.string().test('required-for-type','Выберите документ удостоверяющий личность',function(value){return isRequiredForType(this.parent.type,'serialnumber','issuedAt','issuer','issuerCode',\"expireAt\").call(this,value,this);}),serialnumber:Yup.string().test('required-for-type','Поле обязательно для ввода',function(value){return isRequiredForType(this.parent.type,'kind','issuedAt','issuer','issuerCode','expireAt').call(this,value,this);}),issuedAt:Yup.string().test('required-for-type','Введите дату выдачи документа',function(value){return isRequiredForType(this.parent.type,'kind','serialnumber','issuer','issuerCode',\"expireAt\").call(this,value,this);}),issuer:Yup.string().test('required-for-type','Поле обязательно для ввода',function(value){return isRequiredForType(this.parent.type,'kind','serialnumber','issuedAt','issuerCode',\"expireAt\").call(this,value,this);}),issuerCode:Yup.string().test('required-for-type','Введите 7-значный код',function(value){return isRequiredForType(this.parent.type,'kind','serialnumber','issuedAt','issuer',\"expireAt\").call(this,value,this);})};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/constants/ValidationScheme/PersonalDocumentValidationScheme.ts"],"names":["Yup","isRequiredForType","type","fields","value","context","anyFieldFilled","some","field","parent","allFieldsFilled","every","name","PersonalDocumentValidationScheme","kind","string","test","call","serialnumber","issuedAt","issuer","issuerCode"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst isRequiredForType = (type: any, ...fields: any[]) => {\r\n    return (value: any, context: any) => {\r\n\r\n        const anyFieldFilled = fields.some(field => context.parent[field]);\r\n        const allFieldsFilled = fields.every(field => context.parent[field]);\r\n        if (fields.some((field)=>field.name === \"expireAt\" ? field.value : null) && !allFieldsFilled)\r\n            return false;\r\n\r\n        if (type === 'REPRIP' || type === 'REPRFL') {\r\n            const allFieldsFilled = fields.every(field => context.parent[field]);\r\n            if (value) {\r\n                return true;\r\n            }\r\n            if (!allFieldsFilled) {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (anyFieldFilled) {\r\n                const allFieldsFilled = fields.every(field => context.parent[field] || value);\r\n                if (!allFieldsFilled) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n};\r\n\r\nexport const PersonalDocumentValidationScheme = {\r\n    kind: Yup.string().test('required-for-type',\r\n        'Выберите документ удостоверяющий личность', function(value) {\r\n        return isRequiredForType(this.parent.type, 'serialnumber', 'issuedAt', 'issuer', 'issuerCode', \"expireAt\").call(this, value, this);\r\n    }),\r\n    serialnumber: Yup.string().test('required-for-type',\r\n        'Поле обязательно для ввода', function(value) {\r\n        return isRequiredForType(this.parent.type, 'kind', 'issuedAt', 'issuer', 'issuerCode', 'expireAt').call(this, value, this);\r\n    }),\r\n    issuedAt: Yup.string().test('required-for-type',\r\n        'Введите дату выдачи документа', function(value) {\r\n        return isRequiredForType(this.parent.type, 'kind', 'serialnumber', 'issuer', 'issuerCode', \"expireAt\").call(this, value, this);\r\n    }),\r\n    issuer: Yup.string().test('required-for-type',\r\n        'Поле обязательно для ввода', function(value) {\r\n        return isRequiredForType(this.parent.type, 'kind', 'serialnumber', 'issuedAt', 'issuerCode', \"expireAt\").call(this, value, this);\r\n    }),\r\n    issuerCode: Yup.string().test('required-for-type',\r\n        'Введите 7-значный код', function(value) {\r\n        return isRequiredForType(this.parent.type, 'kind', 'serialnumber', 'issuedAt', 'issuer', \"expireAt\").call(this, value, this);\r\n    }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}