{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport IPCompany from '../../../domain/individual_entrepreneur/Company';\nimport ULCompany from '../../../domain/legal_entity/Company';\nimport IPEmployee from '../../../domain/individual_entrepreneur/Employee';\nimport ULEmployee from '../../../domain/legal_entity/Employee';\nimport Environment from '../../Environment';\n\nvar AjaxGetEmployeesHandler = /*#__PURE__*/function () {\n  function AjaxGetEmployeesHandler() {\n    _classCallCheck(this, AjaxGetEmployeesHandler);\n  }\n\n  _createClass(AjaxGetEmployeesHandler, [{\n    key: \"get\",\n    value: function get(company, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var companyId, response, totalRecords, employees;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                companyId = company.localId;\n                _context.next = 3;\n                return Environment.getAuthGateway().companyEmployees(companyId, params);\n\n              case 3:\n                response = _context.sent;\n                totalRecords = response.recordsTotal;\n                employees = response.rows.map(function (rawEmployee) {\n                  return _this.createEmployee(rawEmployee, company);\n                });\n                return _context.abrupt(\"return\", {\n                  employees: employees,\n                  totalRecords: totalRecords\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"createEmployee\",\n    value: function createEmployee(rawEmployee, company) {\n      var employee;\n\n      if (company instanceof IPCompany) {\n        employee = new IPEmployee(rawEmployee);\n      }\n\n      if (company instanceof ULCompany) {\n        employee = new ULEmployee(rawEmployee);\n      }\n\n      return employee;\n    }\n  }]);\n\n  return AjaxGetEmployeesHandler;\n}();\n\nvar instance = new AjaxGetEmployeesHandler();\nexport default instance;","map":{"version":3,"sources":["../../../../src/application/company/handlers/AjaxGetEmployeesHandler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,iDAAtB;AACA,OAAO,SAAP,MAAsB,sCAAtB;AACA,OAAO,UAAP,MAAuB,kDAAvB;AACA,OAAO,UAAP,MAAuB,uCAAvB;AACA,OAAO,WAAP,MAAwB,mBAAxB;;IAEM,uB;;;;;;;wBACM,O,EAAS,M,EAAM;;;;;;;;;AACjB,gBAAA,S,GAAY,OAAO,CAAC,O;;AACT,uBAAM,WAAW,CAAC,cAAZ,GAA6B,gBAA7B,CAA8C,SAA9C,EAAyD,MAAzD,CAAN;;;AAAX,gBAAA,Q;AACA,gBAAA,Y,GAAe,QAAQ,CAAC,Y;AACxB,gBAAA,S,GAAY,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAkB,UAAC,WAAD,EAAgB;AAClD,yBAAO,KAAI,CAAC,cAAL,CAAoB,WAApB,EAAiC,OAAjC,CAAP;AACD,iBAFiB,C;iDAGX;AAAE,kBAAA,SAAS,EAAT,SAAF;AAAa,kBAAA,YAAY,EAAZ;AAAb,iB;;;;;;;;;AACR;;;mCAEc,W,EAAa,O,EAAO;AACjC,UAAI,QAAJ;;AACA,UAAI,OAAO,YAAY,SAAvB,EAAkC;AAChC,QAAA,QAAQ,GAAG,IAAI,UAAJ,CAAe,WAAf,CAAX;AACD;;AACD,UAAI,OAAO,YAAY,SAAvB,EAAkC;AAChC,QAAA,QAAQ,GAAG,IAAI,UAAJ,CAAe,WAAf,CAAX;AACD;;AACD,aAAO,QAAP;AACD;;;;;;AAGH,IAAM,QAAQ,GAAG,IAAI,uBAAJ,EAAjB;AACA,eAAe,QAAf","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport IPCompany from '../../../domain/individual_entrepreneur/Company';\r\nimport ULCompany from '../../../domain/legal_entity/Company';\r\nimport IPEmployee from '../../../domain/individual_entrepreneur/Employee';\r\nimport ULEmployee from '../../../domain/legal_entity/Employee';\r\nimport Environment from '../../Environment';\r\nclass AjaxGetEmployeesHandler {\r\n    get(company, params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const companyId = company.localId;\r\n            const response = yield Environment.getAuthGateway().companyEmployees(companyId, params);\r\n            const totalRecords = response.recordsTotal;\r\n            const employees = response.rows.map((rawEmployee) => {\r\n                return this.createEmployee(rawEmployee, company);\r\n            });\r\n            return { employees, totalRecords };\r\n        });\r\n    }\r\n    createEmployee(rawEmployee, company) {\r\n        let employee;\r\n        if (company instanceof IPCompany) {\r\n            employee = new IPEmployee(rawEmployee);\r\n        }\r\n        if (company instanceof ULCompany) {\r\n            employee = new ULEmployee(rawEmployee);\r\n        }\r\n        return employee;\r\n    }\r\n}\r\nconst instance = new AjaxGetEmployeesHandler();\r\nexport default instance;\r\n//# sourceMappingURL=AjaxGetEmployeesHandler.js.map"]},"metadata":{},"sourceType":"module"}