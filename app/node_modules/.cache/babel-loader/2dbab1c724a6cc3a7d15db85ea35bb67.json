{"ast":null,"code":"import React from\"react\";import{powerOfAttonomyType,powersDeltsType,powersSubTrustType,reTrustOptions,typeOptions}from\"../../../constants/SelectionConstants\";import ObservableComponent from\"../../../observableComponent/observableComponent\";import{Box}from\"grommet\";import{RequiredField}from\"../../../components/RequiredField\";import{Label}from\"../../../../common/CheckBox/CheckBox.styles\";import Select from\"../../../../common/Select\";import HierarchicalDropdown from\"../../CreatePoa/Individual/HierarchicalDropdown\";import{Textarea}from\"../../../../../../../common/textarea/Textarea\";import{mockPowersData}from\"../../../../mocks/data/dropdownData\";export var GeneralSectionsFooter=function GeneralSectionsFooter(_ref){var labelStyle=_ref.labelStyle,presenter=_ref.presenter,baseWidth=_ref.baseWidth;return/*#__PURE__*/React.createElement(ObservableComponent,{builder:function builder(state){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Box,{direction:\"row\",gap:\"10px\",justify:'stretch'},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\",margin:{top:\"30px\"}},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:'center',gap:\"10px\",width:baseWidth!==null&&baseWidth!==void 0?baseWidth:\"320px\"},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"14px\",color:\"#4d4d4f\"},required:true,content:\"Полномочия\"}))),/*#__PURE__*/React.createElement(Box,{direction:\"row\",gap:\"10px\",justify:\"center\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\",width:\"220px\"},/*#__PURE__*/React.createElement(Label,{style:labelStyle},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"12px\",fontStyle:\"italic\",color:\"#4d4d4f\"},required:false,content:\"Тип полномочий\"})),/*#__PURE__*/React.createElement(Select,{placeholder:\"Выбрать\",options:powerOfAttonomyType,value:state.powers.type,onChange:function onChange(e){presenter.onPowersChange(state.powers.copyWith({type:e}));}})),/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\",width:\"220px\"},/*#__PURE__*/React.createElement(Label,{style:labelStyle},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"12px\",fontStyle:\"italic\",color:\"#4d4d4f\"},required:false,content:\"Полномочия осуществляются\"})),/*#__PURE__*/React.createElement(Select,{placeholder:\"Выбрать\",options:powersDeltsType,value:state.powers.exercised,onChange:function onChange(e){return presenter.onPowersChange(state.powers.copyWith({exercised:e}));}})),state.retrustSelected!==reTrustOptions[0]?/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\",width:\"200px\"},/*#__PURE__*/React.createElement(Label,{style:labelStyle},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"12px\",fontStyle:\"italic\",color:\"#4d4d4f\"},required:false,content:\"При передоверии полномочия\"})),/*#__PURE__*/React.createElement(Select,{placeholder:\"Выбрать\",options:powersSubTrustType,value:state.powers.reDelegatingAuthority,onChange:function onChange(e){return presenter.onPowersChange(state.powers.copyWith({reDelegatingAuthority:e}));}})):/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\",height:\"100px\"})),state.powers.type&&state.powers.type.value===powerOfAttonomyType[1].value?/*#__PURE__*/React.createElement(Box,{direction:\"row\",style:{columnGap:\"10px\"},justify:'stretch'},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:'center',gap:\"10px\",width:baseWidth!==null&&baseWidth!==void 0?baseWidth:\"320px\"},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"14px\",color:\"#4d4d4f\"},required:true,content:\"Машиночитаемые полномочия\"})),/*#__PURE__*/React.createElement(Box,{direction:\"column\",gap:\"10px\",width:\"680px\",height:\"40px\",justify:\"center\",pad:{bottom:\"10px\"}},/*#__PURE__*/React.createElement(HierarchicalDropdown,{data:mockPowersData}))):/*#__PURE__*/React.createElement(Box,{direction:\"row\",style:{columnGap:\"10px\"},justify:'stretch'},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:'center',gap:\"10px\",width:baseWidth!==null&&baseWidth!==void 0?baseWidth:\"320px\"},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"14px\",color:\"#4d4d4f\"},required:true,content:\"Текстовые полномочия\"})),/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\"},/*#__PURE__*/React.createElement(Textarea,{value:state.powers.textPowers,placeholder:\"Введите текстовые полномочия\",title:\"Введите строку длиной до 10000 символов\",style:{fontSize:\"12px\",resize:\"none\",height:\"90px\",minHeight:\"90px\",width:\"658px\",border:\"2px solid rgba(0, 0, 0, 0.09)\"},onChange:function onChange(e){presenter.onPowersChange(state.powers.copyWith({textPowers:e.target.value}));}}))),state.selectedAttorneyType!==typeOptions[1]?/*#__PURE__*/React.createElement(Box,{direction:\"column\",gap:\"10px\",pad:{top:\"small\"},justify:\"center\"},/*#__PURE__*/React.createElement(Box,{direction:\"row\",style:{columnGap:\"10px\"},justify:'stretch'},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:'center',width:baseWidth!==null&&baseWidth!==void 0?baseWidth:\"320px\",gap:\"10px\"},/*#__PURE__*/React.createElement(RequiredField,{style:{fontSize:\"14px\",color:\"#4d4d4f\"},required:false,content:\"Иные сведения\"})),/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\"},/*#__PURE__*/React.createElement(Textarea,{value:state.info.otherInformation,placeholder:\"Введите иные сведения\",title:\"Введите строку длиной до 5000 символов\",style:{fontSize:\"12px\",resize:\"none\",height:\"50px\",minHeight:\"50px\",width:\"658px\",border:\"2px solid rgba(0, 0, 0, 0.09)\"},onChange:function onChange(e){presenter.onInfoChanged(state.info.copyWith({otherInformation:e.target.value}));}})))):/*#__PURE__*/React.createElement(React.Fragment,null));},create:function create(){return presenter;}});};export default GeneralSectionsFooter;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/pages/Sections/page/GeneralSectionFooter.tsx"],"names":["React","powerOfAttonomyType","powersDeltsType","powersSubTrustType","reTrustOptions","typeOptions","ObservableComponent","Box","RequiredField","Label","Select","HierarchicalDropdown","Textarea","mockPowersData","GeneralSectionsFooter","labelStyle","presenter","baseWidth","state","top","fontSize","color","fontStyle","powers","type","e","onPowersChange","copyWith","exercised","retrustSelected","reDelegatingAuthority","value","columnGap","bottom","textPowers","resize","height","minHeight","width","border","target","selectedAttorneyType","info","otherInformation","onInfoChanged"],"mappings":"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","sourcesContent":["import React, {CSSProperties} from \"react\";\r\nimport {\r\n    powerOfAttonomyType,\r\n    powersDeltsType,\r\n    powersSubTrustType,\r\n    reTrustOptions,\r\n    typeOptions\r\n} from \"../../../constants/SelectionConstants\";\r\n\r\nimport ObservableComponent from \"../../../observableComponent/observableComponent\";\r\nimport {SectionPresenterState} from \"../presenter/SectionPresenterState\";\r\nimport {SectionPresenter} from \"../presenter/SectionPresenter\";\r\nimport {Box} from \"grommet\";\r\nimport {RequiredField} from \"../../../components/RequiredField\";\r\nimport {Label} from \"../../../../common/CheckBox/CheckBox.styles\";\r\nimport Select from \"../../../../common/Select\";\r\nimport HierarchicalDropdown from \"../../CreatePoa/Individual/HierarchicalDropdown\";\r\nimport {Textarea} from \"../../../../../../../common/textarea/Textarea\";\r\nimport {SelectionType} from \"../../../../domain/model/SelectionType\";\r\nimport {mockPowersData} from \"../../../../mocks/data/dropdownData\";\r\nimport {SectionPresenterViewModel} from \"../presenter/SectionPresenterViewModel\";\r\n\r\ninterface GeneralSectionsFooterProps {\r\n    presenter: SectionPresenter;\r\n    labelStyle?: CSSProperties;\r\n    baseWidth?: string;\r\n}\r\n\r\n\r\nexport const GeneralSectionsFooter: React.FC<GeneralSectionsFooterProps> = ({\r\n                                                                                labelStyle,\r\n                                                                                presenter,\r\n                                                                                baseWidth\r\n                                                                            }: GeneralSectionsFooterProps) => {\r\n\r\n    return (\r\n        <ObservableComponent<SectionPresenterViewModel, SectionPresenterState, SectionPresenter>\r\n            builder={(state: SectionPresenterState) => (\r\n                <React.Fragment>\r\n                    <Box direction={\"row\"} gap={\"10px\"} justify={'stretch'}>\r\n                        <Box direction={\"column\"} justify={\"center\"} margin={{top: \"30px\"}}>\r\n                            <Box direction=\"column\" justify={'center'} gap={\"10px\"} width={baseWidth ?? \"320px\"}>\r\n                                <RequiredField style={{fontSize: \"14px\", color: \"#4d4d4f\"}} required={true}\r\n                                               content={\"Полномочия\"}/>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box direction={\"row\"} gap={\"10px\"} justify={\"center\"}>\r\n                            <Box direction=\"column\" justify={\"center\"} width={\"220px\"}>\r\n                                <Label style={labelStyle}>\r\n                                    <RequiredField style={{fontSize: \"12px\", fontStyle: \"italic\", color: \"#4d4d4f\"}}\r\n                                                   required={false} content={\"Тип полномочий\"}/>\r\n                                </Label>\r\n                                <Select\r\n                                    placeholder={\"Выбрать\"}\r\n                                    options={powerOfAttonomyType}\r\n                                    value={state.powers.type}\r\n                                    onChange={(e: SelectionType) => {\r\n                                        presenter.onPowersChange(state.powers.copyWith(\r\n                                        {type: e}))\r\n                                    }}\r\n                                />\r\n                            </Box>\r\n                            <Box direction=\"column\" justify={\"center\"} width={\"220px\"}>\r\n                                <Label style={labelStyle}>\r\n                                    <RequiredField style={{fontSize: \"12px\", fontStyle: \"italic\", color: \"#4d4d4f\"}}\r\n                                                   required={false} content={\"Полномочия осуществляются\"}/>\r\n                                </Label>\r\n                                <Select\r\n                                    placeholder={\"Выбрать\"}\r\n                                    options={powersDeltsType}\r\n                                    value={state.powers.exercised}\r\n                                    onChange={(e: SelectionType) => presenter.onPowersChange(\r\n                                        state.powers.copyWith(\r\n                                            {exercised: e}))\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            {state.retrustSelected !== reTrustOptions[0] ? (\r\n                                <Box direction=\"column\" justify={\"center\"} width={\"200px\"}>\r\n                                    <Label style={labelStyle}>\r\n                                        <RequiredField style={{fontSize: \"12px\", fontStyle: \"italic\", color: \"#4d4d4f\"}}\r\n                                                       required={false} content={\"При передоверии полномочия\"}/>\r\n                                    </Label>\r\n                                    <Select\r\n                                        placeholder={\"Выбрать\"}\r\n                                        options={powersSubTrustType}\r\n                                        value={state.powers.reDelegatingAuthority}\r\n                                        onChange={(e: SelectionType) => presenter.onPowersChange(\r\n                                            state.powers.copyWith(\r\n                                                {reDelegatingAuthority: e}))\r\n                                        }\r\n                                    />\r\n                                </Box>\r\n                            ) : (<></>)}\r\n                        </Box>\r\n\r\n\r\n                        <Box direction={\"column\"} justify={\"center\"} height={\"100px\"}></Box>\r\n\r\n                    </Box>\r\n                    {state.powers.type && state.powers.type.value === powerOfAttonomyType[1].value ? (\r\n                        <Box direction={\"row\"} style={{columnGap: \"10px\"}} justify={'stretch'}>\r\n                            <Box direction=\"column\" justify={'center'} gap={\"10px\"} width={baseWidth ?? \"320px\"}>\r\n                                <RequiredField style={{fontSize: \"14px\", color: \"#4d4d4f\"}} required={true}\r\n                                               content={\"Машиночитаемые полномочия\"}/>\r\n                            </Box>\r\n                            <Box direction={\"column\"} gap={\"10px\"} width={\"680px\"} height={\"40px\"} justify={\"center\"}\r\n                                 pad={{bottom: \"10px\"}}>\r\n                                <HierarchicalDropdown data={mockPowersData}/>\r\n                            </Box>\r\n                        </Box>\r\n                    ) : (\r\n                        <Box direction={\"row\"} style={{columnGap: \"10px\"}} justify={'stretch'}>\r\n                            <Box direction=\"column\" justify={'center'} gap={\"10px\"} width={baseWidth ?? \"320px\"}>\r\n                                <RequiredField style={{fontSize: \"14px\", color: \"#4d4d4f\"}} required={true}\r\n                                               content={\"Текстовые полномочия\"}/>\r\n                            </Box>\r\n                            <Box direction={\"column\"} justify={\"center\"}>\r\n                                <Textarea\r\n                                    value={state.powers.textPowers}\r\n                                    placeholder={\"Введите текстовые полномочия\"}\r\n                                    title={\"Введите строку длиной до 10000 символов\"}\r\n                                    style={{\r\n                                        fontSize: \"12px\",\r\n                                        resize: \"none\",\r\n                                        height: \"90px\",\r\n                                        minHeight: \"90px\",\r\n                                        width: \"658px\",\r\n                                        border: \"2px solid rgba(0, 0, 0, 0.09)\"\r\n                                    }}\r\n                                    onChange={(e: any) => {\r\n                                        presenter.onPowersChange(state.powers.copyWith(\r\n                                            {textPowers: e.target.value}));\r\n                                    }\r\n                                }/>\r\n                            </Box>\r\n                        </Box>\r\n                    )}\r\n                    {state.selectedAttorneyType !== typeOptions[1] ? (\r\n                        <Box direction={\"column\"} gap={\"10px\"} pad={{top: \"small\"}} justify={\"center\"}>\r\n                            <Box direction={\"row\"} style={{columnGap: \"10px\"}} justify={'stretch'}>\r\n                                <Box direction=\"column\" justify={'center'} width={baseWidth ?? \"320px\"} gap={\"10px\"}>\r\n                                    <RequiredField style={{fontSize: \"14px\", color: \"#4d4d4f\"}} required={false}\r\n                                                   content={\"Иные сведения\"}/>\r\n                                </Box>\r\n                                <Box direction={\"column\"} justify={\"center\"}>\r\n                                    <Textarea\r\n                                        value={state.info.otherInformation}\r\n                                        placeholder={\"Введите иные сведения\"}\r\n                                        title={\"Введите строку длиной до 5000 символов\"}\r\n                                        style={{\r\n                                            fontSize: \"12px\",\r\n                                            resize: \"none\",\r\n                                            height: \"50px\",\r\n                                            minHeight: \"50px\",\r\n                                            width: \"658px\",\r\n                                            border: \"2px solid rgba(0, 0, 0, 0.09)\"\r\n                                        }}\r\n                                        onChange={(e: any) => {\r\n                                            presenter.onInfoChanged(state.info.copyWith(\r\n                                                {otherInformation: e.target.value}))\r\n                                        }\r\n                                    }/>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    ) : (<></>)}\r\n                </React.Fragment>\r\n            )}\r\n            create={() => presenter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GeneralSectionsFooter;"]},"metadata":{},"sourceType":"module"}