{"ast":null,"code":"import React from'react';import cn from'classnames';import{HTMLTableCell,HTMLTableRow,HTMLTableBody}from'./table.style';import{TableContext}from'./context';export var Body=function Body(){var _React$useContext=React.useContext(TableContext),isLoading=_React$useContext.isLoading,rows=_React$useContext.rows,columns=_React$useContext.columns,_React$useContext$emp=_React$useContext.emptyTitle,emptyTitle=_React$useContext$emp===void 0?'Список пуст.':_React$useContext$emp,classNameRow=_React$useContext.classNameRow;var renderEmpty=function renderEmpty(){if(rows.length)return null;return/*#__PURE__*/React.createElement(HTMLTableRow,null,/*#__PURE__*/React.createElement(HTMLTableCell,{colSpan:columns.length},isLoading?null:emptyTitle));};return/*#__PURE__*/React.createElement(HTMLTableBody,{className:\"table-body\"},renderEmpty(),rows.map(function(item,index){var key='id'in item?String(item.id):String(index);var className=classNameRow&&classNameRow(item,index,rows);return/*#__PURE__*/React.createElement(HTMLTableRow,{key:key,className:cn('table-row',className)},columns.map(function(_ref){var property=_ref.property,format=_ref.format,align=_ref.align;var value=item.hasOwnProperty(property)?item[property]:undefined;if(!format){return/*#__PURE__*/React.createElement(HTMLTableCell,{key:property,alignBlock:align,className:\"table-cell\"},value);}return/*#__PURE__*/React.createElement(HTMLTableCell,{key:property,alignBlock:align,className:\"table-cell\"},format(value,item,index));}));}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/components/table/body.tsx"],"names":["React","cn","HTMLTableCell","HTMLTableRow","HTMLTableBody","TableContext","Body","useContext","isLoading","rows","columns","emptyTitle","classNameRow","renderEmpty","length","map","item","index","key","String","id","className","property","format","align","value","hasOwnProperty","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CAEA,OAASC,aAAT,CAAwBC,YAAxB,CAAsCC,aAAtC,KAA2D,eAA3D,CACA,OAASC,YAAT,KAA6B,WAA7B,CAIA,MAAO,IAAMC,CAAAA,IAAqB,CAAG,QAAxBA,CAAAA,IAAwB,EAAM,uBACuCN,KAAK,CAACO,UAAN,CAC9EF,YAD8E,CADvC,CACjCG,SADiC,mBACjCA,SADiC,CACtBC,IADsB,mBACtBA,IADsB,CAChBC,OADgB,mBAChBA,OADgB,yCACPC,UADO,CACPA,UADO,gCACM,cADN,uBACsBC,YADtB,mBACsBA,YADtB,CAKzC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIJ,IAAI,CAACK,MAAT,CAAiB,MAAO,KAAP,CAEjB,mBACE,oBAAC,YAAD,mBACE,oBAAC,aAAD,EAAe,OAAO,CAAEJ,OAAO,CAACI,MAAhC,EAAyCN,SAAS,CAAG,IAAH,CAAUG,UAA5D,CADF,CADF,CAKD,CARD,CAUA,mBACE,oBAAC,aAAD,EAAe,SAAS,CAAC,YAAzB,EACGE,WAAW,EADd,CAEGJ,IAAI,CAACM,GAAL,CAAS,SAACC,IAAD,CAAYC,KAAZ,CAA2B,CACnC,GAAMC,CAAAA,GAAG,CAAG,MAAQF,CAAAA,IAAR,CAAeG,MAAM,CAACH,IAAI,CAACI,EAAN,CAArB,CAAiCD,MAAM,CAACF,KAAD,CAAnD,CACA,GAAMI,CAAAA,SAAS,CAAGT,YAAY,EAAIA,YAAY,CAACI,IAAD,CAAOC,KAAP,CAAcR,IAAd,CAA9C,CAEA,mBACE,oBAAC,YAAD,EAAc,GAAG,CAAES,GAAnB,CAAwB,SAAS,CAAEjB,EAAE,CAAC,WAAD,CAAcoB,SAAd,CAArC,EACGX,OAAO,CAACK,GAAR,CAAY,cAAiC,IAA9BO,CAAAA,QAA8B,MAA9BA,QAA8B,CAApBC,MAAoB,MAApBA,MAAoB,CAAZC,KAAY,MAAZA,KAAY,CAC5C,GAAMC,CAAAA,KAAK,CAAGT,IAAI,CAACU,cAAL,CAAoBJ,QAApB,EAAgCN,IAAI,CAACM,QAAD,CAApC,CAAiDK,SAA/D,CAEA,GAAI,CAACJ,MAAL,CAAa,CACX,mBACE,oBAAC,aAAD,EAAe,GAAG,CAAED,QAApB,CAA8B,UAAU,CAAEE,KAA1C,CAAiD,SAAS,CAAC,YAA3D,EACGC,KADH,CADF,CAKD,CAED,mBACE,oBAAC,aAAD,EAAe,GAAG,CAAEH,QAApB,CAA8B,UAAU,CAAEE,KAA1C,CAAiD,SAAS,CAAC,YAA3D,EACGD,MAAM,CAACE,KAAD,CAAQT,IAAR,CAAcC,KAAd,CADT,CADF,CAKD,CAhBA,CADH,CADF,CAqBD,CAzBA,CAFH,CADF,CA+BD,CA9CM","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { HTMLTableCell, HTMLTableRow, HTMLTableBody } from './table.style';\r\nimport { TableContext } from './context';\r\n\r\nexport type IBody = {};\r\n\r\nexport const Body: React.FC<IBody> = () => {\r\n  const { isLoading, rows, columns, emptyTitle = 'Список пуст.', classNameRow } = React.useContext(\r\n    TableContext\r\n  );\r\n\r\n  const renderEmpty = () => {\r\n    if (rows.length) return null;\r\n\r\n    return (\r\n      <HTMLTableRow>\r\n        <HTMLTableCell colSpan={columns.length}>{isLoading ? null : emptyTitle}</HTMLTableCell>\r\n      </HTMLTableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HTMLTableBody className=\"table-body\">\r\n      {renderEmpty()}\r\n      {rows.map((item: any, index: any) => {\r\n        const key = 'id' in item ? String(item.id) : String(index);\r\n        const className = classNameRow && classNameRow(item, index, rows);\r\n\r\n        return (\r\n          <HTMLTableRow key={key} className={cn('table-row', className)}>\r\n            {columns.map(({ property, format, align }) => {\r\n              const value = item.hasOwnProperty(property) ? item[property] : undefined;\r\n\r\n              if (!format) {\r\n                return (\r\n                  <HTMLTableCell key={property} alignBlock={align} className=\"table-cell\">\r\n                    {value}\r\n                  </HTMLTableCell>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <HTMLTableCell key={property} alignBlock={align} className=\"table-cell\">\r\n                  {format(value, item, index)}\r\n                </HTMLTableCell>\r\n              );\r\n            })}\r\n          </HTMLTableRow>\r\n        );\r\n      })}\r\n    </HTMLTableBody>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}