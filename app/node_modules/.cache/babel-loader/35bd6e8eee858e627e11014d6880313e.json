{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  КПП(Код Причины Постановки на учёт) состоит из 9 цифр\r\n\r\n  Этот номер не уникальный\r\n\r\n  Первые четыре цифры КПП представляют собой код налогового органа(codeTaxAuthority), в котором организация поставлена на учет.\r\n  Из них первые две цифры представляют собой код региона, а третья и четвертая цифры являются кодом (номером) налоговой инспекции.\r\n\r\n  Пятая и шестая цифры(буквы A-Z) КПП указывают причину постановки на учет(registrationReason). Могут быть латинские прописные буквы!!!\r\n  Например:\r\n    цифры 01 означают, что КПП присвоен организации в связи с постановкой на учет по месту ее нахождения;\r\n\r\n    цифры 02, 03, 04, 05, 31 или 32 означают, что КПП присвоен организации по месту нахождения обособленного подразделения организации;\r\n\r\n    цифры 06-08 означают, что КПП присвоен организации по месту нахождения принадлежащего ей недвижимого имущества (таким образом, транспортные средства не затрагиваются) в зависимости от вида имущества;\r\n\r\n    цифры 10-29 – означают, что КПП присвоен организации по месту нахождения принадлежащих ей транспортных средств в зависимости от вида транспортных средств;\r\n\r\n    цифры 50 означают, что КПП присвоен в связи с постановкой на учет в качестве крупнейшего налогоплательщика.\r\n\r\n  Последние три цифры(registrationNumber) КПП представляют собой порядковый номер постановки организации на учет в ИФНС по основанию, в связи с которым ей присвоен этот КПП.\r\n\r\n  КПП может меняться (смена адреса которые относится к другой налоговой инспекции)\r\n*/\nvar KPP = /*#__PURE__*/function () {\n  _createClass(KPP, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return KPP.REG_EXP.test(value) ? undefined : 'Введите код длиной 9 знаков';\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !KPP.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      return value && value.replace(/\\D/g, '').slice(0, 9);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9]{2}[0-9]{2}[0-9A-Z]{2}[0-9]{3}$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите КПП';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите 9-значный Код Причины Постановки на учет';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'КПП';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'kpp';\n    }\n  }]);\n\n  function KPP(kpp) {\n    _classCallCheck(this, KPP);\n\n    if (KPP.isValid(\"\".concat(kpp))) {\n      this._codeTaxAuthority = \"\".concat(kpp).substring(0, 4);\n      this._registrationReason = \"\".concat(kpp).substring(4, 6);\n      this._registrationNumber = \"\".concat(kpp).substring(6);\n      this._value = \"\".concat(kpp);\n    } else {\n      this._value = kpp;\n    }\n  }\n\n  _createClass(KPP, [{\n    key: \"clone\",\n    value: function clone() {\n      return new KPP(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"codeTaxAuthority\",\n    get: function get() {\n      return this._codeTaxAuthority;\n    }\n  }, {\n    key: \"registrationReason\",\n    get: function get() {\n      return this._registrationReason;\n    }\n  }, {\n    key: \"registrationNumber\",\n    get: function get() {\n      return this._registrationNumber;\n    }\n  }]);\n\n  return KPP;\n}();\n\nexport default KPP;","map":{"version":3,"sources":["../../../../src/domain/legal_entity/vo/KPP.js"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;IAwBM,G;;;6BAKY,K,EAAK;AACnB,aAAO,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,KAAjB,IAA0B,SAA1B,GAAsC,6BAA7C;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAR;AACD;;;yBAEW,K,EAAK;AACf,aAAO,KAAK,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyB,KAAzB,CAA+B,CAA/B,EAAkC,CAAlC,CAAhB;AACD;;;wBAdiB;AAChB,aAAO,IAAI,MAAJ,CAAW,uCAAX,CAAP;AACD;;;wBAcqB;AACpB,aAAO,aAAP;AACD;;;wBAEc;AACb,aAAO,kDAAP;AACD;;;wBAEc;AACb,aAAO,KAAP;AACD;;;wBAEe;AACd,aAAO,KAAP;AACD;;;AAED,eAAY,GAAZ,EAAe;AAAA;;AACb,QAAI,GAAG,CAAC,OAAJ,WAAe,GAAf,EAAJ,EAA2B;AACzB,WAAK,iBAAL,GAAyB,UAAG,GAAH,EAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAzB;AACA,WAAK,mBAAL,GAA2B,UAAG,GAAH,EAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAA3B;AACA,WAAK,mBAAL,GAA2B,UAAG,GAAH,EAAS,SAAT,CAAmB,CAAnB,CAA3B;AACA,WAAK,MAAL,aAAiB,GAAjB;AACD,KALD,MAKO;AACL,WAAK,MAAL,GAAc,GAAd;AACD;AACF;;;;4BAEI;AACH,aAAO,IAAI,GAAJ,CAAQ,KAAK,KAAb,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEmB;AAClB,aAAO,KAAK,iBAAZ;AACD;;;wBAEqB;AACpB,aAAO,KAAK,mBAAZ;AACD;;;wBAEqB;AACpB,aAAO,KAAK,mBAAZ;AACD;;;;;;AAGH,eAAe,GAAf","sourceRoot":"","sourcesContent":["/*\r\n  КПП(Код Причины Постановки на учёт) состоит из 9 цифр\r\n\r\n  Этот номер не уникальный\r\n\r\n  Первые четыре цифры КПП представляют собой код налогового органа(codeTaxAuthority), в котором организация поставлена на учет.\r\n  Из них первые две цифры представляют собой код региона, а третья и четвертая цифры являются кодом (номером) налоговой инспекции.\r\n\r\n  Пятая и шестая цифры(буквы A-Z) КПП указывают причину постановки на учет(registrationReason). Могут быть латинские прописные буквы!!!\r\n  Например:\r\n    цифры 01 означают, что КПП присвоен организации в связи с постановкой на учет по месту ее нахождения;\r\n\r\n    цифры 02, 03, 04, 05, 31 или 32 означают, что КПП присвоен организации по месту нахождения обособленного подразделения организации;\r\n\r\n    цифры 06-08 означают, что КПП присвоен организации по месту нахождения принадлежащего ей недвижимого имущества (таким образом, транспортные средства не затрагиваются) в зависимости от вида имущества;\r\n\r\n    цифры 10-29 – означают, что КПП присвоен организации по месту нахождения принадлежащих ей транспортных средств в зависимости от вида транспортных средств;\r\n\r\n    цифры 50 означают, что КПП присвоен в связи с постановкой на учет в качестве крупнейшего налогоплательщика.\r\n\r\n  Последние три цифры(registrationNumber) КПП представляют собой порядковый номер постановки организации на учет в ИФНС по основанию, в связи с которым ей присвоен этот КПП.\r\n\r\n  КПП может меняться (смена адреса которые относится к другой налоговой инспекции)\r\n*/\r\nclass KPP {\r\n    static get REG_EXP() {\r\n        return new RegExp('^[0-9]{2}[0-9]{2}[0-9A-Z]{2}[0-9]{3}$');\r\n    }\r\n    static validate(value) {\r\n        return KPP.REG_EXP.test(value) ? undefined : 'Введите код длиной 9 знаков';\r\n    }\r\n    static isValid(value) {\r\n        return !KPP.validate(value);\r\n    }\r\n    static mask(value) {\r\n        return value && value.replace(/\\D/g, '').slice(0, 9);\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите КПП';\r\n    }\r\n    static get hint() {\r\n        return 'Введите 9-значный Код Причины Постановки на учет';\r\n    }\r\n    static get name() {\r\n        return 'КПП';\r\n    }\r\n    static get field() {\r\n        return 'kpp';\r\n    }\r\n    constructor(kpp) {\r\n        if (KPP.isValid(`${kpp}`)) {\r\n            this._codeTaxAuthority = `${kpp}`.substring(0, 4);\r\n            this._registrationReason = `${kpp}`.substring(4, 6);\r\n            this._registrationNumber = `${kpp}`.substring(6);\r\n            this._value = `${kpp}`;\r\n        }\r\n        else {\r\n            this._value = kpp;\r\n        }\r\n    }\r\n    clone() {\r\n        return new KPP(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get codeTaxAuthority() {\r\n        return this._codeTaxAuthority;\r\n    }\r\n    get registrationReason() {\r\n        return this._registrationReason;\r\n    }\r\n    get registrationNumber() {\r\n        return this._registrationNumber;\r\n    }\r\n}\r\nexport default KPP;\r\n//# sourceMappingURL=KPP.js.map"]},"metadata":{},"sourceType":"module"}