{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useSelector,useDispatch}from'react-redux';import SecurityService from'@distate/core/dist/application/security/SecurityService';import Core from'@distate/core/dist/application/Core';import{INDIVIDUAL}from'../../../../common/Lbl';import{selectSearch}from'../../store/selectors';import{Button,ButtonKinds}from'@distate/components';import'./style.css';import{clearSearchContractors}from'../../store/actions';import{ChooseTable}from'./ChooseTable';import{ContractorTypes,DestinationType}from'../../helpers/contractors.typings';import{ChooseDestinationButtons}from'./ChooseDestinationButtons';import{IndividualForm,DestinationLocalForm,DestinationRoamingForm,DestinationLocalRoamingForm,Destination1CHubForm}from'./forms';/* Страница поиска контрагентов */export var InviteContractor=function InviteContractor(){var dispatch=useDispatch();var searchContractors=useSelector(selectSearch);/** признак того, что пользователь - ФЛ */var isCompany=!!Core.company;var _React$useState=React.useState(ContractorTypes.legal_entity),_React$useState2=_slicedToArray(_React$useState,2),contractorType=_React$useState2[0],setContractorType=_React$useState2[1];var _React$useState3=React.useState(DestinationType.Local),_React$useState4=_slicedToArray(_React$useState3,2),destinationType=_React$useState4[0],setDestinationType=_React$useState4[1];React.useEffect(function(){dispatch(clearSearchContractors());},[contractorType,destinationType,dispatch]);var visible=React.useMemo(function(){return SecurityService.hasDocumentRole();},[]);/* Возвращает форму в зависимости от выбранного типа контрагента и назначения */function getCurrentForm(){if(contractorType===ContractorTypes.natural_entity){return/*#__PURE__*/React.createElement(IndividualForm,null);}else if(!isCompany){/** если пользователь - ФЛ */return/*#__PURE__*/React.createElement(DestinationLocalForm,null);}else{switch(destinationType){case DestinationType.Local:return/*#__PURE__*/React.createElement(DestinationLocalForm,null);case DestinationType.Roaming:return/*#__PURE__*/React.createElement(DestinationRoamingForm,null);case DestinationType.LoaclRoaming:return/*#__PURE__*/React.createElement(DestinationLocalRoamingForm,null);case DestinationType.Hub1c:return/*#__PURE__*/React.createElement(Destination1CHubForm,null);default:return null;}}}var renderBody=function renderBody(){if(!visible){return/*#__PURE__*/React.createElement(\"p\",null,\"\\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0442\\u043E\\u0447\\u043D\\u043E \\u043F\\u0440\\u0430\\u0432 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432.\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"find-contractors\"},/*#__PURE__*/React.createElement(\"div\",{className:\"find-contractors-buttons\"},/*#__PURE__*/React.createElement(\"div\",{className:\"find-contractors-buttons-first-line\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setContractorType(ContractorTypes.legal_entity);},kind:contractorType===ContractorTypes.legal_entity?ButtonKinds.Primary:ButtonKinds.Secondary},\"\\u042E\\u0440\\u0438\\u0434\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E / \\u0418\\u041F\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setContractorType(ContractorTypes.natural_entity);},kind:contractorType===ContractorTypes.natural_entity?ButtonKinds.Primary:ButtonKinds.Secondary},INDIVIDUAL)),/** если выбран пункт ЮЛ и пользователь не ФЛ */contractorType===ContractorTypes.legal_entity&&isCompany&&/*#__PURE__*/React.createElement(ChooseDestinationButtons,{destinationType:destinationType,setDestinationType:setDestinationType}),getCurrentForm(),Object.keys(searchContractors).length!==0?/*#__PURE__*/React.createElement(ChooseTable,{contractorType:contractorType,destinationType:destinationType}):null));};return/*#__PURE__*/React.createElement(React.Fragment,null,renderBody());};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/contractors/components/invite-contractor/InviteContractor.tsx"],"names":["React","useSelector","useDispatch","SecurityService","Core","INDIVIDUAL","selectSearch","Button","ButtonKinds","clearSearchContractors","ChooseTable","ContractorTypes","DestinationType","ChooseDestinationButtons","IndividualForm","DestinationLocalForm","DestinationRoamingForm","DestinationLocalRoamingForm","Destination1CHubForm","InviteContractor","dispatch","searchContractors","isCompany","company","useState","legal_entity","contractorType","setContractorType","Local","destinationType","setDestinationType","useEffect","visible","useMemo","hasDocumentRole","getCurrentForm","natural_entity","Roaming","LoaclRoaming","Hub1c","renderBody","Primary","Secondary","Object","keys","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SecurityService from '@distate/core/dist/application/security/SecurityService';\r\nimport Core from '@distate/core/dist/application/Core';\r\n\r\nimport { INDIVIDUAL } from '../../../../common/Lbl';\r\n\r\nimport { selectSearch } from '../../store/selectors';\r\nimport { Button, ButtonKinds } from '@distate/components';\r\nimport './style.css';\r\nimport { clearSearchContractors } from '../../store/actions';\r\nimport { ChooseTable } from './ChooseTable';\r\nimport { ContractorTypes, DestinationType } from '../../helpers/contractors.typings';\r\nimport { ChooseDestinationButtons } from './ChooseDestinationButtons';\r\nimport {\r\n  IndividualForm,\r\n  DestinationLocalForm,\r\n  DestinationRoamingForm,\r\n  DestinationLocalRoamingForm,\r\n  Destination1CHubForm\r\n} from './forms';\r\n\r\n/* Страница поиска контрагентов */\r\nexport const InviteContractor: React.FC<RouteComponentProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const searchContractors = useSelector(selectSearch);\r\n\r\n  /** признак того, что пользователь - ФЛ */\r\n  const isCompany = !!Core.company;\r\n\r\n  const [contractorType, setContractorType] = React.useState<ContractorTypes>(\r\n    ContractorTypes.legal_entity\r\n  );\r\n  const [destinationType, setDestinationType] = React.useState<DestinationType>(\r\n    DestinationType.Local\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(clearSearchContractors());\r\n  }, [contractorType, destinationType, dispatch]);\r\n\r\n  const visible = React.useMemo(() => {\r\n    return SecurityService.hasDocumentRole();\r\n  }, []);\r\n\r\n  /* Возвращает форму в зависимости от выбранного типа контрагента и назначения */\r\n  function getCurrentForm() {\r\n    if (contractorType === ContractorTypes.natural_entity) {\r\n      return <IndividualForm />;\r\n    } else if (!isCompany) {\r\n      /** если пользователь - ФЛ */\r\n      return <DestinationLocalForm />;\r\n    } else {\r\n      switch (destinationType) {\r\n        case DestinationType.Local:\r\n          return <DestinationLocalForm />;\r\n        case DestinationType.Roaming:\r\n          return <DestinationRoamingForm />;\r\n        case DestinationType.LoaclRoaming:\r\n          return <DestinationLocalRoamingForm />;\r\n        case DestinationType.Hub1c:\r\n          return <Destination1CHubForm />;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderBody = () => {\r\n    if (!visible) {\r\n      return <p>Недостаточно прав для отображения документов.</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"find-contractors\">\r\n        <div className=\"find-contractors-buttons\">\r\n          <div className=\"find-contractors-buttons-first-line\">\r\n            <Button\r\n              onClick={() => setContractorType(ContractorTypes.legal_entity)}\r\n              kind={\r\n                contractorType === ContractorTypes.legal_entity\r\n                  ? ButtonKinds.Primary\r\n                  : ButtonKinds.Secondary\r\n              }\r\n            >\r\n              Юридическое лицо / ИП\r\n            </Button>\r\n            <Button\r\n              onClick={() => setContractorType(ContractorTypes.natural_entity)}\r\n              kind={\r\n                contractorType === ContractorTypes.natural_entity\r\n                  ? ButtonKinds.Primary\r\n                  : ButtonKinds.Secondary\r\n              }\r\n            >\r\n              {INDIVIDUAL}\r\n            </Button>\r\n          </div>\r\n          {/** если выбран пункт ЮЛ и пользователь не ФЛ */\r\n          contractorType === ContractorTypes.legal_entity && isCompany && (\r\n            <ChooseDestinationButtons\r\n              destinationType={destinationType}\r\n              setDestinationType={setDestinationType}\r\n            />\r\n          )}\r\n          {getCurrentForm()}\r\n\r\n          {/** Если есть результат поиска */}\r\n          {Object.keys(searchContractors).length !== 0 ? (\r\n            <ChooseTable contractorType={contractorType} destinationType={destinationType} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <>{renderBody()}</>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}