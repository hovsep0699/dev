{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport AJAX from '../../infrastructure/AJAX';\n\nvar FinanceGateway = /*#__PURE__*/function () {\n  function FinanceGateway() {\n    _classCallCheck(this, FinanceGateway);\n  }\n\n  _createClass(FinanceGateway, [{\n    key: \"getBalance\",\n\n    /** получить информацию о балансе */\n    value: function getBalance(id) {\n      return AJAX.doGet(\"/front/tariff/balance/company/\".concat(id));\n    }\n  }, {\n    key: \"setBalance\",\n\n    /** установить баланс */\n    value: function setBalance(id, formData) {\n      return AJAX.postFormData(\"/front/tariff/balance/company/\".concat(id), formData);\n    }\n    /** информация о тарифах компании */\n\n  }, {\n    key: \"getTariffsByCompanyId\",\n    value: function getTariffsByCompanyId(id) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return AJAX.doGet(\"/front/tariff/service/company/\".concat(id), params);\n    }\n    /** получить список видов документооборота для тарифа */\n\n  }, {\n    key: \"getTariffFlow\",\n    value: function getTariffFlow(id) {\n      return AJAX.doGet(\"/front/tariff/flow/\".concat(id, \"/flow\"));\n    }\n    /** выставить счет */\n\n  }, {\n    key: \"setBill\",\n    value: function setBill(id, formData) {\n      return AJAX.postFormData(\"/front/tariff/balance/company/\".concat(id, \"/bill\"), formData);\n    }\n    /** получить список тарифов */\n\n  }, {\n    key: \"getTariffs\",\n    value: function getTariffs(params) {\n      return AJAX.doGet('/front/tariff', params);\n    }\n    /** изменить тариф */\n\n  }, {\n    key: \"changeTariff\",\n    value: function changeTariff(id, formData) {\n      return AJAX.postFormData(\"/front/tariff/service/company/\".concat(id), formData);\n    }\n    /** получить баланс тарифа */\n\n  }, {\n    key: \"getTariffBalance\",\n    value: function getTariffBalance(id) {\n      return AJAX.doGet(\"/front/tariff/balance/service/\".concat(id));\n    }\n    /** получить историю транзакций */\n\n  }, {\n    key: \"getTransactionsHistory\",\n    value: function getTransactionsHistory(id) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return AJAX.doGet(\"/front/tariff/balance/company/\".concat(id, \"/transaction\"), params);\n    }\n    /** получить сведения о тарифе */\n\n  }, {\n    key: \"getTariff\",\n    value: function getTariff(id) {\n      return AJAX.doGet(\"/front/tariff/\".concat(id));\n    }\n    /** типы тарифов */\n\n  }, {\n    key: \"getTariffTypes\",\n    value: function getTariffTypes() {\n      return AJAX.doGet('/front/tariff/tariff_type');\n    }\n    /** статусы тарифов */\n\n  }, {\n    key: \"getTariffStatuses\",\n    value: function getTariffStatuses() {\n      return AJAX.doGet('/front/tariff/tariff_status');\n    }\n    /** Отредактировать сведения о траифе */\n\n  }, {\n    key: \"editTariff\",\n    value: function editTariff(id, formData) {\n      return AJAX.postFormData(\"/front/tariff/\".concat(id), formData);\n    }\n    /** обновить данные по виду документооборота для тарифа */\n\n  }, {\n    key: \"updateTariffFlow\",\n    value: function updateTariffFlow(tariffId, flowId, formData) {\n      return AJAX.postFormData(\"/front/tariff/flow/\".concat(tariffId, \"/flow/\").concat(flowId), formData);\n    }\n    /** создать тариф */\n\n  }, {\n    key: \"createTariff\",\n    value: function createTariff(formdata) {\n      return AJAX.postFormData('/front/tariff/new', formdata);\n    }\n    /** установить статус тарифа */\n\n  }, {\n    key: \"setTariffStatus\",\n    value: function setTariffStatus(tariffId, statusSystemName) {\n      return AJAX.postJSON(\"/front/tariff/\".concat(tariffId, \"/status/\").concat(statusSystemName));\n    }\n  }]);\n\n  return FinanceGateway;\n}();\n\nexport var financeGateway = new FinanceGateway();","map":{"version":3,"sources":["../../../src/application/finance/FinanceGateway.js"],"names":[],"mappings":";;AAAA,OAAO,IAAP,MAAiB,2BAAjB;;IAEM,c;;;;;;;;AACJ;+BACW,E,EAAE;AACX,aAAO,IAAI,CAAC,KAAL,yCAA4C,EAA5C,EAAP;AACD;;;;AAED;+BACW,E,EAAI,Q,EAAQ;AACrB,aAAO,IAAI,CAAC,YAAL,yCAAmD,EAAnD,GAAyD,QAAzD,CAAP;AACD;AAED;;;;0CACsB,E,EAAe;AAAA,UAAX,MAAW,uEAAF,EAAE;AACnC,aAAO,IAAI,CAAC,KAAL,yCAA4C,EAA5C,GAAkD,MAAlD,CAAP;AACD;AAED;;;;kCACc,E,EAAE;AACd,aAAO,IAAI,CAAC,KAAL,8BAAiC,EAAjC,WAAP;AACD;AAED;;;;4BACQ,E,EAAI,Q,EAAQ;AAClB,aAAO,IAAI,CAAC,YAAL,yCAAmD,EAAnD,YAA8D,QAA9D,CAAP;AACD;AAED;;;;+BACW,M,EAAM;AACf,aAAO,IAAI,CAAC,KAAL,CAAW,eAAX,EAA4B,MAA5B,CAAP;AACD;AAED;;;;iCACa,E,EAAI,Q,EAAQ;AACvB,aAAO,IAAI,CAAC,YAAL,yCAAmD,EAAnD,GAAyD,QAAzD,CAAP;AACD;AAED;;;;qCACiB,E,EAAE;AACjB,aAAO,IAAI,CAAC,KAAL,yCAA4C,EAA5C,EAAP;AACD;AAED;;;;2CACuB,E,EAAe;AAAA,UAAX,MAAW,uEAAF,EAAE;AACpC,aAAO,IAAI,CAAC,KAAL,yCAA4C,EAA5C,mBAA8D,MAA9D,CAAP;AACD;AAED;;;;8BACU,E,EAAE;AACV,aAAO,IAAI,CAAC,KAAL,yBAA4B,EAA5B,EAAP;AACD;AAED;;;;qCACc;AACZ,aAAO,IAAI,CAAC,KAAL,CAAW,2BAAX,CAAP;AACD;AAED;;;;wCACiB;AACf,aAAO,IAAI,CAAC,KAAL,CAAW,6BAAX,CAAP;AACD;AAED;;;;+BACW,E,EAAI,Q,EAAQ;AACrB,aAAO,IAAI,CAAC,YAAL,yBAAmC,EAAnC,GAAyC,QAAzC,CAAP;AACD;AAED;;;;qCACiB,Q,EAAU,M,EAAQ,Q,EAAQ;AACzC,aAAO,IAAI,CAAC,YAAL,8BAAwC,QAAxC,mBAAyD,MAAzD,GAAmE,QAAnE,CAAP;AACD;AAED;;;;iCACa,Q,EAAQ;AACnB,aAAO,IAAI,CAAC,YAAL,CAAkB,mBAAlB,EAAuC,QAAvC,CAAP;AACD;AAED;;;;oCACgB,Q,EAAU,gB,EAAgB;AACxC,aAAO,IAAI,CAAC,QAAL,yBAA+B,QAA/B,qBAAkD,gBAAlD,EAAP;AACD;;;;;;AAKH,OAAO,IAAM,cAAc,GAAG,IAAI,cAAJ,EAAvB","sourceRoot":"","sourcesContent":["import AJAX from '../../infrastructure/AJAX';\r\nclass FinanceGateway {\r\n    /** получить информацию о балансе */\r\n    getBalance(id) {\r\n        return AJAX.doGet(`/front/tariff/balance/company/${id}`);\r\n    }\r\n    ;\r\n    /** установить баланс */\r\n    setBalance(id, formData) {\r\n        return AJAX.postFormData(`/front/tariff/balance/company/${id}`, formData);\r\n    }\r\n    /** информация о тарифах компании */\r\n    getTariffsByCompanyId(id, params = {}) {\r\n        return AJAX.doGet(`/front/tariff/service/company/${id}`, params);\r\n    }\r\n    /** получить список видов документооборота для тарифа */\r\n    getTariffFlow(id) {\r\n        return AJAX.doGet(`/front/tariff/flow/${id}/flow`);\r\n    }\r\n    /** выставить счет */\r\n    setBill(id, formData) {\r\n        return AJAX.postFormData(`/front/tariff/balance/company/${id}/bill`, formData);\r\n    }\r\n    /** получить список тарифов */\r\n    getTariffs(params) {\r\n        return AJAX.doGet('/front/tariff', params);\r\n    }\r\n    /** изменить тариф */\r\n    changeTariff(id, formData) {\r\n        return AJAX.postFormData(`/front/tariff/service/company/${id}`, formData);\r\n    }\r\n    /** получить баланс тарифа */\r\n    getTariffBalance(id) {\r\n        return AJAX.doGet(`/front/tariff/balance/service/${id}`);\r\n    }\r\n    /** получить историю транзакций */\r\n    getTransactionsHistory(id, params = {}) {\r\n        return AJAX.doGet(`/front/tariff/balance/company/${id}/transaction`, params);\r\n    }\r\n    /** получить сведения о тарифе */\r\n    getTariff(id) {\r\n        return AJAX.doGet(`/front/tariff/${id}`);\r\n    }\r\n    /** типы тарифов */\r\n    getTariffTypes() {\r\n        return AJAX.doGet('/front/tariff/tariff_type');\r\n    }\r\n    /** статусы тарифов */\r\n    getTariffStatuses() {\r\n        return AJAX.doGet('/front/tariff/tariff_status');\r\n    }\r\n    /** Отредактировать сведения о траифе */\r\n    editTariff(id, formData) {\r\n        return AJAX.postFormData(`/front/tariff/${id}`, formData);\r\n    }\r\n    /** обновить данные по виду документооборота для тарифа */\r\n    updateTariffFlow(tariffId, flowId, formData) {\r\n        return AJAX.postFormData(`/front/tariff/flow/${tariffId}/flow/${flowId}`, formData);\r\n    }\r\n    /** создать тариф */\r\n    createTariff(formdata) {\r\n        return AJAX.postFormData('/front/tariff/new', formdata);\r\n    }\r\n    /** установить статус тарифа */\r\n    setTariffStatus(tariffId, statusSystemName) {\r\n        return AJAX.postJSON(`/front/tariff/${tariffId}/status/${statusSystemName}`);\r\n    }\r\n}\r\nexport const financeGateway = new FinanceGateway();\r\n//# sourceMappingURL=FinanceGateway.js.map"]},"metadata":{},"sourceType":"module"}