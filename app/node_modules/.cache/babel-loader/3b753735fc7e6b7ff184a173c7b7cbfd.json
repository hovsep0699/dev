{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Code from './Code';\n\nvar Measurement = /*#__PURE__*/function () {\n  _createClass(Measurement, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return !value ? 'Выберите значение из списка' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Measurement.validate(value);\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Начните вводить название единицы измерения и выберите его из выпадающего списка';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return '-';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Единица измерения';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'measurement';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [Code];\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'autocomplete';\n    }\n  }]);\n\n  function Measurement(_ref) {\n    var id = _ref.id,\n        code = _ref.code,\n        title = _ref.title,\n        local_designation = _ref.local_designation;\n\n    _classCallCheck(this, Measurement);\n\n    this.id = id;\n    this.code = code;\n    this.title = title;\n    this.localDesignation = local_designation;\n  }\n\n  _createClass(Measurement, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Measurement({\n        id: this._id,\n        code: this.code,\n        title: this._title,\n        local_designation: this.localDesignation\n      });\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var _ref2;\n\n      return _ref2 = {}, _defineProperty(_ref2, Code.field, this.code), _defineProperty(_ref2, \"id\", this.id), _defineProperty(_ref2, \"title\", this.title), _defineProperty(_ref2, \"localDesignation\", this.localDesignation), _ref2;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(value) {\n      this._id = value;\n    }\n  }, {\n    key: \"code\",\n    get: function get() {\n      return this._code;\n    },\n    set: function set(value) {\n      this._code = new Code(value);\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._title;\n    },\n    set: function set(value) {\n      this._title = value;\n    }\n  }, {\n    key: \"localDesignation\",\n    get: function get() {\n      return this._localDesignation;\n    },\n    set: function set(value) {\n      this._localDesignation = value;\n    }\n  }]);\n\n  return Measurement;\n}();\n\nexport default Measurement;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/vo/measurement/Measurement.js"],"names":[],"mappings":";;;AAAA,OAAO,IAAP,MAAiB,QAAjB;;IAEM,W;;;6BACY,K,EAAK;AACnB,aAAO,CAAC,KAAD,GAAS,6BAAT,GAAyC,SAAhD;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,WAAW,CAAC,QAAZ,CAAqB,KAArB,CAAR;AACD;;;wBAEc;AACb,aAAO,iFAAP;AACD;;;wBAEqB;AACpB,aAAO,GAAP;AACD;;;wBAEc;AACb,aAAO,mBAAP;AACD;;;wBAEe;AACd,aAAO,aAAP;AACD;;;wBAEa;AACZ,aAAO,CAAC,IAAD,CAAP;AACD;;;wBAEc;AACb,aAAO,cAAP;AACD;;;AAED,6BAKC;AAAA,QAJC,EAID,QAJC,EAID;AAAA,QAHC,IAGD,QAHC,IAGD;AAAA,QAFC,KAED,QAFC,KAED;AAAA,QADC,iBACD,QADC,iBACD;;AAAA;;AACC,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,gBAAL,GAAwB,iBAAxB;AACD;;;;4BAEI;AACH,aAAO,IAAI,WAAJ,CAAgB;AACrB,QAAA,EAAE,EAAE,KAAK,GADY;AAErB,QAAA,IAAI,EAAE,KAAK,IAFU;AAGrB,QAAA,KAAK,EAAE,KAAK,MAHS;AAIrB,QAAA,iBAAiB,EAAE,KAAK;AAJH,OAAhB,CAAP;AAMD;;;wBAEQ;AAAA;;AACP,gDACG,IAAI,CAAC,KADR,EACgB,KAAK,IADrB,gCAEM,KAAK,EAFX,mCAGS,KAAK,KAHd,8CAIoB,KAAK,gBAJzB;AAMD;;;wBAEK;AACJ,aAAO,KAAK,GAAZ;AACD,K;sBAEM,K,EAAK;AACV,WAAK,GAAL,GAAW,KAAX;AACD;;;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD,K;sBAEQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,KAAT,CAAb;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD,K;sBAES,K,EAAK;AACb,WAAK,MAAL,GAAc,KAAd;AACD;;;wBAEmB;AAClB,aAAO,KAAK,iBAAZ;AACD,K;sBAEoB,K,EAAK;AACxB,WAAK,iBAAL,GAAyB,KAAzB;AACD;;;;;;AAGH,eAAe,WAAf","sourceRoot":"","sourcesContent":["import Code from './Code';\r\nclass Measurement {\r\n    static validate(value) {\r\n        return !value ? 'Выберите значение из списка' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Measurement.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Начните вводить название единицы измерения и выберите его из выпадающего списка';\r\n    }\r\n    static get placeholder() {\r\n        return '-';\r\n    }\r\n    static get name() {\r\n        return 'Единица измерения';\r\n    }\r\n    static get field() {\r\n        return 'measurement';\r\n    }\r\n    static get VOs() {\r\n        return [Code];\r\n    }\r\n    static get type() {\r\n        return 'autocomplete';\r\n    }\r\n    constructor({ id, code, title, local_designation }) {\r\n        this.id = id;\r\n        this.code = code;\r\n        this.title = title;\r\n        this.localDesignation = local_designation;\r\n    }\r\n    clone() {\r\n        return new Measurement({\r\n            id: this._id,\r\n            code: this.code,\r\n            title: this._title,\r\n            local_designation: this.localDesignation\r\n        });\r\n    }\r\n    get value() {\r\n        return {\r\n            [Code.field]: this.code,\r\n            id: this.id,\r\n            title: this.title,\r\n            localDesignation: this.localDesignation,\r\n        };\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(value) {\r\n        this._id = value;\r\n    }\r\n    get code() {\r\n        return this._code;\r\n    }\r\n    set code(value) {\r\n        this._code = new Code(value);\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    set title(value) {\r\n        this._title = value;\r\n    }\r\n    get localDesignation() {\r\n        return this._localDesignation;\r\n    }\r\n    set localDesignation(value) {\r\n        this._localDesignation = value;\r\n    }\r\n}\r\nexport default Measurement;\r\n//# sourceMappingURL=Measurement.js.map"]},"metadata":{},"sourceType":"module"}