{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { HTMLContainer, HTMLInput, HTMLLabel, HTMLSelect, customStyles } from './Autocomplete.style';\nexport var Autocomplete = function Autocomplete(_a) {\n  var name = _a.name,\n      label = _a.label,\n      value = _a.value,\n      className = _a.className,\n      disabled = _a.disabled,\n      required = _a.required,\n      onChange = _a.onChange,\n      error = _a.error,\n      errors = _a.errors,\n      loadOptions = _a.loadOptions,\n      simple = _a.simple,\n      defaultOptions = _a.defaultOptions,\n      _a$placeholder = _a.placeholder,\n      placeholder = _a$placeholder === void 0 ? '' : _a$placeholder,\n      width = _a.width,\n      props = __rest(_a, [\"name\", \"label\", \"value\", \"className\", \"disabled\", \"required\", \"onChange\", \"error\", \"errors\", \"loadOptions\", \"simple\", \"defaultOptions\", \"placeholder\", \"width\"]);\n\n  var thema = React.useContext(ThemeContext);\n\n  var handleInputChange = function handleInputChange(value) {\n    if (onChange) onChange(value, name);\n  };\n\n  return React.createElement(HTMLContainer, {\n    className: className,\n    \"$width\": width\n  }, label && React.createElement(HTMLLabel, {\n    \"$required\": !!required\n  }, label), disabled ? React.createElement(HTMLInput, {\n    value: value ? value.label || value.value : '',\n    className: className,\n    disabled: disabled\n  }) : React.createElement(HTMLSelect, Object.assign({}, props, {\n    value: value || '',\n    width: width,\n    cacheOptions: true,\n    error: error,\n    styles: customStyles(thema, {\n      simple: simple\n    }),\n    onChange: handleInputChange,\n    loadOptions: loadOptions,\n    placeholder: placeholder,\n    defaultOptions: defaultOptions\n  })), errors ? React.createElement(\"small\", {\n    className: \"error\"\n  }, errors[0]) : null);\n};","map":{"version":3,"sources":["../../src/Autocomplete/Autocomplete.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,mBAA7B;AAEA,SACE,aADF,EAEE,SAFF,EAGE,SAHF,EAIE,UAJF,EAKE,YALF,QAMO,sBANP;AAwBA,OAAO,IAAM,YAAY,GAA4B,SAAxC,YAAwC,CAAC,EAAD,EAgBhD;AAAA,MAfH,IAeG,GAFE,EAEF,CAfH,IAeG;AAAA,MAdH,KAcG,GAFE,EAEF,CAdH,KAcG;AAAA,MAbH,KAaG,GAFE,EAEF,CAbH,KAaG;AAAA,MAZH,SAYG,GAFE,EAEF,CAZH,SAYG;AAAA,MAXH,QAWG,GAFE,EAEF,CAXH,QAWG;AAAA,MAVH,QAUG,GAFE,EAEF,CAVH,QAUG;AAAA,MATH,QASG,GAFE,EAEF,CATH,QASG;AAAA,MARH,KAQG,GAFE,EAEF,CARH,KAQG;AAAA,MAPH,MAOG,GAFE,EAEF,CAPH,MAOG;AAAA,MANH,WAMG,GAFE,EAEF,CANH,WAMG;AAAA,MALH,MAKG,GAFE,EAEF,CALH,MAKG;AAAA,MAJH,cAIG,GAFE,EAEF,CAJH,cAIG;AAAA,uBAFE,EAEF,CAHH,WAGG;AAAA,MAHH,WAGG,+BAHW,EAGX;AAAA,MAFH,KAEG,GAFE,EAEF,CAFH,KAEG;AAAA,MADA,KACA,GADK,MAAA,CAAA,EAAA,EAf4C,CAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,OAAA,CAe5C,CACL;;AACH,MAAM,KAAK,GAAG,KAAK,CAAC,UAAN,CAAiB,YAAjB,CAAd;;AAEA,MAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,KAAD,EAAe;AACvC,QAAI,QAAJ,EAAc,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAAR;AACf,GAFD;;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,IAAA,SAAS,EAAE,SAAZ;AAAqB,cAAU;AAA/B,GAAd,EACG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAA,iBAAY,CAAC,CAAC;AAAd,GAAV,EAAmC,KAAnC,CADZ,EAEG,QAAQ,GACP,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,IAAA,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,KAAxB,GAAgC,EADpC;AAER,IAAA,SAAS,EAAE,SAFH;AAGR,IAAA,QAAQ,EAAE;AAHF,GAAV,CADO,GAOP,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA,EAAA,EACL,KADK,EACA;AACT,IAAA,KAAK,EAAE,KAAK,IAAI,EADP;AAET,IAAA,KAAK,EAAE,KAFE;AAGT,IAAA,YAAY,EAAA,IAHH;AAIT,IAAA,KAAK,EAAE,KAJE;AAKT,IAAA,MAAM,EAAE,YAAY,CAAC,KAAD,EAAQ;AAAE,MAAA,MAAM,EAAN;AAAF,KAAR,CALX;AAMT,IAAA,QAAQ,EAAE,iBAND;AAOT,IAAA,WAAW,EAAE,WAPJ;AAQT,IAAA,WAAW,EAAE,WARJ;AAST,IAAA,cAAc,EAAE;AATP,GADA,CAAX,CATJ,EAsBG,MAAM,GAAG,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,SAAS,EAAC;AAAjB,GAAA,EAA0B,MAAM,CAAC,CAAD,CAAhC,CAAH,GAAkD,IAtB3D,CADF;AA0BD,CAjDM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport React from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { HTMLContainer, HTMLInput, HTMLLabel, HTMLSelect, customStyles } from './Autocomplete.style';\r\nexport const Autocomplete = (_a) => {\r\n    var { name, label, value, className, disabled, required, onChange, error, errors, loadOptions, simple, defaultOptions, placeholder = '', width } = _a, props = __rest(_a, [\"name\", \"label\", \"value\", \"className\", \"disabled\", \"required\", \"onChange\", \"error\", \"errors\", \"loadOptions\", \"simple\", \"defaultOptions\", \"placeholder\", \"width\"]);\r\n    const thema = React.useContext(ThemeContext);\r\n    const handleInputChange = (value) => {\r\n        if (onChange)\r\n            onChange(value, name);\r\n    };\r\n    return (React.createElement(HTMLContainer, { className: className, \"$width\": width },\r\n        label && React.createElement(HTMLLabel, { \"$required\": !!required }, label),\r\n        disabled ? (React.createElement(HTMLInput, { value: value ? value.label || value.value : '', className: className, disabled: disabled })) : (React.createElement(HTMLSelect, Object.assign({}, props, { value: value || '', width: width, cacheOptions: true, error: error, styles: customStyles(thema, { simple }), onChange: handleInputChange, loadOptions: loadOptions, placeholder: placeholder, defaultOptions: defaultOptions }))),\r\n        errors ? React.createElement(\"small\", { className: \"error\" }, errors[0]) : null));\r\n};\r\n//# sourceMappingURL=Autocomplete.js.map"]},"metadata":{},"sourceType":"module"}