{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Environment from '../Environment';\nimport DiError, { SECURITY } from '../error/Error';\n\nvar SecurityService = /*#__PURE__*/function () {\n  function SecurityService() {\n    _classCallCheck(this, SecurityService);\n\n    this._roles = new Map();\n  }\n\n  _createClass(SecurityService, [{\n    key: \"update\",\n    value: function update(successCallback) {\n      var _this = this;\n\n      var url = '/front/user/current';\n\n      var successHandler = function successHandler(rawUser) {\n        _this._roles = new Map();\n        rawUser.roles.forEach(function (role) {\n          _this.addRole(role);\n        });\n        successCallback();\n      };\n\n      var failHandler = function failHandler(error) {\n        throw new DiError(SECURITY, 'Ошибка получения прав пользователя', \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), error);\n      };\n\n      return Environment.getAuthGateway().currentUser().then(successHandler).catch(failHandler);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._roles = new Map();\n    }\n  }, {\n    key: \"addRole\",\n    value: function addRole(role) {\n      this._roles.set(role, true);\n    }\n  }, {\n    key: \"hasRole\",\n    value: function hasRole(role) {\n      return Array.from(this._roles.keys()).includes(role);\n    }\n  }, {\n    key: \"hasExactRole\",\n    value: function hasExactRole(role) {\n      return this._roles.has(role);\n    }\n  }, {\n    key: \"hasRoles\",\n    value: function hasRoles(roles) {\n      var _this2 = this;\n\n      return roles.some(function (role) {\n        return _this2.hasRole(role);\n      });\n    }\n  }, {\n    key: \"hasDocumentRole\",\n    value: function hasDocumentRole() {\n      var keys = Array.from(this._roles.keys());\n      return keys.some(function (role) {\n        return role.includes('ROLE_CNO') !== -1;\n      });\n    }\n  }, {\n    key: \"hasConnecterRole\",\n    value: function hasConnecterRole() {\n      var keys = Array.from(this._roles.keys());\n      return keys.some(function (role) {\n        return role === 'ROLE_CONNECTOR_OPERATOR' || role === 'ROLE_CNO';\n      });\n    }\n  }, {\n    key: \"hasSignRole\",\n    value: function hasSignRole() {\n      return Array.from(this._roles.keys()).some(function (role) {\n        return role.includes('ROLE_DOCUMENT_SIGNOR') || role.includes('ROLE_CNO');\n      });\n    }\n  }]);\n\n  return SecurityService;\n}();\n\nvar instance = new SecurityService();\nexport default instance;","map":{"version":3,"sources":["../../../src/application/security/SecurityService.js"],"names":[],"mappings":";;AAAA,OAAO,WAAP,MAAwB,gBAAxB;AACA,OAAO,OAAP,IAAkB,QAAlB,QAAkC,gBAAlC;;IAEM,e;AACJ,6BAAA;AAAA;;AACE,SAAK,MAAL,GAAc,IAAI,GAAJ,EAAd;AACD;;;;2BAEM,e,EAAe;AAAA;;AACpB,UAAM,GAAG,GAAG,qBAAZ;;AACA,UAAM,cAAc,GAAG,SAAjB,cAAiB,CAAA,OAAO,EAAG;AAC/B,QAAA,KAAI,CAAC,MAAL,GAAc,IAAI,GAAJ,EAAd;AACA,QAAA,OAAO,CAAC,KAAR,CAAc,OAAd,CAAsB,UAAA,IAAI,EAAG;AAC3B,UAAA,KAAI,CAAC,OAAL,CAAa,IAAb;AACD,SAFD;AAGA,QAAA,eAAe;AAChB,OAND;;AAQA,UAAM,WAAW,GAAG,SAAd,WAAc,CAAA,KAAK,EAAG;AAC1B,cAAM,IAAI,OAAJ,CAAY,QAAZ,EAAsB,oCAAtB,iDAAsE,GAAtE,GAA6E,KAA7E,CAAN;AACD,OAFD;;AAIA,aAAO,WAAW,CAAC,cAAZ,GACJ,WADI,GAEJ,IAFI,CAEC,cAFD,EAGJ,KAHI,CAGE,WAHF,CAAP;AAID;;;4BAEI;AACH,WAAK,MAAL,GAAc,IAAI,GAAJ,EAAd;AACD;;;4BAEO,I,EAAI;AACV,WAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,EAAsB,IAAtB;AACD;;;4BAEO,I,EAAI;AACV,aAAO,KAAK,CAAC,IAAN,CAAW,KAAK,MAAL,CAAY,IAAZ,EAAX,EAA+B,QAA/B,CAAwC,IAAxC,CAAP;AACD;;;iCAEY,I,EAAI;AACf,aAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,CAAP;AACD;;;6BAEQ,K,EAAK;AAAA;;AACZ,aAAO,KAAK,CAAC,IAAN,CAAW,UAAA,IAAI;AAAA,eAAI,MAAI,CAAC,OAAL,CAAa,IAAb,CAAJ;AAAA,OAAf,CAAP;AACD;;;sCAEc;AACb,UAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,MAAL,CAAY,IAAZ,EAAX,CAAb;AACA,aAAO,IAAI,CAAC,IAAL,CACL,UAAA,IAAI;AAAA,eACF,IAAI,CAAC,QAAL,CAAc,UAAd,MAA8B,CAAC,CAD7B;AAAA,OADC,CAAP;AAID;;;uCAEe;AACd,UAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,MAAL,CAAY,IAAZ,EAAX,CAAb;AACA,aAAO,IAAI,CAAC,IAAL,CAAU,UAAA,IAAI;AAAA,eAAI,IAAI,KAAK,yBAAT,IAAsC,IAAI,KAAK,UAAnD;AAAA,OAAd,CAAP;AACD;;;kCAEU;AACT,aAAO,KAAK,CAAC,IAAN,CAAW,KAAK,MAAL,CAAY,IAAZ,EAAX,EAA+B,IAA/B,CACL,UAAA,IAAI;AAAA,eAAI,IAAI,CAAC,QAAL,CAAc,sBAAd,KAAyC,IAAI,CAAC,QAAL,CAAc,UAAd,CAA7C;AAAA,OADC,CAAP;AAGD;;;;;;AAGH,IAAM,QAAQ,GAAG,IAAI,eAAJ,EAAjB;AACA,eAAe,QAAf","sourceRoot":"","sourcesContent":["import Environment from '../Environment';\r\nimport DiError, { SECURITY } from '../error/Error';\r\nclass SecurityService {\r\n    constructor() {\r\n        this._roles = new Map();\r\n    }\r\n    update(successCallback) {\r\n        const url = '/front/user/current';\r\n        const successHandler = rawUser => {\r\n            this._roles = new Map();\r\n            rawUser.roles.forEach(role => {\r\n                this.addRole(role);\r\n            });\r\n            successCallback();\r\n        };\r\n        const failHandler = error => {\r\n            throw new DiError(SECURITY, 'Ошибка получения прав пользователя', `Запрос ${url}`, error);\r\n        };\r\n        return Environment.getAuthGateway()\r\n            .currentUser()\r\n            .then(successHandler)\r\n            .catch(failHandler);\r\n    }\r\n    clear() {\r\n        this._roles = new Map();\r\n    }\r\n    addRole(role) {\r\n        this._roles.set(role, true);\r\n    }\r\n    hasRole(role) {\r\n        return Array.from(this._roles.keys()).includes(role);\r\n    }\r\n    hasExactRole(role) {\r\n        return this._roles.has(role);\r\n    }\r\n    hasRoles(roles) {\r\n        return roles.some(role => this.hasRole(role));\r\n    }\r\n    hasDocumentRole() {\r\n        const keys = Array.from(this._roles.keys());\r\n        return keys.some(role => role.includes('ROLE_CNO') !== -1);\r\n    }\r\n    hasConnecterRole() {\r\n        const keys = Array.from(this._roles.keys());\r\n        return keys.some(role => role === 'ROLE_CONNECTOR_OPERATOR' || role === 'ROLE_CNO');\r\n    }\r\n    hasSignRole() {\r\n        return Array.from(this._roles.keys()).some(role => role.includes('ROLE_DOCUMENT_SIGNOR') || role.includes('ROLE_CNO'));\r\n    }\r\n}\r\nconst instance = new SecurityService();\r\nexport default instance;\r\n//# sourceMappingURL=SecurityService.js.map"]},"metadata":{},"sourceType":"module"}