{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Тип физического лица, принявшего товары (груз)\r\n*/\nimport Employee from './type/Employee';\nimport Assignee from './type/Assignee';\nimport FL from './type/FL';\n\nvar Type = /*#__PURE__*/function () {\n  _createClass(Type, null, [{\n    key: \"validate\",\n    value: function validate(values) {\n      var errorMsgs = [];\n      Type.VOs.forEach(function (DomainVO) {\n        values.forEach(function (val) {\n          var msg = DomainVO.validate(val[DomainVO.field]);\n\n          if (msg !== undefined) {\n            errorMsgs.push(msg);\n          }\n        });\n      });\n      return errorMsgs.length > 0 ? 'Тип физического лица заполнен неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Type.validate(value);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Товар передал';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Выберите тип физического лица, принявшего товары (груз)';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'type';\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return [Employee, Assignee, FL];\n    }\n  }]);\n\n  function Type(participant) {\n    _classCallCheck(this, Type);\n\n    this.participant = participant;\n  }\n\n  _createClass(Type, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Type(this.type);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    },\n    set: function set(value) {\n      this._type = value;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.type;\n    }\n  }]);\n\n  return Type;\n}();\n\nexport default Type;","map":{"version":3,"sources":["../../../../../../../src/domain/documents/upd/vo/transfer/passedBy/Type.js"],"names":[],"mappings":";;;AAAA;;;AAGA,OAAO,QAAP,MAAqB,iBAArB;AACA,OAAO,QAAP,MAAqB,iBAArB;AACA,OAAO,EAAP,MAAe,WAAf;;IAEM,I;;;6BACY,M,EAAM;AACpB,UAAM,SAAS,GAAG,EAAlB;AACA,MAAA,IAAI,CAAC,GAAL,CAAS,OAAT,CAAiB,UAAC,QAAD,EAAa;AAC5B,QAAA,MAAM,CAAC,OAAP,CAAe,UAAC,GAAD,EAAQ;AACrB,cAAM,GAAG,GAAG,QAAQ,CAAC,QAAT,CAAkB,GAAG,CAAC,QAAQ,CAAC,KAAV,CAArB,CAAZ;;AACA,cAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,YAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACD;AACF,SALD;AAMD,OAPD;AAQA,aAAQ,SAAS,CAAC,MAAV,GAAmB,CAApB,GAAyB,uCAAzB,GAAmE,SAA1E;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,IAAI,CAAC,QAAL,CAAc,KAAd,CAAR;AACD;;;wBAEc;AACb,aAAO,eAAP;AACD;;;wBAEc;AACb,aAAO,yDAAP;AACD;;;wBAEe;AACd,aAAO,MAAP;AACD;;;wBAEiB;AAChB,aAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,EAArB,CAAP;AACD;;;AAED,gBAAY,WAAZ,EAAuB;AAAA;;AACrB,SAAK,WAAL,GAAmB,WAAnB;AACD;;;;4BAEI;AACH,aAAO,IAAI,IAAJ,CAAS,KAAK,IAAd,CAAP;AACD;;;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD,K;sBAEQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,KAAb;AACD;;;wBAEQ;AACP,aAAO,KAAK,IAAZ;AACD;;;;;;AAGH,eAAe,IAAf","sourceRoot":"","sourcesContent":["/*\r\n  Тип физического лица, принявшего товары (груз)\r\n*/\r\nimport Employee from './type/Employee';\r\nimport Assignee from './type/Assignee';\r\nimport FL from './type/FL';\r\nclass Type {\r\n    static validate(values) {\r\n        const errorMsgs = [];\r\n        Type.VOs.forEach((DomainVO) => {\r\n            values.forEach((val) => {\r\n                const msg = DomainVO.validate(val[DomainVO.field]);\r\n                if (msg !== undefined) {\r\n                    errorMsgs.push(msg);\r\n                }\r\n            });\r\n        });\r\n        return (errorMsgs.length > 0) ? 'Тип физического лица заполнен неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Type.validate(value);\r\n    }\r\n    static get name() {\r\n        return 'Товар передал';\r\n    }\r\n    static get hint() {\r\n        return 'Выберите тип физического лица, принявшего товары (груз)';\r\n    }\r\n    static get field() {\r\n        return 'type';\r\n    }\r\n    static get options() {\r\n        return [Employee, Assignee, FL];\r\n    }\r\n    constructor(participant) {\r\n        this.participant = participant;\r\n    }\r\n    clone() {\r\n        return new Type(this.type);\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        this._type = value;\r\n    }\r\n    get value() {\r\n        return this.type;\r\n    }\r\n}\r\nexport default Type;\r\n//# sourceMappingURL=Type.js.map"]},"metadata":{},"sourceType":"module"}