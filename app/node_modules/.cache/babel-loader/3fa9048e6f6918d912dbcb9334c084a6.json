{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport AuthService from './auth/AuthService';\nimport RegisterService from './register/RegisterService';\nimport SignService from './sign/SignService';\nimport SecurityService from './security/SecurityService';\nimport ParameterService from './parameters/ParameterService';\nimport AuthRequest from './auth/AuthRequest';\nimport RegisterRequest from './register/RegisterRequest';\nimport RecoverRequest from './auth/RecoverRequest';\nimport SignRequest from './sign/SignRequest';\nimport ULCompany from '../domain/legal_entity/Company';\nimport IPCompany from '../domain/individual_entrepreneur/Company';\nimport EventManager from './EventManager';\nimport SettingsService from './settings/SettingsService';\nimport errFactory from './error/ErrorFactory';\nimport { CHANGE_COMPANY } from './error/Error';\nimport Environment from './Environment';\nimport AjaxGetEmployeesHandler from './company/handlers/AjaxGetEmployeesHandler';\nimport ULEmployee, { ACTIVE_STATUS as UL_ACTIVE_STATUS } from '../domain/legal_entity/Employee';\nimport IPEmployee, { ACTIVE_STATUS as IP_ACTIVE_STATUS } from '../domain/individual_entrepreneur/Employee';\nimport get from 'get-value';\n\nvar Core = /*#__PURE__*/function () {\n  function Core() {\n    _classCallCheck(this, Core);\n\n    this._user = null;\n    this._company = null;\n    this._certificate = null;\n    this._events = new EventManager();\n    this._parameters = null;\n  }\n\n  _createClass(Core, [{\n    key: \"init\",\n    value: function init(request) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$AuthService$ha, user, company, certificate;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return AuthService.hasAuth(request);\n\n              case 2:\n                _yield$AuthService$ha = _context.sent;\n                user = _yield$AuthService$ha.user;\n                company = _yield$AuthService$ha.company;\n                certificate = _yield$AuthService$ha.certificate;\n                _context.next = 8;\n                return this.getParameters();\n\n              case 8:\n                this._parameters = _context.sent;\n\n                if (AuthService.isAuthed) {\n                  this._user = user;\n                  this._company = company;\n                  this._certificate = certificate;\n                }\n\n                _context.prev = 10;\n                _context.next = 13;\n                return SettingsService.getNotifications();\n\n              case 13:\n                _context.next = 17;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](10);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[10, 15]]);\n      }));\n    }\n  }, {\n    key: \"auth\",\n    value: function auth(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var request, authResult;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                request = new AuthRequest(params);\n                _context2.next = 3;\n                return AuthService.auth(request);\n\n              case 3:\n                authResult = _context2.sent;\n\n                if (!authResult.success) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 7;\n                return this.init(request);\n\n              case 7:\n                return _context2.abrupt(\"return\", authResult);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"checkReceipts\",\n    value: function checkReceipts() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!SecurityService.hasRole('ROLE_RECEIPTS_AUTOSIGNING')) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.startReceiptsAutoSigning();\n\n              case 3:\n                _context3.next = 6;\n                break;\n\n              case 5:\n                SignService.events.notify('checkSigningList');\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"startReceiptsAutoSigning\",\n    value: function startReceiptsAutoSigning() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var request, signResult;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                request = new SignRequest();\n                _context4.next = 3;\n                return SignService.signReceipts(request);\n\n              case 3:\n                signResult = _context4.sent;\n                return _context4.abrupt(\"return\", signResult);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }, {\n    key: \"startReceiptsManualSigning\",\n    value: function startReceiptsManualSigning(receipts) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var request, signResult;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                request = new SignRequest({\n                  documents: receipts,\n                  isAutoMode: false\n                });\n                _context5.next = 3;\n                return SignService.signReceipts(request);\n\n              case 3:\n                signResult = _context5.sent;\n                return _context5.abrupt(\"return\", signResult);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n    }\n  }, {\n    key: \"isAuthed\",\n    value: function isAuthed() {\n      return AuthService.isAuthed;\n    }\n  }, {\n    key: \"recover\",\n    value: function recover(params) {\n      var request = new RecoverRequest(params);\n      return AuthService.recover(request);\n    }\n  }, {\n    key: \"register\",\n    value: function register(params) {\n      var request = new RegisterRequest(params);\n      return RegisterService.register(request);\n    }\n  }, {\n    key: \"getParameters\",\n    value: function getParameters() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", ParameterService.getPrameters());\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }, {\n    key: \"isRegistered\",\n    value: function isRegistered() {\n      return RegisterService.isRegistered;\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this = this;\n\n      return AuthService.exit().then(function (res) {\n        _this.events.notify('logout');\n\n        return res;\n      });\n    }\n  }, {\n    key: \"setCompanyDetails\",\n    value: function setCompanyDetails(raw) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var kpp, okpo, ifns, bankDetails, url, formData, accountNumberValue, bikValue, okpoValue, ifnsValue, kppValue, response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                kpp = raw.kpp, okpo = raw.okpo, ifns = raw.ifns, bankDetails = raw.bankDetails;\n                url = '/front/cabinet/company';\n                _context7.prev = 2;\n                formData = new FormData();\n                accountNumberValue = get(bankDetails, 'accountNumber.value') || '';\n                bikValue = get(bankDetails, 'bik.value') || '';\n                okpoValue = okpo && okpo.value || '';\n                ifnsValue = ifns && ifns.id || '';\n                formData.append('accountNumber', accountNumberValue);\n                formData.append('bik', bikValue);\n                formData.append('division[classificationNumber]', okpoValue);\n                formData.append('taxAuthority', ifnsValue);\n\n                if (this.company instanceof ULCompany) {\n                  kppValue = kpp && kpp.value || '';\n                  formData.append('division[kpp]', kppValue);\n                }\n\n                _context7.next = 15;\n                return Environment.getCompanyGateway().setDetails(url, formData);\n\n              case 15:\n                response = _context7.sent;\n\n                if (response.data.success) {\n                  if (this.company instanceof ULCompany) {\n                    this.company.setDetails(kpp, okpo, ifns, bankDetails);\n                  }\n\n                  if (this.company instanceof IPCompany) {\n                    this.company.setDetails(okpo, ifns, bankDetails);\n                  }\n                }\n\n                _context7.next = 22;\n                break;\n\n              case 19:\n                _context7.prev = 19;\n                _context7.t0 = _context7[\"catch\"](2);\n                throw errFactory(CHANGE_COMPANY, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), _context7.t0);\n\n              case 22:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 19]]);\n      }));\n    }\n  }, {\n    key: \"setCompanyLegalAddress\",\n    value: function setCompanyLegalAddress(legalAddress) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var RUSSIA_COUNTRY_CODE, url, processOptField, formData, response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                RUSSIA_COUNTRY_CODE = 172;\n                url = '/front/cabinet/address';\n                _context8.prev = 2;\n\n                processOptField = function processOptField(field) {\n                  if (typeof field !== 'object' || field && !field.value) return '';\n                  return field.value;\n                };\n\n                formData = new FormData();\n                formData.append('postalCode', processOptField(legalAddress.postalCode));\n                formData.append('region', legalAddress.region.id);\n                formData.append('district', processOptField(legalAddress.district));\n                formData.append('city', processOptField(legalAddress.city));\n                formData.append('settlement', processOptField(legalAddress.settlement));\n                formData.append('street', processOptField(legalAddress.street));\n                formData.append('house', processOptField(legalAddress.house));\n                formData.append('building', processOptField(legalAddress.building));\n                formData.append('room', processOptField(legalAddress.room));\n                formData.append('country', RUSSIA_COUNTRY_CODE);\n                _context8.next = 17;\n                return Environment.getCompanyGateway().setAddress(url, formData);\n\n              case 17:\n                response = _context8.sent;\n\n                if (response.data.success) {\n                  this.company.setAddress(legalAddress);\n                }\n\n                _context8.next = 24;\n                break;\n\n              case 21:\n                _context8.prev = 21;\n                _context8.t0 = _context8[\"catch\"](2);\n                throw errFactory(CHANGE_COMPANY, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), _context8.t0);\n\n              case 24:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 21]]);\n      }));\n    }\n  }, {\n    key: \"updateNotificationSettings\",\n    value: function updateNotificationSettings(settings) {\n      return SettingsService.updateNotifications(settings);\n    }\n  }, {\n    key: \"getEmployees\",\n    value: function getEmployees(status) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var statusSystemName, params;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                statusSystemName = '';\n\n                if (this.company instanceof ULCompany) {\n                  statusSystemName = ULEmployee.isStatusValid(status) ? status : UL_ACTIVE_STATUS;\n                }\n\n                if (this.company instanceof IPCompany) {\n                  statusSystemName = IPEmployee.isStatusValid(status) ? status : IP_ACTIVE_STATUS;\n                }\n\n                params = {\n                  statusSystemName: statusSystemName,\n                  hash: 'staff',\n                  offset: offset,\n                  limit: limit\n                };\n                return _context9.abrupt(\"return\", AjaxGetEmployeesHandler.get(this.company, params));\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"notificationsSettings\",\n    get: function get() {\n      return SettingsService.getNotifications();\n    }\n  }, {\n    key: \"company\",\n    get: function get() {\n      return this._company;\n    }\n  }, {\n    key: \"user\",\n    get: function get() {\n      return this._user;\n    }\n  }, {\n    key: \"certificate\",\n    get: function get() {\n      return this._certificate;\n    }\n  }, {\n    key: \"events\",\n    get: function get() {\n      return this._events;\n    }\n  }, {\n    key: \"parameters\",\n    get: function get() {\n      return this._parameters;\n    }\n  }]);\n\n  return Core;\n}();\n\nvar instance = new Core();\nexport default instance;","map":{"version":3,"sources":["../../src/application/Core.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport AuthService from './auth/AuthService';\r\nimport RegisterService from './register/RegisterService';\r\nimport SignService from './sign/SignService';\r\nimport SecurityService from './security/SecurityService';\r\nimport ParameterService from './parameters/ParameterService';\r\nimport AuthRequest from './auth/AuthRequest';\r\nimport RegisterRequest from './register/RegisterRequest';\r\nimport RecoverRequest from './auth/RecoverRequest';\r\nimport SignRequest from './sign/SignRequest';\r\nimport ULCompany from '../domain/legal_entity/Company';\r\nimport IPCompany from '../domain/individual_entrepreneur/Company';\r\nimport EventManager from './EventManager';\r\nimport SettingsService from './settings/SettingsService';\r\nimport errFactory from './error/ErrorFactory';\r\nimport { CHANGE_COMPANY } from './error/Error';\r\nimport Environment from './Environment';\r\nimport AjaxGetEmployeesHandler from './company/handlers/AjaxGetEmployeesHandler';\r\nimport ULEmployee, { ACTIVE_STATUS as UL_ACTIVE_STATUS } from '../domain/legal_entity/Employee';\r\nimport IPEmployee, { ACTIVE_STATUS as IP_ACTIVE_STATUS } from '../domain/individual_entrepreneur/Employee';\r\nimport get from 'get-value';\r\nclass Core {\r\n    constructor() {\r\n        this._user = null;\r\n        this._company = null;\r\n        this._certificate = null;\r\n        this._events = new EventManager();\r\n        this._parameters = null;\r\n    }\r\n    init(request) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { user, company, certificate } = yield AuthService.hasAuth(request);\r\n            this._parameters = yield this.getParameters();\r\n            if (AuthService.isAuthed) {\r\n                this._user = user;\r\n                this._company = company;\r\n                this._certificate = certificate;\r\n            }\r\n            try {\r\n                // TODO: обработка ошибки\r\n                yield SettingsService.getNotifications();\r\n            }\r\n            catch (err) { }\r\n        });\r\n    }\r\n    auth(params) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const request = new AuthRequest(params);\r\n            const authResult = yield AuthService.auth(request);\r\n            if (authResult.success) {\r\n                yield this.init(request);\r\n            }\r\n            return authResult;\r\n        });\r\n    }\r\n    checkReceipts() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (SecurityService.hasRole('ROLE_RECEIPTS_AUTOSIGNING')) {\r\n                yield this.startReceiptsAutoSigning();\r\n            }\r\n            else {\r\n                SignService.events.notify('checkSigningList');\r\n            }\r\n        });\r\n    }\r\n    startReceiptsAutoSigning() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const request = new SignRequest();\r\n            const signResult = yield SignService.signReceipts(request);\r\n            return signResult;\r\n        });\r\n    }\r\n    startReceiptsManualSigning(receipts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const request = new SignRequest({ documents: receipts, isAutoMode: false });\r\n            const signResult = yield SignService.signReceipts(request);\r\n            return signResult;\r\n        });\r\n    }\r\n    isAuthed() {\r\n        return AuthService.isAuthed;\r\n    }\r\n    recover(params) {\r\n        const request = new RecoverRequest(params);\r\n        return AuthService.recover(request);\r\n    }\r\n    register(params) {\r\n        const request = new RegisterRequest(params);\r\n        return RegisterService.register(request);\r\n    }\r\n    getParameters() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return ParameterService.getPrameters();\r\n        });\r\n    }\r\n    isRegistered() {\r\n        return RegisterService.isRegistered;\r\n    }\r\n    logout() {\r\n        return AuthService.exit().then(res => {\r\n            this.events.notify('logout');\r\n            return res;\r\n        });\r\n    }\r\n    setCompanyDetails(raw) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { kpp, okpo, ifns, bankDetails } = raw;\r\n            const url = '/front/cabinet/company';\r\n            try {\r\n                const formData = new FormData();\r\n                const accountNumberValue = get(bankDetails, 'accountNumber.value') || '';\r\n                const bikValue = get(bankDetails, 'bik.value') || '';\r\n                const okpoValue = (okpo && okpo.value) || '';\r\n                const ifnsValue = (ifns && ifns.id) || '';\r\n                formData.append('accountNumber', accountNumberValue);\r\n                formData.append('bik', bikValue);\r\n                formData.append('division[classificationNumber]', okpoValue);\r\n                formData.append('taxAuthority', ifnsValue);\r\n                if (this.company instanceof ULCompany) {\r\n                    const kppValue = (kpp && kpp.value) || '';\r\n                    formData.append('division[kpp]', kppValue);\r\n                }\r\n                const response = yield Environment.getCompanyGateway().setDetails(url, formData);\r\n                if (response.data.success) {\r\n                    if (this.company instanceof ULCompany) {\r\n                        this.company.setDetails(kpp, okpo, ifns, bankDetails);\r\n                    }\r\n                    if (this.company instanceof IPCompany) {\r\n                        this.company.setDetails(okpo, ifns, bankDetails);\r\n                    }\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw errFactory(CHANGE_COMPANY, `Запрос ${url}`, error);\r\n            }\r\n        });\r\n    }\r\n    setCompanyLegalAddress(legalAddress) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const RUSSIA_COUNTRY_CODE = 172;\r\n            const url = '/front/cabinet/address';\r\n            try {\r\n                const processOptField = field => {\r\n                    if (typeof field !== 'object' || (field && !field.value))\r\n                        return '';\r\n                    return field.value;\r\n                };\r\n                const formData = new FormData();\r\n                formData.append('postalCode', processOptField(legalAddress.postalCode));\r\n                formData.append('region', legalAddress.region.id);\r\n                formData.append('district', processOptField(legalAddress.district));\r\n                formData.append('city', processOptField(legalAddress.city));\r\n                formData.append('settlement', processOptField(legalAddress.settlement));\r\n                formData.append('street', processOptField(legalAddress.street));\r\n                formData.append('house', processOptField(legalAddress.house));\r\n                formData.append('building', processOptField(legalAddress.building));\r\n                formData.append('room', processOptField(legalAddress.room));\r\n                formData.append('country', RUSSIA_COUNTRY_CODE);\r\n                const response = yield Environment.getCompanyGateway().setAddress(url, formData);\r\n                if (response.data.success) {\r\n                    this.company.setAddress(legalAddress);\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw errFactory(CHANGE_COMPANY, `Запрос ${url}`, error);\r\n            }\r\n        });\r\n    }\r\n    updateNotificationSettings(settings) {\r\n        return SettingsService.updateNotifications(settings);\r\n    }\r\n    getEmployees(status, offset = 0, limit = 10) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let statusSystemName = '';\r\n            if (this.company instanceof ULCompany) {\r\n                statusSystemName = ULEmployee.isStatusValid(status) ? status : UL_ACTIVE_STATUS;\r\n            }\r\n            if (this.company instanceof IPCompany) {\r\n                statusSystemName = IPEmployee.isStatusValid(status) ? status : IP_ACTIVE_STATUS;\r\n            }\r\n            const params = {\r\n                statusSystemName,\r\n                hash: 'staff',\r\n                offset,\r\n                limit\r\n            };\r\n            return AjaxGetEmployeesHandler.get(this.company, params);\r\n        });\r\n    }\r\n    get notificationsSettings() {\r\n        return SettingsService.getNotifications();\r\n    }\r\n    get company() {\r\n        return this._company;\r\n    }\r\n    get user() {\r\n        return this._user;\r\n    }\r\n    get certificate() {\r\n        return this._certificate;\r\n    }\r\n    get events() {\r\n        return this._events;\r\n    }\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n}\r\nconst instance = new Core();\r\nexport default instance;\r\n//# sourceMappingURL=Core.js.map"]},"metadata":{},"sourceType":"module"}