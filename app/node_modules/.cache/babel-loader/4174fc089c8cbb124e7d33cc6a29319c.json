{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";var _class,_temp;import autobind from\"autobind-decorator\";import{state}from\"./BasicState\";export var Presenter=(_class=(_temp=/*#__PURE__*/function(){// private static PresenterF>;\nfunction Presenter(initialState){_classCallCheck(this,Presenter);this.observers=[];this.state=void 0;this.state=initialState;}// Add an observer\n_createClass(Presenter,[{key:\"addObserver\",value:function addObserver(observer){this.observers.push(observer);}// Remove an observer\n},{key:\"removeObserver\",value:function removeObserver(observer){this.observers=this.observers.filter(function(obs){return obs.update!==observer;});}// Notify all observers of state changes\n},{key:\"notifyObservers\",value:function notifyObservers(){var _this=this;this.observers.forEach(function(observer){return observer.update(_this.state);});}// Get the current state\n},{key:\"getState\",value:function getState(){return this.state;}// Set a new state and notify observers\n},{key:\"setState\",value:function setState(newState){console.log(\"old: \",this.state,newState);this.state=newState;this.notifyObservers();}}]);return Presenter;}(),_temp),(_applyDecoratedDescriptor(_class.prototype,\"addObserver\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"addObserver\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"removeObserver\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"removeObserver\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getState\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getState\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setState\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"setState\"),_class.prototype)),_class);","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/presenter/presenter.tsx"],"names":["autobind","state","Presenter","initialState","observers","observer","push","filter","obs","update","forEach","newState","console","log","notifyObservers"],"mappings":"siBAAA,MAAOA,CAAAA,QAAP,KAAqB,oBAArB,CACA,OAAQC,KAAR,KAAoB,cAApB,CAYA,UAAaC,CAAAA,SAAb,wCACI;AAIA,mBAAYC,YAAZ,CAA6B,sCAHnBC,SAGmB,CAHoB,EAGpB,MAFnBH,KAEmB,QACzB,KAAKA,KAAL,CAAaE,YAAb,CAEH,CAED;AAVJ,sEAYgBE,QAZhB,CAYyD,CACjD,KAAKD,SAAL,CAAeE,IAAf,CAAoBD,QAApB,EACH,CAED;AAhBJ,sDAkBmBA,QAlBnB,CAkBuD,CAC/C,KAAKD,SAAL,CAAiB,KAAKA,SAAL,CAAeG,MAAf,CAAsB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,MAAJ,GAAeJ,QAAnB,EAAzB,CAAjB,CACH,CAED;AAtBJ,yDAuBsC,gBAC9B,KAAKD,SAAL,CAAeM,OAAf,CAAuB,SAAAL,QAAQ,QAAIA,CAAAA,QAAQ,CAACI,MAAT,CAAgB,KAAI,CAACR,KAArB,CAAJ,EAA/B,EACH,CAED;AA3BJ,2CA6BkB,CACV,MAAO,MAAKA,KAAZ,CACH,CAED;AAjCJ,0CAmCaU,QAnCb,CAmCgC,CACxBC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqB,KAAKZ,KAA1B,CAAiCU,QAAjC,EACA,KAAKV,KAAL,CAAaU,QAAb,CACA,KAAKG,eAAL,GACH,CAvCL,2FAWKd,QAXL,iJAiBKA,QAjBL,8IA4BKA,QA5BL,wIAkCKA,QAlCL","sourcesContent":["import autobind from \"autobind-decorator\";\r\nimport {state} from \"./BasicState\";\r\n\r\nexport interface ComponentObserver<P, T extends state<T, P>> {\r\n    update: (state: T) => void;\r\n}\r\n\r\nexport interface IPresenter<T> {\r\n    setState: (state: T) => void;\r\n    getState: () => T;\r\n}\r\n\r\n\r\nexport class Presenter<P, T extends state<T, P>> implements IPresenter<T> {\r\n    // private static PresenterF>;\r\n    protected observers: ComponentObserver<P, T>[] = [];\r\n    protected state: T;\r\n\r\n    constructor(initialState: T) {\r\n        this.state = initialState;\r\n\r\n    }\r\n\r\n    // Add an observer\r\n    @autobind\r\n    addObserver(observer: ComponentObserver<P, T>): void {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    // Remove an observer\r\n    @autobind\r\n    removeObserver(observer: (state: T) => void): void {\r\n        this.observers = this.observers.filter(obs => obs.update !== observer);\r\n    }\r\n\r\n    // Notify all observers of state changes\r\n    protected notifyObservers(): void {\r\n        this.observers.forEach(observer => observer.update(this.state));\r\n    }\r\n\r\n    // Get the current state\r\n    @autobind\r\n    getState(): T {\r\n        return this.state as T;\r\n    }\r\n\r\n    // Set a new state and notify observers\r\n    @autobind\r\n    setState(newState: T): void {\r\n        console.log(\"old: \", this.state, newState);\r\n        this.state = newState;\r\n        this.notifyObservers();\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}