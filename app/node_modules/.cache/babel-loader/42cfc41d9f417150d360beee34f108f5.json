{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(legalEffect),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(request),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(update);import{takeLatest,call,put}from'redux-saga/effects';import{SystemService}from'@distate/core/dist/application/system';import{legalsRequest,legalsFailure,legalsSuccess,updateConnectersRequest,updateConnectersSuccess,updateConnectersFailure}from'../actions';export function legalEffect(){return _regeneratorRuntime.wrap(function legalEffect$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(legalsRequest,request);case 2:_context.next=4;return takeLatest(updateConnectersRequest,update);case 4:case\"end\":return _context.stop();}}},_marked);}function request(){var service,_yield$call,total,list;return _regeneratorRuntime.wrap(function request$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;service=new SystemService();_context2.next=4;return call(service.legal,{limit:9999});case 4:_yield$call=_context2.sent;total=_yield$call.total;list=_yield$call.list;_context2.next=9;return put(legalsSuccess({total:total,list:list}));case 9:_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);_context2.next=15;return put(legalsFailure({error:_context2.t0}));case 15:case\"end\":return _context2.stop();}}},_marked2,null,[[0,11]]);}function update(_ref){var _ref$payload,id,connectors,service;return _regeneratorRuntime.wrap(function update$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_ref$payload=_ref.payload,id=_ref$payload.id,connectors=_ref$payload.connectors;_context3.prev=1;service=new SystemService();_context3.next=5;return call(service.updateOperators,id,connectors);case 5:_context3.next=7;return put(updateConnectersSuccess());case 7:_context3.next=13;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);_context3.next=13;return put(updateConnectersFailure({}));case 13:case\"end\":return _context3.stop();}}},_marked3,null,[[1,9]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/system/store/sagas/legal.saga.ts"],"names":["legalEffect","request","update","takeLatest","call","put","SystemService","legalsRequest","legalsFailure","legalsSuccess","updateConnectersRequest","updateConnectersSuccess","updateConnectersFailure","service","legal","limit","total","list","error","payload","id","connectors","updateOperators"],"mappings":"oNAYiBA,W,iDAKPC,O,iDAUAC,M,EA3BV,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,OAASC,aAAT,KAA8B,uCAA9B,CAEA,OACEC,aADF,CAEEC,aAFF,CAGEC,aAHF,CAIEC,uBAJF,CAKEC,uBALF,CAMEC,uBANF,KAOO,YAPP,CASA,MAAO,SAAUZ,CAAAA,WAAV,uIACL,MAAMG,CAAAA,UAAU,CAACI,aAAD,CAAgBN,OAAhB,CAAhB,CADK,uBAEL,MAAME,CAAAA,UAAU,CAACO,uBAAD,CAA0BR,MAA1B,CAAhB,CAFK,sDAKP,QAAUD,CAAAA,OAAV,0KAEUY,OAFV,CAEoB,GAAIP,CAAAA,aAAJ,EAFpB,kBAG4B,MAAMF,CAAAA,IAAI,CAACS,OAAO,CAACC,KAAT,CAAgB,CAAEC,KAAK,CAAE,IAAT,CAAhB,CAAV,CAH5B,kCAGYC,KAHZ,aAGYA,KAHZ,CAGmBC,IAHnB,aAGmBA,IAHnB,kBAII,MAAMZ,CAAAA,GAAG,CAACI,aAAa,CAAC,CAAEO,KAAK,CAALA,KAAF,CAASC,IAAI,CAAJA,IAAT,CAAD,CAAd,CAAT,CAJJ,8GAMI,MAAMZ,CAAAA,GAAG,CAACG,aAAa,CAAC,CAAEU,KAAK,aAAP,CAAD,CAAd,CAAT,CANJ,uEAUA,QAAUhB,CAAAA,MAAV,kLAAmBiB,OAAnB,CAA8BC,EAA9B,cAA8BA,EAA9B,CAAkCC,UAAlC,cAAkCA,UAAlC,kBAEUR,OAFV,CAEoB,GAAIP,CAAAA,aAAJ,EAFpB,kBAGI,MAAMF,CAAAA,IAAI,CAACS,OAAO,CAACS,eAAT,CAA0BF,EAA1B,CAA8BC,UAA9B,CAAV,CAHJ,wBAII,MAAMhB,CAAAA,GAAG,CAACM,uBAAuB,EAAxB,CAAT,CAJJ,4GAMI,MAAMN,CAAAA,GAAG,CAACO,uBAAuB,CAAC,EAAD,CAAxB,CAAT,CANJ","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { SystemService } from '@distate/core/dist/application/system';\r\n\r\nimport {\r\n  legalsRequest,\r\n  legalsFailure,\r\n  legalsSuccess,\r\n  updateConnectersRequest,\r\n  updateConnectersSuccess,\r\n  updateConnectersFailure\r\n} from '../actions';\r\n\r\nexport function* legalEffect() {\r\n  yield takeLatest(legalsRequest, request);\r\n  yield takeLatest(updateConnectersRequest, update);\r\n}\r\n\r\nfunction* request() {\r\n  try {\r\n    const service = new SystemService();\r\n    const { total, list } = yield call(service.legal, { limit: 9999 });\r\n    yield put(legalsSuccess({ total, list }));\r\n  } catch (error) {\r\n    yield put(legalsFailure({ error }));\r\n  }\r\n}\r\n\r\nfunction* update({ payload: { id, connectors } }: any) {\r\n  try {\r\n    const service = new SystemService();\r\n    yield call(service.updateOperators, id, connectors);\r\n    yield put(updateConnectersSuccess());\r\n  } catch {\r\n    yield put(updateConnectersFailure({}));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}