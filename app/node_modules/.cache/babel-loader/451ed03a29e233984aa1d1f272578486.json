{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{getKeyOrNull}from\"../../utils/string_helper\";import{PowerDocumentJsonConverter}from\"./PowerDocumentJsonConverter\";import{AddressJsonConverter}from\"./AddressJsonConverter\";import{ContactsJsonConverter}from\"./ContactsJsonConverter\";export var DepartmentJsonConverter=/*#__PURE__*/function(){function DepartmentJsonConverter(){_classCallCheck(this,DepartmentJsonConverter);}_createClass(DepartmentJsonConverter,null,[{key:\"toFlatJson\",value:function toFlatJson(fields){return{name:getKeyOrNull(fields[\"nameText\"]),kpp:getKeyOrNull(fields[\"kpp\"]),ogrn:getKeyOrNull(fields[\"ogrn\"]),constituentDoc:getKeyOrNull(fields[\"constituentDoc\"]),address:AddressJsonConverter.toFlatJson(fields),contacts:ContactsJsonConverter.toFlatJson(fields),powers:PowerDocumentJsonConverter.toFlatJson(fields),regNumber:getKeyOrNull(fields[\"regNumber\"])};}}]);return DepartmentJsonConverter;}();","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/data/converter/DepartmentJsonConverter.ts"],"names":["getKeyOrNull","PowerDocumentJsonConverter","AddressJsonConverter","ContactsJsonConverter","DepartmentJsonConverter","fields","name","kpp","ogrn","constituentDoc","address","toFlatJson","contacts","powers","regNumber"],"mappings":"oVAAA,OAAQA,YAAR,KAA2B,2BAA3B,CAEA,OAAQC,0BAAR,KAAyC,8BAAzC,CACA,OAAQC,oBAAR,KAAmC,wBAAnC,CACA,OAAQC,qBAAR,KAAoC,yBAApC,CAEA,UAAaC,CAAAA,uBAAb,kMAC6BC,MAD7B,CAC+E,CACvE,MAAO,CACHC,IAAI,CAAEN,YAAY,CAACK,MAAM,CAAC,UAAD,CAAP,CADf,CAEHE,GAAG,CAAEP,YAAY,CAACK,MAAM,CAAC,KAAD,CAAP,CAFd,CAGHG,IAAI,CAAER,YAAY,CAACK,MAAM,CAAC,MAAD,CAAP,CAHf,CAIHI,cAAc,CAAET,YAAY,CAACK,MAAM,CAAC,gBAAD,CAAP,CAJzB,CAKHK,OAAO,CAAER,oBAAoB,CAACS,UAArB,CAAgCN,MAAhC,CALN,CAMHO,QAAQ,CAAET,qBAAqB,CAACQ,UAAtB,CAAiCN,MAAjC,CANP,CAOHQ,MAAM,CAAEZ,0BAA0B,CAACU,UAA3B,CAAsCN,MAAtC,CAPL,CAQHS,SAAS,CAAEd,YAAY,CAACK,MAAM,CAAC,WAAD,CAAP,CARpB,CAAP,CAUH,CAZL","sourcesContent":["import {getKeyOrNull} from \"../../utils/string_helper\";\r\nimport {PersonalDataJsonConverter} from \"./PersonalDataJsonConverter\";\r\nimport {PowerDocumentJsonConverter} from \"./PowerDocumentJsonConverter\";\r\nimport {AddressJsonConverter} from \"./AddressJsonConverter\";\r\nimport {ContactsJsonConverter} from \"./ContactsJsonConverter\";\r\n\r\nexport class DepartmentJsonConverter {\r\n    public static toFlatJson(fields: Record<string, any>): Record<string, any> {\r\n        return {\r\n            name: getKeyOrNull(fields[\"nameText\"]),\r\n            kpp: getKeyOrNull(fields[\"kpp\"]),\r\n            ogrn: getKeyOrNull(fields[\"ogrn\"]),\r\n            constituentDoc: getKeyOrNull(fields[\"constituentDoc\"]),\r\n            address: AddressJsonConverter.toFlatJson(fields),\r\n            contacts: ContactsJsonConverter.toFlatJson(fields),\r\n            powers: PowerDocumentJsonConverter.toFlatJson(fields),\r\n            regNumber: getKeyOrNull(fields[\"regNumber\"]),\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}