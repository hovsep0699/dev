{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n * ОКЕИ_Тов - Код единицы измерения товара (3 или 4 цифры)\r\n * <СведТов НомСтр=\"1\" НаимТов=\"Tovar1\" ОКЕИ_Тов=\"114\" КолТов=\"123\" ЦенаТов=\"88\" СтТовБезНДС=\"88\" НалСт=\"18%\" СтТовУчНал=\"5555\">\r\n */\nvar Code = /*#__PURE__*/function () {\n  _createClass(Code, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return !Code.REG_EXP.test(value) ? 'Введите код единицы измерения' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Code.validate(value);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9]{3,4}$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return '-';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Код единицы измерения';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'measurementCode';\n    }\n  }]);\n\n  function Code(code) {\n    _classCallCheck(this, Code);\n\n    if (!Code.isValid(\"\".concat(code))) {\n      throw new Error('Невозможно создать код единицы измерения. Формат не верен.');\n    }\n\n    this._value = \"\".concat(code);\n  }\n\n  _createClass(Code, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Code(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }]);\n\n  return Code;\n}();\n\nexport default Code;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/vo/measurement/Code.js"],"names":[],"mappings":";;;AAAA;;;;IAKM,I;;;6BAKY,K,EAAK;AACnB,aAAO,CAAC,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,KAAlB,CAAD,GAA4B,+BAA5B,GAA8D,SAArE;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,IAAI,CAAC,QAAL,CAAc,KAAd,CAAR;AACD;;;wBAViB;AAChB,aAAO,IAAI,MAAJ,CAAW,cAAX,CAAP;AACD;;;wBAUqB;AACpB,aAAO,GAAP;AACD;;;wBAEc;AACb,aAAO,uBAAP;AACD;;;wBAEe;AACd,aAAO,iBAAP;AACD;;;AAED,gBAAY,IAAZ,EAAgB;AAAA;;AACd,QAAI,CAAC,IAAI,CAAC,OAAL,WAAgB,IAAhB,EAAL,EAA8B;AAC5B,YAAM,IAAI,KAAJ,CAAU,4DAAV,CAAN;AACD;;AACD,SAAK,MAAL,aAAiB,IAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,IAAJ,CAAS,KAAK,KAAd,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,IAAf","sourceRoot":"","sourcesContent":["/*\r\n * ОКЕИ_Тов - Код единицы измерения товара (3 или 4 цифры)\r\n * <СведТов НомСтр=\"1\" НаимТов=\"Tovar1\" ОКЕИ_Тов=\"114\" КолТов=\"123\" ЦенаТов=\"88\" СтТовБезНДС=\"88\" НалСт=\"18%\" СтТовУчНал=\"5555\">\r\n */\r\nclass Code {\r\n    static get REG_EXP() {\r\n        return new RegExp('^[0-9]{3,4}$');\r\n    }\r\n    static validate(value) {\r\n        return !Code.REG_EXP.test(value) ? 'Введите код единицы измерения' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Code.validate(value);\r\n    }\r\n    static get placeholder() {\r\n        return '-';\r\n    }\r\n    static get name() {\r\n        return 'Код единицы измерения';\r\n    }\r\n    static get field() {\r\n        return 'measurementCode';\r\n    }\r\n    constructor(code) {\r\n        if (!Code.isValid(`${code}`)) {\r\n            throw new Error('Невозможно создать код единицы измерения. Формат не верен.');\r\n        }\r\n        this._value = `${code}`;\r\n    }\r\n    clone() {\r\n        return new Code(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n}\r\nexport default Code;\r\n//# sourceMappingURL=Code.js.map"]},"metadata":{},"sourceType":"module"}