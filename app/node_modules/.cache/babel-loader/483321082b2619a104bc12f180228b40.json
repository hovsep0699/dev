{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import get from'lodash.get';import{isObject}from'@distate/components/dist/FormSchema';/**\r\n * Преобразуется данные корректировки из формата \"фронтенда\" в формат \"бэкенда\"\r\n * для отправки на сервер.\r\n *\r\n * @param UCD данные на основе которых формирукется корректировочный документ\r\n * @param UCDFormData данные корректировки\r\n */export var transformerUCDToDTO=function transformerUCDToDTO(UCD,UCDFormData){var _UCD$package=UCD.package,from=_UCD$package.from,to=_UCD$package.to,parameters=UCD.parameters,data=UCD.formData;var isEditUCD=Boolean(data);var formData=JSON.parse(JSON.stringify(UCDFormData.formData));var formTable=JSON.parse(JSON.stringify(UCDFormData.formTable));var document=isEditUCD?data.document:parameters;var purpose=isObject(formData.purpose)?formData.purpose.value:null;var invoiceDate=getDate(document);var invoiceNumber=getNumber(document);var currencyCode=getCurrencyCode(document);var currencyName=getCurrencyName(document);return{to:getToFrom(to),from:getToFrom(from),force:Boolean(UCDFormData.force),purpose:purpose,document:{table:getTable(formTable),economicSubjectName:document.economicSubjectName,invoiceCorrection:{infoField:{attributeValues:formData.attributeValues},number:formData.invoiceCorrectionNumber,date:formData.invoiceCorrectionDate,seller:formData.seller,buyer:formData.buyer,invoices:[{number:invoiceNumber,date:invoiceDate}],currencyCode:currencyCode,information:{currencyName:currencyName,currencyExchangeRate:null,governmentContractId:formData.governmentContractId||null}},factActivity3:{additionalInformation:formData.additionalInformation,operationInformation:formData.operationInformation,transferDocuments:formData.transferDocuments,basisDocuments:formData.basisDocuments}}};};function getTable(table){if(!Array.isArray(table.goods)){table.goods=[];}if(!table.totalDecrease){table.totalDecrease={};}if(!table.totalIncrease){table.totalIncrease={};}var tableTotal=normalizeTotal({totalIncrease:table.totalIncrease,totalDecrease:table.totalDecrease});return _objectSpread(_objectSpread({},tableTotal),{},{goods:table.goods.map(function(data,index){var row=data.row,rowType=data.rowType,good=_objectWithoutProperties(data,[\"row\",\"rowType\"]);if(!good.information){good.information={};}normalizeIncreaseDecrease(good.costBeforeTax);normalizeIncreaseDecrease(good.costAfterTax);normalizeIncreaseDecrease(good.amountOfTax);normalizeIncreaseDecrease(good.excise);if(good.excise.increase==='0.00'){good.excise.increase=null;}if(good.excise.decrease==='0.00'){good.excise.decrease=null;}if(good.excise.after==='0.00'||good.excise.after==='без акциза'){good.excise.after=null;}if(good.excise.before==='0.00'||good.excise.before==='без акциза'){good.excise.before=null;}good.taxRate=getTaxRate(good.taxRate);good.information.measurementTitle=getMeasurementTitle(good.measurement);good.measurement=getMeasurementCode(good.measurement);var numbers=(good===null||good===void 0?void 0:good.identificationNumbers)||[];good.identificationNumbers=numbers.map(function(_ref){var type=_ref.type,number=_objectWithoutProperties(_ref,[\"type\"]);return _objectSpread({},number);});return _objectSpread(_objectSpread({},good),{},{row:String(index+1)});})});}function getToFrom(val){if(val.division)return{division:val.division.id};if(val.person)return{person:val.person.id};return val;}function getDate(doc){var value=get(doc,'invoice.date');return get(doc,'invoiceCorrection.date',value);}function getNumber(doc){var value=get(doc,'invoice.number');return get(doc,'invoiceCorrection.number',value);}function getCurrencyCode(doc){var value=get(doc,'invoice.currencyCode');return get(doc,'invoiceCorrection.currencyCode',value);}function getCurrencyName(doc){var path='invoiceCorrection.information.currencyName';var value=get(doc,'invoice.information.currencyName');return get(doc,path,value);}function getTaxRate(){var taxRate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var before=taxRate.before,after=taxRate.after;return{before:before,after:after};}function getMeasurementCode(measurementCode){var before=measurementCode.before,after=measurementCode.after;var normalize=function normalize(val){return val==='NaN'?null:val;};return{before:normalize(before.value),after:normalize(after.value)};}function getMeasurementTitle(measurementCode){var before=measurementCode.before,after=measurementCode.after;var normalize=function normalize(val){return val==='NaN'?null:val;};return{before:normalize(before.label),after:normalize(after.label)};}function normalizeIncreaseDecrease(data){if(!data.decrease&&!data.increase){data.increase='0.00';data.decrease=null;}else if(data.decrease==='0.00'&&data.increase==='0.00'){data.decrease=null;}else if(data.decrease==='0.00'&&data.increase!=='0.00'){data.decrease=null;}else if(data.decrease!=='0.00'&&data.increase==='0.00'){data.increase=null;}else if(!data.decrease){data.decrease=null;}else if(!data.increase){data.increase=null;}}function normalizeTotal(_ref2){var totalIncrease=_ref2.totalIncrease,totalDecrease=_ref2.totalDecrease;var normalize=function normalize(key){if(totalIncrease[key]===null){totalIncrease[key]='0.00';}if(totalDecrease[key]===null){totalDecrease[key]='0.00';}};normalize('afterTax');normalize('beforeTax');normalize('amountOfTax');return{totalIncrease:totalIncrease,totalDecrease:totalDecrease};}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/upd/helpers/transformers/ucd/ucd-to-dto.ts"],"names":["get","isObject","transformerUCDToDTO","UCD","UCDFormData","package","from","to","parameters","data","formData","isEditUCD","Boolean","JSON","parse","stringify","formTable","document","purpose","value","invoiceDate","getDate","invoiceNumber","getNumber","currencyCode","getCurrencyCode","currencyName","getCurrencyName","getToFrom","force","table","getTable","economicSubjectName","invoiceCorrection","infoField","attributeValues","number","invoiceCorrectionNumber","date","invoiceCorrectionDate","seller","buyer","invoices","information","currencyExchangeRate","governmentContractId","factActivity3","additionalInformation","operationInformation","transferDocuments","basisDocuments","Array","isArray","goods","totalDecrease","totalIncrease","tableTotal","normalizeTotal","map","index","row","rowType","good","normalizeIncreaseDecrease","costBeforeTax","costAfterTax","amountOfTax","excise","increase","decrease","after","before","taxRate","getTaxRate","measurementTitle","getMeasurementTitle","measurement","getMeasurementCode","numbers","identificationNumbers","type","String","val","division","id","person","doc","path","measurementCode","normalize","label","key"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\r\nimport { isObject } from '@distate/components/dist/FormSchema';\r\n\r\n/**\r\n * Преобразуется данные корректировки из формата \"фронтенда\" в формат \"бэкенда\"\r\n * для отправки на сервер.\r\n *\r\n * @param UCD данные на основе которых формирукется корректировочный документ\r\n * @param UCDFormData данные корректировки\r\n */\r\nexport const transformerUCDToDTO = (UCD: any, UCDFormData: any) => {\r\n  const {\r\n    package: { from, to },\r\n    parameters,\r\n    formData: data\r\n  } = UCD;\r\n  const isEditUCD = Boolean(data);\r\n\r\n  const formData = JSON.parse(JSON.stringify(UCDFormData.formData));\r\n  const formTable = JSON.parse(JSON.stringify(UCDFormData.formTable));\r\n\r\n  const document = isEditUCD ? data.document : parameters;\r\n  const purpose = isObject(formData.purpose) ? formData.purpose.value : null;\r\n\r\n  const invoiceDate = getDate(document);\r\n  const invoiceNumber = getNumber(document);\r\n\r\n  const currencyCode = getCurrencyCode(document);\r\n  const currencyName = getCurrencyName(document);\r\n\r\n  return {\r\n    to: getToFrom(to),\r\n    from: getToFrom(from),\r\n    force: Boolean(UCDFormData.force),\r\n    purpose,\r\n    document: {\r\n      table: getTable(formTable),\r\n      economicSubjectName: document.economicSubjectName,\r\n      invoiceCorrection: {\r\n        infoField: { attributeValues: formData.attributeValues },\r\n        number: formData.invoiceCorrectionNumber,\r\n        date: formData.invoiceCorrectionDate,\r\n        seller: formData.seller,\r\n        buyer: formData.buyer,\r\n        invoices: [{ number: invoiceNumber, date: invoiceDate }],\r\n        currencyCode,\r\n        information: {\r\n          currencyName,\r\n          currencyExchangeRate: null,\r\n          governmentContractId: formData.governmentContractId || null\r\n        }\r\n      },\r\n      factActivity3: {\r\n        additionalInformation: formData.additionalInformation,\r\n        operationInformation: formData.operationInformation,\r\n        transferDocuments: formData.transferDocuments,\r\n        basisDocuments: formData.basisDocuments\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nfunction getTable(table: Record<string, any>) {\r\n  if (!Array.isArray(table.goods)) {\r\n    table.goods = [];\r\n  }\r\n\r\n  if (!table.totalDecrease) {\r\n    table.totalDecrease = {};\r\n  }\r\n\r\n  if (!table.totalIncrease) {\r\n    table.totalIncrease = {};\r\n  }\r\n\r\n  const tableTotal = normalizeTotal({\r\n    totalIncrease: table.totalIncrease,\r\n    totalDecrease: table.totalDecrease\r\n  });\r\n\r\n  return {\r\n    ...tableTotal,\r\n    goods: table.goods.map((data: Record<string, any>, index: number) => {\r\n      const { row, rowType, ...good } = data;\r\n\r\n      if (!good.information) {\r\n        good.information = {};\r\n      }\r\n\r\n      normalizeIncreaseDecrease(good.costBeforeTax);\r\n      normalizeIncreaseDecrease(good.costAfterTax);\r\n      normalizeIncreaseDecrease(good.amountOfTax);\r\n      normalizeIncreaseDecrease(good.excise);\r\n\r\n      if (good.excise.increase === '0.00') {\r\n        good.excise.increase = null;\r\n      }\r\n      if (good.excise.decrease === '0.00') {\r\n        good.excise.decrease = null;\r\n      }\r\n\r\n      if (good.excise.after === '0.00' || good.excise.after === 'без акциза') {\r\n        good.excise.after = null;\r\n      }\r\n\r\n      if (good.excise.before === '0.00' || good.excise.before === 'без акциза') {\r\n        good.excise.before = null;\r\n      }\r\n\r\n      good.taxRate = getTaxRate(good.taxRate);\r\n      good.information.measurementTitle = getMeasurementTitle(good.measurement);\r\n      good.measurement = getMeasurementCode(good.measurement);\r\n\r\n      const numbers = good?.identificationNumbers || [];\r\n      good.identificationNumbers = numbers.map(({ type, ...number }: any) => ({\r\n        ...number\r\n      }));\r\n\r\n      return { ...good, row: String(index + 1) };\r\n    })\r\n  };\r\n}\r\n\r\nfunction getToFrom(val: Record<string, any>) {\r\n  if (val.division) return { division: val.division.id };\r\n  if (val.person) return { person: val.person.id };\r\n  return val;\r\n}\r\n\r\nfunction getDate(doc: Record<string, any>) {\r\n  const value = get(doc, 'invoice.date');\r\n  return get(doc, 'invoiceCorrection.date', value);\r\n}\r\n\r\nfunction getNumber(doc: Record<string, any>) {\r\n  const value = get(doc, 'invoice.number');\r\n  return get(doc, 'invoiceCorrection.number', value);\r\n}\r\n\r\nfunction getCurrencyCode(doc: Record<string, any>) {\r\n  const value = get(doc, 'invoice.currencyCode');\r\n  return get(doc, 'invoiceCorrection.currencyCode', value);\r\n}\r\n\r\nfunction getCurrencyName(doc: Record<string, any>) {\r\n  const path = 'invoiceCorrection.information.currencyName';\r\n  const value = get(doc, 'invoice.information.currencyName');\r\n  return get(doc, path, value);\r\n}\r\n\r\nfunction getTaxRate(taxRate: Record<string, any> = {}) {\r\n  const { before, after } = taxRate;\r\n  return { before: before, after: after };\r\n}\r\n\r\nfunction getMeasurementCode(measurementCode: Record<string, any>) {\r\n  const { before, after } = measurementCode;\r\n  const normalize = (val: string) => (val === 'NaN' ? null : val);\r\n  return { before: normalize(before.value), after: normalize(after.value) };\r\n}\r\n\r\nfunction getMeasurementTitle(measurementCode: Record<string, any>) {\r\n  const { before, after } = measurementCode;\r\n  const normalize = (val: string) => (val === 'NaN' ? null : val);\r\n  return { before: normalize(before.label), after: normalize(after.label) };\r\n}\r\n\r\nfunction normalizeIncreaseDecrease(data: Record<string, string | null>) {\r\n  if (!data.decrease && !data.increase) {\r\n    data.increase = '0.00';\r\n    data.decrease = null;\r\n  } else if (data.decrease === '0.00' && data.increase === '0.00') {\r\n    data.decrease = null;\r\n  } else if (data.decrease === '0.00' && data.increase !== '0.00') {\r\n    data.decrease = null;\r\n  } else if (data.decrease !== '0.00' && data.increase === '0.00') {\r\n    data.increase = null;\r\n  } else if (!data.decrease) {\r\n    data.decrease = null;\r\n  } else if (!data.increase) {\r\n    data.increase = null;\r\n  }\r\n}\r\n\r\nfunction normalizeTotal({ totalIncrease, totalDecrease }: Record<string, any>) {\r\n  const normalize = (key: string) => {\r\n    if (totalIncrease[key] === null) {\r\n      totalIncrease[key] = '0.00';\r\n    }\r\n\r\n    if (totalDecrease[key] === null) {\r\n      totalDecrease[key] = '0.00';\r\n    }\r\n  };\r\n\r\n  normalize('afterTax');\r\n  normalize('beforeTax');\r\n  normalize('amountOfTax');\r\n\r\n  return { totalIncrease, totalDecrease };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}