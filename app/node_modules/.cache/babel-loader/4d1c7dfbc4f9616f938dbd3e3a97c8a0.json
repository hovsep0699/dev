{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{ButtonSolid}from'../../components/button';import{actionDetachPackage}from'../../store/actions';import{selectDetachLoading}from'../../store/selects';var ButtonDetach=function ButtonDetach(_ref){var packageId=_ref.packageId,folders=_ref.folders,callbackSuccess=_ref.callbackSuccess,callbackFailure=_ref.callbackFailure;var dispatch=useDispatch();var isLoading=useSelector(selectDetachLoading);var handleOnRemove=function handleOnRemove(id,close){var callback={success:function success(){if(callbackSuccess)callbackSuccess({folderId:id,packageId:packageId});},failure:function failure(){if(callbackFailure)callbackFailure({folderId:id,packageId:packageId});}};dispatch(actionDetachPackage({folderId:id,packageId:packageId,callback:callback}));};return/*#__PURE__*/React.createElement(ButtonSolid,{loading:isLoading,folders:folders,onRemoveClick:handleOnRemove});};export{ButtonDetach};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/features/detach/detach.tsx"],"names":["React","useDispatch","useSelector","ButtonSolid","actionDetachPackage","selectDetachLoading","ButtonDetach","packageId","folders","callbackSuccess","callbackFailure","dispatch","isLoading","handleOnRemove","id","close","callback","success","folderId","failure"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,OAASC,mBAAT,KAAoC,qBAApC,CAWA,GAAMC,CAAAA,YAA0C,CAAG,QAA7CA,CAAAA,YAA6C,MAK7C,IAJJC,CAAAA,SAII,MAJJA,SAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,eAEI,MAFJA,eAEI,CADJC,eACI,MADJA,eACI,CACJ,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,SAAS,CAAGV,WAAW,CAACG,mBAAD,CAA7B,CAEA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAaC,KAAb,CAAoC,CACzD,GAAMC,CAAAA,QAAQ,CAAG,CACfC,OAAO,CAAE,kBAAM,CACb,GAAIR,eAAJ,CAAqBA,eAAe,CAAC,CAAES,QAAQ,CAAEJ,EAAZ,CAAgBP,SAAS,CAATA,SAAhB,CAAD,CAAf,CACtB,CAHc,CAIfY,OAAO,CAAE,kBAAM,CACb,GAAIT,eAAJ,CAAqBA,eAAe,CAAC,CAAEQ,QAAQ,CAAEJ,EAAZ,CAAgBP,SAAS,CAATA,SAAhB,CAAD,CAAf,CACtB,CANc,CAAjB,CASAI,QAAQ,CAACP,mBAAmB,CAAC,CAAEc,QAAQ,CAAEJ,EAAZ,CAAgBP,SAAS,CAATA,SAAhB,CAA2BS,QAAQ,CAARA,QAA3B,CAAD,CAApB,CAAR,CACD,CAXD,CAaA,mBAAO,oBAAC,WAAD,EAAa,OAAO,CAAEJ,SAAtB,CAAiC,OAAO,CAAEJ,OAA1C,CAAmD,aAAa,CAAEK,cAAlE,EAAP,CACD,CAvBD,CAyBA,OAASP,YAAT","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ButtonSolid } from '../../components/button';\r\nimport { actionDetachPackage } from '../../store/actions';\r\nimport { selectDetachLoading } from '../../store/selects';\r\n\r\ntype Callback = { folderId: string; packageId: string };\r\n\r\nexport interface IButtonDetachProps {\r\n  folders: any[];\r\n  packageId: string;\r\n  callbackSuccess?: (data: Callback) => void;\r\n  callbackFailure?: (data: Callback) => void;\r\n}\r\n\r\nconst ButtonDetach: React.FC<IButtonDetachProps> = ({\r\n  packageId,\r\n  folders,\r\n  callbackSuccess,\r\n  callbackFailure\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectDetachLoading);\r\n\r\n  const handleOnRemove = (id: string, close?: () => void) => {\r\n    const callback = {\r\n      success: () => {\r\n        if (callbackSuccess) callbackSuccess({ folderId: id, packageId });\r\n      },\r\n      failure: () => {\r\n        if (callbackFailure) callbackFailure({ folderId: id, packageId });\r\n      }\r\n    };\r\n\r\n    dispatch(actionDetachPackage({ folderId: id, packageId, callback }));\r\n  };\r\n\r\n  return <ButtonSolid loading={isLoading} folders={folders} onRemoveClick={handleOnRemove} />;\r\n};\r\n\r\nexport { ButtonDetach };\r\n"]},"metadata":{},"sourceType":"module"}