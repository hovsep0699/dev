{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport RegisterRequest from '../RegisterRequest';\nimport errorFactory from '../../error/ErrorFactory';\nimport DiError, { REGISTER } from '../../error/Error';\n\nvar RegisterHandlerBase = /*#__PURE__*/function () {\n  function RegisterHandlerBase() {\n    _classCallCheck(this, RegisterHandlerBase);\n  }\n\n  _createClass(RegisterHandlerBase, [{\n    key: \"register\",\n    value: function register(request) {\n      RegisterHandlerBase.checkRequest(request);\n      Object.freeze(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      RegisterHandlerBase.checkRequest(request);\n    }\n  }, {\n    key: \"setNext\",\n    value: function setNext(handler) {\n      if (!(handler instanceof RegisterHandlerBase)) {\n        throw new Error('Параметр должен быть подклассом RegisterHandlerBase');\n      }\n\n      this.next = handler;\n      return this.next;\n    }\n  }, {\n    key: \"doNextHandler\",\n    value: function doNextHandler(request) {\n      if (request.error) {\n        if (!(request.error instanceof DiError)) {\n          throw new Error('Неверный тип ошибки. Создавайте ошибки через createRegisterError');\n        }\n\n        return Promise.reject(request.error);\n      }\n\n      if (this.next) {\n        return this.next.register(request);\n      }\n\n      return Promise.resolve({\n        success: true,\n        isNaturalCreated: request.isNaturalCreated\n      });\n    }\n  }, {\n    key: \"createRegisterError\",\n    value: function createRegisterError(msgForDeveloper, jsError, serverErrorResponse) {\n      return errorFactory(REGISTER, msgForDeveloper, jsError, serverErrorResponse);\n    }\n  }], [{\n    key: \"checkRequest\",\n    value: function checkRequest(request) {\n      if (request === null || request === undefined) throw new Error('Следует передать запрос для регистрации(RegisterRequest)');\n      if (!(request instanceof RegisterRequest)) throw new Error('Параметр должен быть подклассом RegisterRequest');\n    }\n  }]);\n\n  return RegisterHandlerBase;\n}();\n\nexport default RegisterHandlerBase;","map":{"version":3,"sources":["../../../../src/application/register/handlers/RegisterHandlerBase.js"],"names":[],"mappings":";;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,YAAP,MAAyB,0BAAzB;AACA,OAAO,OAAP,IAAkB,QAAlB,QAAkC,mBAAlC;;IAEM,mB;;;;;;;6BAMK,O,EAAO;AACd,MAAA,mBAAmB,CAAC,YAApB,CAAiC,OAAjC;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,OAAd;AACD;;;8BAES,O,EAAO;AACf,MAAA,mBAAmB,CAAC,YAApB,CAAiC,OAAjC;AACD;;;4BAEO,O,EAAO;AACb,UAAI,EAAE,OAAO,YAAY,mBAArB,CAAJ,EAA+C;AAC7C,cAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,WAAK,IAAL,GAAY,OAAZ;AACA,aAAO,KAAK,IAAZ;AACD;;;kCAEa,O,EAAO;AACnB,UAAI,OAAO,CAAC,KAAZ,EAAmB;AACjB,YAAI,EAAE,OAAO,CAAC,KAAR,YAAyB,OAA3B,CAAJ,EAAyC;AACvC,gBAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACD;;AACD,eAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAvB,CAAP;AACD;;AACD,UAAI,KAAK,IAAT,EAAe;AACb,eAAO,KAAK,IAAL,CAAU,QAAV,CAAmB,OAAnB,CAAP;AACD;;AACD,aAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,QAAA,OAAO,EAAE,IAAX;AAAiB,QAAA,gBAAgB,EAAE,OAAO,CAAC;AAA3C,OAAhB,CAAP;AACD;;;wCAEmB,e,EAAiB,O,EAAS,mB,EAAmB;AAC/D,aAAO,YAAY,CAAC,QAAD,EAAW,eAAX,EAA4B,OAA5B,EAAqC,mBAArC,CAAnB;AACD;;;iCArCmB,O,EAAO;AACzB,UAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C,MAAM,IAAI,KAAJ,CAAU,0DAAV,CAAN;AAC/C,UAAI,EAAE,OAAO,YAAY,eAArB,CAAJ,EAA2C,MAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AAC5C;;;;;;AAqCH,eAAe,mBAAf","sourceRoot":"","sourcesContent":["import RegisterRequest from '../RegisterRequest';\r\nimport errorFactory from '../../error/ErrorFactory';\r\nimport DiError, { REGISTER } from '../../error/Error';\r\nclass RegisterHandlerBase {\r\n    static checkRequest(request) {\r\n        if (request === null || request === undefined)\r\n            throw new Error('Следует передать запрос для регистрации(RegisterRequest)');\r\n        if (!(request instanceof RegisterRequest))\r\n            throw new Error('Параметр должен быть подклассом RegisterRequest');\r\n    }\r\n    register(request) {\r\n        RegisterHandlerBase.checkRequest(request);\r\n        Object.freeze(request);\r\n    }\r\n    canHandle(request) {\r\n        RegisterHandlerBase.checkRequest(request);\r\n    }\r\n    setNext(handler) {\r\n        if (!(handler instanceof RegisterHandlerBase)) {\r\n            throw new Error('Параметр должен быть подклассом RegisterHandlerBase');\r\n        }\r\n        this.next = handler;\r\n        return this.next;\r\n    }\r\n    doNextHandler(request) {\r\n        if (request.error) {\r\n            if (!(request.error instanceof DiError)) {\r\n                throw new Error('Неверный тип ошибки. Создавайте ошибки через createRegisterError');\r\n            }\r\n            return Promise.reject(request.error);\r\n        }\r\n        if (this.next) {\r\n            return this.next.register(request);\r\n        }\r\n        return Promise.resolve({ success: true, isNaturalCreated: request.isNaturalCreated });\r\n    }\r\n    createRegisterError(msgForDeveloper, jsError, serverErrorResponse) {\r\n        return errorFactory(REGISTER, msgForDeveloper, jsError, serverErrorResponse);\r\n    }\r\n}\r\nexport default RegisterHandlerBase;\r\n//# sourceMappingURL=RegisterHandlerBase.js.map"]},"metadata":{},"sourceType":"module"}