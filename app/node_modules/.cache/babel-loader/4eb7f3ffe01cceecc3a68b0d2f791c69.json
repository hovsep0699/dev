{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(blockingEffect),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(blockingWorker);import{takeLatest,put}from'redux-saga/effects';import{blockingContractor,getLegalEntityContractors,getNaturalEntityContractors}from'../actions';import{Flash}from'../../../../common/flash/Flash';import{ContractorApiServices}from'../../services/contractors.api';import{ContractorTypes}from'../../helpers/contractors.typings';/** Вотчер блокировки контрагента */export function blockingEffect(){return _regeneratorRuntime.wrap(function blockingEffect$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(blockingContractor,blockingWorker);case 2:case\"end\":return _context.stop();}}},_marked);}function blockingWorker(_ref){var payload,id,contractorType,message;return _regeneratorRuntime.wrap(function blockingWorker$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref.payload;_context2.prev=1;id=payload.id,contractorType=payload.contractorType;/** блокирование контрагента */_context2.next=5;return ContractorApiServices.blockContractor(id);case 5:if(!(contractorType===ContractorTypes.legal_entity)){_context2.next=10;break;}_context2.next=8;return put(getLegalEntityContractors({}));case 8:_context2.next=12;break;case 10:_context2.next=12;return put(getNaturalEntityContractors({}));case 12:_context2.next=19;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](1);message=_context2.t0.message;_context2.next=19;return Flash.error(message||'Возникла ошибка');case 19:case\"end\":return _context2.stop();}}},_marked2,null,[[1,14]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/contractors/store/sagas/blocking.effect.ts"],"names":["blockingEffect","blockingWorker","takeLatest","put","blockingContractor","getLegalEntityContractors","getNaturalEntityContractors","Flash","ContractorApiServices","ContractorTypes","payload","id","contractorType","blockContractor","legal_entity","message","error"],"mappings":"oNAYiBA,c,iDASPC,c,EArBV,OAASC,UAAT,CAAqBC,GAArB,KAAgC,oBAAhC,CAEA,OACEC,kBADF,CAEEC,yBAFF,CAGEC,2BAHF,KAIO,YAJP,CAKA,OAASC,KAAT,KAAsB,gCAAtB,CACA,OAASC,qBAAT,KAAsC,gCAAtC,CACA,OAASC,eAAT,KAAgC,mCAAhC,CAEA,oCACA,MAAO,SAAUT,CAAAA,cAAV,0IACL,MAAME,CAAAA,UAAU,CAACE,kBAAD,CAAqBH,cAArB,CAAhB,CADK,sDASP,QAAUA,CAAAA,cAAV,uKAA2BS,OAA3B,MAA2BA,OAA3B,kBAEYC,EAFZ,CAEmCD,OAFnC,CAEYC,EAFZ,CAEgBC,cAFhB,CAEmCF,OAFnC,CAEgBE,cAFhB,CAGI,+BAHJ,iBAII,MAAMJ,CAAAA,qBAAqB,CAACK,eAAtB,CAAsCF,EAAtC,CAAN,CAJJ,YAMQC,cAAc,GAAKH,eAAe,CAACK,YAN3C,6CAQM,MAAMX,CAAAA,GAAG,CAACE,yBAAyB,CAAC,EAAD,CAA1B,CAAT,CARN,yDAWM,MAAMF,CAAAA,GAAG,CAACG,2BAA2B,CAAC,EAAD,CAA5B,CAAT,CAXN,6FAaaS,OAbb,cAaaA,OAbb,mBAcI,MAAMR,CAAAA,KAAK,CAACS,KAAN,CAAYD,OAAO,EAAI,iBAAvB,CAAN,CAdJ","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n  blockingContractor,\r\n  getLegalEntityContractors,\r\n  getNaturalEntityContractors\r\n} from '../actions';\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { ContractorApiServices } from '../../services/contractors.api';\r\nimport { ContractorTypes } from '../../helpers/contractors.typings';\r\n\r\n/** Вотчер блокировки контрагента */\r\nexport function* blockingEffect() {\r\n  yield takeLatest(blockingContractor, blockingWorker);\r\n}\r\n\r\ninterface Payload {\r\n  id: number;\r\n  contractorType: ContractorTypes;\r\n}\r\n\r\nfunction* blockingWorker({ payload }: { payload: Payload }) {\r\n  try {\r\n    const { id, contractorType } = payload;\r\n    /** блокирование контрагента */\r\n    yield ContractorApiServices.blockContractor(id);\r\n    /** обновление списка ЮЛ */\r\n    if (contractorType === ContractorTypes.legal_entity) {\r\n      /** если ЮЛ */\r\n      yield put(getLegalEntityContractors({}));\r\n    } else {\r\n      /** если ФЛ */\r\n      yield put(getNaturalEntityContractors({}));\r\n    }\r\n  } catch ({ message }) {\r\n    yield Flash.error(message || 'Возникла ошибка');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}