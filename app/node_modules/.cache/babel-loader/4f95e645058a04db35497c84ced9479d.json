{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,ButtonKinds,Icons,Dropdown,Input,Select,Group,DatePicker}from'@distate/components';import{useDispatch,useSelector}from'react-redux';import'./style.css';import{Autocomplete}from'@distate/components/dist/Autocomplete';import AutocompleteGateway from'@distate/core/dist/application/autocomplete/AutocompleteGateway';import DictionaryGateway from'@distate/core/dist/application/dictionary/common/DictionaryGateway';import{dateFormat}from'@distate/components/dist/FormSchema';import{selectMode}from'../../store/selects';import{docTypeOptions,contractorTypeOptions,getDocStatusOptions}from'./filterData';import{getContractorType,getNoEmptyString,getExtTypeName}from'../../helpers/documnets.helpers';import{DestinationType}from'../../../contractors/helpers/contractors.typings';import{actionSearchSubmit}from'../../../../container/filter/store/actions';var autocompleteGateway=new AutocompleteGateway();var dictionaryGateway=new DictionaryGateway();export var NewFilter=function NewFilter(){/** тип документов (входящие\\исходящие\\архив\\черновики) */var mode=useSelector(selectMode)||'';var _useState=useState(),_useState2=_slicedToArray(_useState,2),externalType=_useState2[0],setExternalType=_useState2[1];/** контрагент, для отображения в селекте */var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),contractorValue=_useState4[0],setContractorValue=_useState4[1];/** дополнительная информация о выбранном контрагенте */var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),contractor=_useState6[0],setContractor=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),documentType=_useState8[0],setDocumentType=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),status=_useState10[0],setStatus=_useState10[1];/** для ввода даты \"создано с\" */var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),createFrom=_React$useState2[0],setCreateFrom=_React$useState2[1];/** для ввода даты \"создано по\" */var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),createTo=_React$useState4[0],setCreateTo=_React$useState4[1];/** Номер документа */var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),documentNumber=_useState12[0],setDocumentNumber=_useState12[1];/** для ввода даты \"дата в документе с\" */var _React$useState5=React.useState(null),_React$useState6=_slicedToArray(_React$useState5,2),documentDateFrom=_React$useState6[0],setDocumentDateFrom=_React$useState6[1];/** для ввода даты \"дата в документе по\" */var _React$useState7=React.useState(null),_React$useState8=_slicedToArray(_React$useState7,2),documentDateTo=_React$useState8[0],setDocumentDateTo=_React$useState8[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),operator=_useState14[0],setOperator=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),network=_useState16[0],setNetwork=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),operatorOptions=_useState18[0],setOperatorOptions=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),networkOptions=_useState20[0],setNetworkOptions=_useState20[1];/** флаг отображения селекта выбора оператора */var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),isVisibleOperator=_useState22[0],setIsVisibleOperator=_useState22[1];/** флаг отображения селекта выбора сети */var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),isVisibleNetwork=_useState24[0],setIsVisibleNetwork=_useState24[1];/** для сохранения значения текущего типа пользователя ЮЛ\\ФЛ */var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),contractorRows=_useState26[0],setContractorRows=_useState26[1];/** преобразует массив справочника из сервера в option селекта */var serverDataToOptions=function serverDataToOptions(rows){return rows.map(function(item){return{value:item.code,label:item.name};});};/** получение справочников */useEffect(function(){var operatorLoad=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$dictionaryGate,operatorRows,operatorOptionList,_yield$dictionaryGate2,networkRows,networkOptionList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dictionaryGateway.getExternalOperators();case 2:_yield$dictionaryGate=_context.sent;operatorRows=_yield$dictionaryGate.rows;operatorOptionList=serverDataToOptions(operatorRows);setOperatorOptions(operatorOptionList);_context.next=8;return dictionaryGateway.getNetworks();case 8:_yield$dictionaryGate2=_context.sent;networkRows=_yield$dictionaryGate2.rows;networkOptionList=serverDataToOptions(networkRows);setNetworkOptions(networkOptionList);case 12:case\"end\":return _context.stop();}}},_callee);}));return function operatorLoad(){return _ref.apply(this,arguments);};}();operatorLoad();},[]);/** изменение отображения селектов при смене типа контрагента */useEffect(function(){switch(externalType===null||externalType===void 0?void 0:externalType.value){case DestinationType.Roaming:setIsVisibleOperator(true);setIsVisibleNetwork(false);return;case DestinationType.LoaclRoaming:setIsVisibleOperator(false);setIsVisibleNetwork(true);return;case DestinationType.Connector:setIsVisibleOperator(true);setIsVisibleNetwork(false);return;case DestinationType.Hub1c:setIsVisibleOperator(true);setIsVisibleNetwork(false);return;default:setIsVisibleOperator(false);setIsVisibleNetwork(false);}},[externalType]);var dispatch=useDispatch();/** очистка формы */var onClearForm=function onClearForm(){setExternalType(undefined);setOperator(undefined);setContractor(undefined);setContractorValue(undefined);setDocumentType(undefined);setStatus(undefined);setCreateFrom(undefined);setCreateTo(undefined);setDocumentDateFrom(undefined);setDocumentDateTo(undefined);setDocumentNumber(undefined);};/** преобразование ответа сервера в массив для опций селекта контрагента */var contractorDataToOptions=function contractorDataToOptions(data){setContractorRows(data);return data.map(function(item){var _item$person,_item$person2,_item$person3;/** получение типа контрагента */var extTypeName=getExtTypeName(item===null||item===void 0?void 0:item.externalType);var contractorType=getContractorType([extTypeName,item.externalOperator,item.network]);/** если это компания */if(item.type==='division'){return{value:item.id,label:item.company+contractorType};}/** если это ФЛ */var fio=getNoEmptyString([item===null||item===void 0?void 0:(_item$person=item.person)===null||_item$person===void 0?void 0:_item$person.surname,item===null||item===void 0?void 0:(_item$person2=item.person)===null||_item$person2===void 0?void 0:_item$person2.name,item===null||item===void 0?void 0:(_item$person3=item.person)===null||_item$person3===void 0?void 0:_item$person3.patronymic]);return{value:item.id,label:\"\".concat(fio).concat(contractorType)};});};/** загрузка подходящих контрагентов в автокомплите */var contractorLoad=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(raw,callback){var _yield$autocompleteGa,_yield$autocompleteGa2,rows;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return autocompleteGateway.getContractor({recipient:raw});case 2:_yield$autocompleteGa=_context2.sent;_yield$autocompleteGa2=_yield$autocompleteGa.rows;rows=_yield$autocompleteGa2===void 0?[]:_yield$autocompleteGa2;callback(contractorDataToOptions(rows));case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function contractorLoad(_x,_x2){return _ref2.apply(this,arguments);};}();var onContractorChange=function onContractorChange(e){setContractorValue(e);/** получение информации о выбранном контрагенте */var currentPersonInfo=contractorRows.find(function(item){return item.id===(e===null||e===void 0?void 0:e.value);});setContractor(currentPersonInfo);};/** обработка нажания на кнопку Фильтровать */var onFilter=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var filterParams,clean;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:clean=function _clean(obj){for(var propName in obj){if(obj[propName]===null||obj[propName]===undefined){delete obj[propName];}}};filterParams={externalType:externalType,contractor:contractor,documentType:documentType,packageStatus:status,createdFrom:dateFormat(createFrom,'dd.MM.yyyy'),createdTo:dateFormat(createTo,'dd.MM.yyyy'),documentDateFrom:dateFormat(documentDateFrom,'dd.MM.yyyy'),documentDateTo:dateFormat(documentDateTo,'dd.MM.yyyy'),documentNumber:documentNumber,network:network,externalOperator:operator===null||operator===void 0?void 0:operator.value};clean(filterParams);dispatch(actionSearchSubmit({formData:filterParams}));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function onFilter(){return _ref3.apply(this,arguments);};}();var onChangeExternalType=function onChangeExternalType(e){/** очистка полей, которые скрываются при смене типа контрагента */setOperator(undefined);setNetwork(undefined);setExternalType(e);};return/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-menu group\"},/*#__PURE__*/React.createElement(Dropdown,{width:\"300px\",widthRestrict:true,trigger:/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconSearch,{fill:\"currentColor\"})},\"\\u041F\\u043E\\u0438\\u0441\\u043A\")},/*#__PURE__*/React.createElement(\"div\",{className:\"document-dropdown-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-header\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Select,{value:externalType,label:\"\\u0422\\u0438\\u043F \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\\u0430\",name:\"externalType\",options:contractorTypeOptions,onChange:onChangeExternalType,placeholder:\"\"}),isVisibleOperator&&/*#__PURE__*/React.createElement(Select,{value:operator,label:\"\\u041E\\u043F\\u0435\\u0440\\u0430\\u0442\\u043E\\u0440\",name:\"operator\",options:operatorOptions,onChange:function onChange(e){return setOperator(e);},placeholder:\"\"}),isVisibleNetwork&&/*#__PURE__*/React.createElement(Select,{value:network,label:\"\\u0421\\u0435\\u0442\\u044C\",name:\"network\",options:networkOptions,onChange:function onChange(e){return setNetwork(e);},placeholder:\"\"}),/*#__PURE__*/React.createElement(Autocomplete,{value:contractorValue,loadOptions:contractorLoad,onChange:function onChange(e){return onContractorChange(e);},label:\"\\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\",placeholder:\"\"}),/*#__PURE__*/React.createElement(Select,{value:documentType,label:\"\\u0422\\u0438\\u043F \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\",name:\"documentType\",options:docTypeOptions,onChange:function onChange(e){return setDocumentType(e);},placeholder:\"\"}),/*#__PURE__*/React.createElement(Select,{value:status,label:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",name:\"status\",options:getDocStatusOptions(mode),onChange:function onChange(e){return setStatus(e);},placeholder:\"\"}),/*#__PURE__*/React.createElement(Group,null,/*#__PURE__*/React.createElement(DatePicker,{selectsStart:true,name:\"from\",label:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u043E \\u0441\",value:createFrom,startDate:createFrom,endDate:createTo,placeholderText:\"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\\u0413\\u0413\",onChange:function onChange(e){return setCreateFrom(e);}}),/*#__PURE__*/React.createElement(DatePicker,{selectsEnd:true,name:\"to\",label:\"\\u043F\\u043E\",value:createTo,startDate:createFrom,endDate:createTo,minDate:createFrom,placeholderText:\"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\\u0413\\u0413\",onChange:function onChange(e){return setCreateTo(e);}})),/*#__PURE__*/React.createElement(Input,{label:\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\",name:\"documentNumber\",onChange:function onChange(e){return setDocumentNumber(e.target.value);},value:documentNumber}),/*#__PURE__*/React.createElement(Group,null,/*#__PURE__*/React.createElement(DatePicker,{selectsStart:true,name:\"from\",label:\"\\u0414\\u0430\\u0442\\u0430 \\u0432 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0435 c\",value:documentDateFrom,startDate:documentDateFrom,endDate:documentDateTo,placeholderText:\"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\\u0413\\u0413\",onChange:function onChange(e){return setDocumentDateFrom(e);}}),/*#__PURE__*/React.createElement(DatePicker,{selectsEnd:true,name:\"to\",label:\"\\u043F\\u043E\",value:documentDateTo,startDate:documentDateFrom,endDate:documentDateTo,minDate:documentDateFrom,placeholderText:\"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\\u0413\\u0413\",onChange:function onChange(e){return setDocumentDateTo(e);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"document-dropdown-buttons\"},/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconClose,{fill:\"currentColor\"}),fullWidth:true,onClick:onClearForm},\"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconSearch,{fill:\"currentColor\"}),kind:ButtonKinds.Secondary,fullWidth:true,onClick:onFilter},\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/features/new-filter/NewFilter.tsx"],"names":["React","useState","useEffect","Button","ButtonKinds","Icons","Dropdown","Input","Select","Group","DatePicker","useDispatch","useSelector","Autocomplete","AutocompleteGateway","DictionaryGateway","dateFormat","selectMode","docTypeOptions","contractorTypeOptions","getDocStatusOptions","getContractorType","getNoEmptyString","getExtTypeName","DestinationType","actionSearchSubmit","autocompleteGateway","dictionaryGateway","NewFilter","mode","externalType","setExternalType","contractorValue","setContractorValue","contractor","setContractor","documentType","setDocumentType","status","setStatus","createFrom","setCreateFrom","createTo","setCreateTo","documentNumber","setDocumentNumber","documentDateFrom","setDocumentDateFrom","documentDateTo","setDocumentDateTo","operator","setOperator","network","setNetwork","operatorOptions","setOperatorOptions","networkOptions","setNetworkOptions","isVisibleOperator","setIsVisibleOperator","isVisibleNetwork","setIsVisibleNetwork","contractorRows","setContractorRows","serverDataToOptions","rows","map","item","value","code","label","name","operatorLoad","getExternalOperators","operatorRows","operatorOptionList","getNetworks","networkRows","networkOptionList","Roaming","LoaclRoaming","Connector","Hub1c","dispatch","onClearForm","undefined","contractorDataToOptions","data","extTypeName","contractorType","externalOperator","type","id","company","fio","person","surname","patronymic","contractorLoad","raw","callback","getContractor","recipient","onContractorChange","e","currentPersonInfo","find","onFilter","clean","obj","propName","filterParams","packageStatus","createdFrom","createdTo","formData","onChangeExternalType","target","Secondary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  ButtonKinds,\r\n  Icons,\r\n  Dropdown,\r\n  Input,\r\n  Select,\r\n  Group,\r\n  DatePicker\r\n} from '@distate/components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.css';\r\nimport { Autocomplete } from '@distate/components/dist/Autocomplete';\r\nimport AutocompleteGateway from '@distate/core/dist/application/autocomplete/AutocompleteGateway';\r\nimport DictionaryGateway from '@distate/core/dist/application/dictionary/common/DictionaryGateway';\r\nimport { dateFormat } from '@distate/components/dist/FormSchema';\r\n\r\nimport { selectMode } from '../../store/selects';\r\nimport { docTypeOptions, contractorTypeOptions, getDocStatusOptions } from './filterData';\r\nimport {\r\n  getContractorType,\r\n  getNoEmptyString,\r\n  getExtTypeName\r\n} from '../../helpers/documnets.helpers';\r\n\r\nimport { DestinationType } from '../../../contractors/helpers/contractors.typings';\r\nimport { actionSearchSubmit } from '../../../../container/filter/store/actions';\r\n\r\nconst autocompleteGateway = new AutocompleteGateway();\r\nconst dictionaryGateway = new DictionaryGateway();\r\n\r\nexport const NewFilter = () => {\r\n  /** тип документов (входящие\\исходящие\\архив\\черновики) */\r\n  const mode = useSelector(selectMode) || '';\r\n\r\n  const [externalType, setExternalType] = useState<HTMLSelectElement>();\r\n  /** контрагент, для отображения в селекте */\r\n  const [contractorValue, setContractorValue] = useState<HTMLSelectElement>();\r\n  /** дополнительная информация о выбранном контрагенте */\r\n  const [contractor, setContractor] = useState<HTMLSelectElement>();\r\n  const [documentType, setDocumentType] = useState<HTMLSelectElement>();\r\n  const [status, setStatus] = useState<HTMLSelectElement>();\r\n\r\n  /** для ввода даты \"создано с\" */\r\n  const [createFrom, setCreateFrom] = React.useState<any>(null);\r\n  /** для ввода даты \"создано по\" */\r\n  const [createTo, setCreateTo] = React.useState<any>(null);\r\n  /** Номер документа */\r\n  const [documentNumber, setDocumentNumber] = useState<string | undefined>();\r\n  /** для ввода даты \"дата в документе с\" */\r\n  const [documentDateFrom, setDocumentDateFrom] = React.useState<any>(null);\r\n  /** для ввода даты \"дата в документе по\" */\r\n  const [documentDateTo, setDocumentDateTo] = React.useState<any>(null);\r\n\r\n  const [operator, setOperator] = useState<HTMLSelectElement>();\r\n  const [network, setNetwork] = useState<HTMLSelectElement>();\r\n\r\n  const [operatorOptions, setOperatorOptions] = useState<any[]>([]);\r\n  const [networkOptions, setNetworkOptions] = useState<any[]>([]);\r\n\r\n  /** флаг отображения селекта выбора оператора */\r\n  const [isVisibleOperator, setIsVisibleOperator] = useState(false);\r\n  /** флаг отображения селекта выбора сети */\r\n  const [isVisibleNetwork, setIsVisibleNetwork] = useState(false);\r\n\r\n  /** для сохранения значения текущего типа пользователя ЮЛ\\ФЛ */\r\n  const [contractorRows, setContractorRows] = useState<any[]>([]);\r\n\r\n  type ServerDataRow = {\r\n    code: string;\r\n    name: string;\r\n  };\r\n  /** преобразует массив справочника из сервера в option селекта */\r\n  const serverDataToOptions = (rows: ServerDataRow[]) =>\r\n    rows.map(item => ({ value: item.code, label: item.name }));\r\n\r\n  /** получение справочников */\r\n  useEffect(() => {\r\n    const operatorLoad = async () => {\r\n      const { rows: operatorRows } = await dictionaryGateway.getExternalOperators();\r\n      const operatorOptionList = serverDataToOptions(operatorRows);\r\n      setOperatorOptions(operatorOptionList);\r\n\r\n      const { rows: networkRows } = await dictionaryGateway.getNetworks();\r\n      const networkOptionList = serverDataToOptions(networkRows);\r\n      setNetworkOptions(networkOptionList);\r\n    };\r\n    operatorLoad();\r\n  }, []);\r\n\r\n  /** изменение отображения селектов при смене типа контрагента */\r\n  useEffect(() => {\r\n    switch (externalType?.value) {\r\n      case DestinationType.Roaming:\r\n        setIsVisibleOperator(true);\r\n        setIsVisibleNetwork(false);\r\n        return;\r\n      case DestinationType.LoaclRoaming:\r\n        setIsVisibleOperator(false);\r\n        setIsVisibleNetwork(true);\r\n        return;\r\n      case DestinationType.Connector:\r\n        setIsVisibleOperator(true);\r\n        setIsVisibleNetwork(false);\r\n        return;\r\n      case DestinationType.Hub1c:\r\n        setIsVisibleOperator(true);\r\n        setIsVisibleNetwork(false);\r\n        return;\r\n      default:\r\n        setIsVisibleOperator(false);\r\n        setIsVisibleNetwork(false);\r\n    }\r\n  }, [externalType]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /** очистка формы */\r\n  const onClearForm = () => {\r\n    setExternalType(undefined);\r\n    setOperator(undefined);\r\n    setContractor(undefined);\r\n    setContractorValue(undefined);\r\n    setDocumentType(undefined);\r\n    setStatus(undefined);\r\n    setCreateFrom(undefined);\r\n    setCreateTo(undefined);\r\n    setDocumentDateFrom(undefined);\r\n    setDocumentDateTo(undefined);\r\n    setDocumentNumber(undefined);\r\n  };\r\n\r\n  /** преобразование ответа сервера в массив для опций селекта контрагента */\r\n  const contractorDataToOptions = (data: any[]) => {\r\n    setContractorRows(data);\r\n\r\n    return data.map(item => {\r\n      /** получение типа контрагента */\r\n      const extTypeName = getExtTypeName(item?.externalType);\r\n      const contractorType = getContractorType([extTypeName, item.externalOperator, item.network]);\r\n\r\n      /** если это компания */\r\n      if (item.type === 'division') {\r\n        return { value: item.id, label: item.company + contractorType };\r\n      }\r\n      /** если это ФЛ */\r\n      const fio = getNoEmptyString([\r\n        item?.person?.surname,\r\n        item?.person?.name,\r\n        item?.person?.patronymic\r\n      ]);\r\n\r\n      return {\r\n        value: item.id,\r\n        label: `${fio}${contractorType}`\r\n      };\r\n    });\r\n  };\r\n\r\n  /** загрузка подходящих контрагентов в автокомплите */\r\n  const contractorLoad = async (raw: string, callback: any) => {\r\n    const { rows = [] } = await autocompleteGateway.getContractor({ recipient: raw });\r\n    callback(contractorDataToOptions(rows));\r\n  };\r\n\r\n  const onContractorChange = (e: HTMLSelectElement) => {\r\n    setContractorValue(e);\r\n    /** получение информации о выбранном контрагенте */\r\n    const currentPersonInfo = contractorRows.find(item => item.id === e?.value);\r\n    setContractor(currentPersonInfo);\r\n  };\r\n\r\n  /** обработка нажания на кнопку Фильтровать */\r\n  const onFilter = async () => {\r\n    const filterParams = {\r\n      externalType,\r\n      contractor,\r\n      documentType,\r\n      packageStatus: status,\r\n      createdFrom: dateFormat(createFrom, 'dd.MM.yyyy'),\r\n      createdTo: dateFormat(createTo, 'dd.MM.yyyy'),\r\n      documentDateFrom: dateFormat(documentDateFrom, 'dd.MM.yyyy'),\r\n      documentDateTo: dateFormat(documentDateTo, 'dd.MM.yyyy'),\r\n      documentNumber,\r\n      network,\r\n      externalOperator: operator?.value\r\n    };\r\n\r\n    function clean(obj: any) {\r\n      for (const propName in obj) {\r\n        if (obj[propName] === null || obj[propName] === undefined) {\r\n          delete obj[propName];\r\n        }\r\n      }\r\n    }\r\n    clean(filterParams);\r\n    dispatch(actionSearchSubmit({ formData: filterParams }));\r\n  };\r\n\r\n  const onChangeExternalType = (e: HTMLSelectElement) => {\r\n    /** очистка полей, которые скрываются при смене типа контрагента */\r\n    setOperator(undefined);\r\n    setNetwork(undefined);\r\n\r\n    setExternalType(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-menu group\">\r\n      <Dropdown\r\n        width=\"300px\"\r\n        widthRestrict\r\n        trigger={<Button icon={<Icons.IconSearch fill=\"currentColor\" />}>Поиск</Button>}\r\n      >\r\n        <div className=\"document-dropdown-wrapper\">\r\n          <div className=\"dropdown-header\">\r\n            <span>Поиск по документам</span>\r\n          </div>\r\n          <div>\r\n            <Select\r\n              value={externalType}\r\n              label=\"Тип контрагента\"\r\n              name=\"externalType\"\r\n              options={contractorTypeOptions}\r\n              onChange={onChangeExternalType}\r\n              placeholder=\"\"\r\n            />\r\n\r\n            {isVisibleOperator && (\r\n              <Select\r\n                value={operator}\r\n                label=\"Оператор\"\r\n                name=\"operator\"\r\n                options={operatorOptions}\r\n                onChange={(e: HTMLSelectElement) => setOperator(e)}\r\n                placeholder=\"\"\r\n              />\r\n            )}\r\n\r\n            {isVisibleNetwork && (\r\n              <Select\r\n                value={network}\r\n                label=\"Сеть\"\r\n                name=\"network\"\r\n                options={networkOptions}\r\n                onChange={(e: HTMLSelectElement) => setNetwork(e)}\r\n                placeholder=\"\"\r\n              />\r\n            )}\r\n\r\n            <Autocomplete\r\n              value={contractorValue}\r\n              loadOptions={contractorLoad}\r\n              onChange={(e: HTMLSelectElement) => onContractorChange(e)}\r\n              label=\"Контрагент\"\r\n              placeholder=\"\"\r\n            />\r\n\r\n            <Select\r\n              value={documentType}\r\n              label=\"Тип документа\"\r\n              name=\"documentType\"\r\n              options={docTypeOptions}\r\n              onChange={(e: HTMLSelectElement) => setDocumentType(e)}\r\n              placeholder=\"\"\r\n            />\r\n\r\n            <Select\r\n              value={status}\r\n              label=\"Статус\"\r\n              name=\"status\"\r\n              options={getDocStatusOptions(mode)}\r\n              onChange={(e: HTMLSelectElement) => setStatus(e)}\r\n              placeholder=\"\"\r\n            />\r\n\r\n            <Group>\r\n              <DatePicker\r\n                selectsStart\r\n                name=\"from\"\r\n                label=\"Создано с\"\r\n                value={createFrom}\r\n                startDate={createFrom}\r\n                endDate={createTo}\r\n                placeholderText=\"Формат: ДД.ММ.ГГГГ\"\r\n                onChange={e => setCreateFrom(e)}\r\n              />\r\n              <DatePicker\r\n                selectsEnd\r\n                name=\"to\"\r\n                label=\"по\"\r\n                value={createTo}\r\n                startDate={createFrom}\r\n                endDate={createTo}\r\n                minDate={createFrom}\r\n                placeholderText=\"Формат: ДД.ММ.ГГГГ\"\r\n                onChange={e => setCreateTo(e)}\r\n              />\r\n            </Group>\r\n\r\n            <Input\r\n              label=\"Номер документа\"\r\n              name=\"documentNumber\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setDocumentNumber(e.target.value)\r\n              }\r\n              value={documentNumber}\r\n            />\r\n\r\n            <Group>\r\n              <DatePicker\r\n                selectsStart\r\n                name=\"from\"\r\n                label=\"Дата в документе c\"\r\n                value={documentDateFrom}\r\n                startDate={documentDateFrom}\r\n                endDate={documentDateTo}\r\n                placeholderText=\"Формат: ДД.ММ.ГГГГ\"\r\n                onChange={e => setDocumentDateFrom(e)}\r\n              />\r\n              <DatePicker\r\n                selectsEnd\r\n                name=\"to\"\r\n                label=\"по\"\r\n                value={documentDateTo}\r\n                startDate={documentDateFrom}\r\n                endDate={documentDateTo}\r\n                minDate={documentDateFrom}\r\n                placeholderText=\"Формат: ДД.ММ.ГГГГ\"\r\n                onChange={e => setDocumentDateTo(e)}\r\n              />\r\n            </Group>\r\n          </div>\r\n          <div className=\"document-dropdown-buttons\">\r\n            <Button icon={<Icons.IconClose fill=\"currentColor\" />} fullWidth onClick={onClearForm}>\r\n              Очистить\r\n            </Button>\r\n            <Button\r\n              icon={<Icons.IconSearch fill=\"currentColor\" />}\r\n              kind={ButtonKinds.Secondary}\r\n              fullWidth\r\n              onClick={onFilter}\r\n            >\r\n              Фильтровать\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}