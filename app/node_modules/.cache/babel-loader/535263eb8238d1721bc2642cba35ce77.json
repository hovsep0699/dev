{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import React from 'react';\r\n\r\nexport type ITable<C = any, R = any> = {\r\n  isLoading?: boolean;\r\n  isNextLoading?: boolean;\r\n  hasMore?: boolean;\r\n  onMore?: () => void;\r\n  columns: IColumn<C>[];\r\n  offset?: number;\r\n  limit?: number;\r\n  rows: Array<R>;\r\n  classNameRow?: any;\r\n  emptyTitle?: string;\r\n};\r\n\r\nexport type IColumn<R = any> = {\r\n  width?: string;\r\n  property: string;\r\n  format?: (value: any, item: R, index: number) => React.ReactNode | string | number;\r\n  header?: any;\r\n  footer?: any;\r\n  align?: 'center' | 'end';\r\n};\r\n\r\nexport type IContext<T = any, D = any> = {\r\n  isLoading?: boolean;\r\n  isNextLoading?: boolean;\r\n  hasMore?: boolean;\r\n  rows: Array<T>;\r\n  onMore: () => void;\r\n  offset?: number;\r\n  limit?: number;\r\n  columns: IColumn<D>[];\r\n  emptyTitle?: string;\r\n  classNameRow?: (item: T, index: number, rows: Array<T>) => string | undefined;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}