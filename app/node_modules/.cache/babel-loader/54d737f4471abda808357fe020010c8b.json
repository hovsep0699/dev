{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{StyledInput,InputWrapper,StyledIconAlert,FieldWrapper,StyledFormField}from'../Form.styles';import FieldLabel from\"../FieldLabel\";import FieldError from\"../FieldError\";import{useField}from\"formik\";var InputMaskField=function InputMaskField(_ref){var _ref2,_ref3;var _ref$type=_ref.type,type=_ref$type===void 0?'text':_ref$type,placeholder=_ref.placeholder,maskReg=_ref.maskReg,name=_ref.name,label=_ref.label,value=_ref.value,hideErrors=_ref.hideErrors,onChange=_ref.onChange,mask=_ref.mask,title=_ref.title,rest=_objectWithoutProperties(_ref,[\"type\",\"placeholder\",\"maskReg\",\"name\",\"label\",\"value\",\"hideErrors\",\"onChange\",\"mask\",\"title\"]);var applyMask=function applyMask(input){var formattedValue='';var inputIndex=0;if(!mask)return input;for(var i=0;i<mask.length;i++){var maskChar=mask[i];if(maskChar==='x'){if(input[inputIndex]){formattedValue+=input[inputIndex];inputIndex++;}else{break;}}else{if(maskReg){if(maskReg.test(maskChar)&&!input[inputIndex]&&formattedValue.length>0){formattedValue.slice(0,formattedValue.length-1);continue;}}else if(maskChar==='-'&&!input[inputIndex]&&formattedValue.length>0){formattedValue.slice(0,formattedValue.length-1);continue;}formattedValue+=maskChar;}}return formattedValue;};var _useField=useField({name:name,type:type}),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var touched=meta.touched,error=meta.error;var setValue=helpers.setValue;var _useState=useState(value),_useState2=_slicedToArray(_useState,2),maskedValue=_useState2[0],setMaskedValue=_useState2[1];var handleChange=function handleChange(e){var inputValue=e.target.value.replace(/\\D/g,'');// Remove non-digit characters\nvar newMaskedValue=applyMask(inputValue);setMaskedValue(maskedValue);onChange===null||onChange===void 0?void 0:onChange(newMaskedValue);setValue(newMaskedValue);};return/*#__PURE__*/React.createElement(StyledFormField,null,label&&/*#__PURE__*/React.createElement(FieldLabel,{name:name},label),/*#__PURE__*/React.createElement(FieldWrapper,null,/*#__PURE__*/React.createElement(InputWrapper,null,/*#__PURE__*/React.createElement(StyledInput,Object.assign({hideErrors:hideErrors,error:!!error,touched:touched,placeholder:placeholder!==null&&placeholder!==void 0?placeholder:\"\",type:type,value:(_ref2=(_ref3=value!==null&&value!==void 0?value:field.value)!==null&&_ref3!==void 0?_ref3:maskedValue)!==null&&_ref2!==void 0?_ref2:\"\",title:title,onChange:handleChange},rest,{name:field.name,checked:field.checked,onBlur:field.onBlur,multiple:field.multiple})),!hideErrors&&error&&touched&&/*#__PURE__*/React.createElement(StyledIconAlert,null))),!hideErrors&&touched&&error?/*#__PURE__*/React.createElement(FieldError,null,error):null);};export default InputMaskField;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/Form/InputMaskField/InputMaskField.tsx"],"names":["React","useState","StyledInput","InputWrapper","StyledIconAlert","FieldWrapper","StyledFormField","FieldLabel","FieldError","useField","InputMaskField","type","placeholder","maskReg","name","label","value","hideErrors","onChange","mask","title","rest","applyMask","input","formattedValue","inputIndex","i","length","maskChar","test","slice","field","meta","helpers","touched","error","setValue","maskedValue","setMaskedValue","handleChange","e","inputValue","target","replace","newMaskedValue","checked","onBlur","multiple"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyledInput, InputWrapper, StyledIconAlert, FieldWrapper, StyledFormField} from '../Form.styles';\r\nimport FieldLabel from \"../FieldLabel\";\r\nimport FieldError from \"../FieldError\";\r\nimport {useField} from \"formik\";\r\n\r\nexport type InputMaskFieldProps = {\r\n    name: string;\r\n    label?: string | null;\r\n    maskReg?: RegExp | null;\r\n    value?: string | number | null;\r\n    onChange?: (e: string) => void | null;\r\n    type?: 'text' | 'email' | 'number' | 'password' | 'search' | 'tel';\r\n    placeholder?: string;\r\n    hideErrors?: boolean;\r\n    mask?: string | null;\r\n    title?: string;\r\n};\r\n\r\nconst InputMaskField = ({\r\n                       type = 'text',\r\n                       placeholder,\r\n                       maskReg,\r\n                       name,\r\n                       label,\r\n                       value,\r\n                       hideErrors,\r\n                       onChange,\r\n                       mask,\r\n                       title,\r\n                       ...rest\r\n                   }: InputMaskFieldProps) => {\r\n\r\n    const applyMask = (input: string) => {\r\n        let formattedValue = '';\r\n        let inputIndex = 0;\r\n\r\n        if (!mask) return  input;\r\n        for (let i = 0; i < mask.length; i++) {\r\n            const maskChar = mask[i];\r\n\r\n            if (maskChar === 'x') {\r\n                if (input[inputIndex]) {\r\n                    formattedValue += input[inputIndex];\r\n                    inputIndex++;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                if (maskReg) {\r\n                    if (maskReg.test(maskChar) && !input[inputIndex] && formattedValue.length > 0) {\r\n                        formattedValue.slice(0, formattedValue.length - 1);\r\n                        continue;\r\n                    }\r\n                }\r\n                else if (maskChar === '-' && !input[inputIndex] && formattedValue.length > 0) {\r\n                    formattedValue.slice(0, formattedValue.length - 1);\r\n                    continue;\r\n                }\r\n\r\n                formattedValue += maskChar;\r\n            }\r\n        }\r\n\r\n        return formattedValue;\r\n    };\r\n    const [field, meta, helpers] = useField({ name, type });\r\n    const { touched, error } = meta;\r\n    const { setValue } = helpers;\r\n    const [maskedValue, setMaskedValue] = useState(value);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const inputValue = e.target.value.replace(/\\D/g, ''); // Remove non-digit characters\r\n        const newMaskedValue = applyMask(inputValue);\r\n\r\n        setMaskedValue(maskedValue)\r\n        onChange?.(newMaskedValue);\r\n        setValue(newMaskedValue);\r\n\r\n    };\r\n\r\n    return (\r\n        <StyledFormField>\r\n            {label && <FieldLabel name={name}>{label}</FieldLabel>}\r\n\r\n            <FieldWrapper>\r\n                <InputWrapper>\r\n                    <StyledInput\r\n                        hideErrors={hideErrors}\r\n                        error={!!error}\r\n                        touched={touched}\r\n                        placeholder={placeholder ?? \"\"}\r\n                        type={type}\r\n                        value={value ?? field.value ?? maskedValue ?? \"\"}\r\n                        title={title}\r\n                        onChange={handleChange}\r\n                        {...rest}\r\n                        name={field.name}\r\n                        checked={field.checked}\r\n                        onBlur={field.onBlur}\r\n                        multiple={field.multiple}\r\n                    />\r\n                    {!hideErrors && error && touched && <StyledIconAlert />}\r\n                </InputWrapper>\r\n            </FieldWrapper>\r\n\r\n            {!hideErrors && touched && error ? <FieldError>{error}</FieldError> : null}\r\n        </StyledFormField>\r\n\r\n    );\r\n};\r\n\r\nexport default InputMaskField;\r\n"]},"metadata":{},"sourceType":"module"}