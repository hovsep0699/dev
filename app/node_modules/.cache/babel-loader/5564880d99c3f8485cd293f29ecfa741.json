{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import Button,{ButtonKinds}from'@distate/components/dist/Button';import{IconCheck}from'@distate/components/dist/icons';import get from'lodash.get';import{PageOperatorSkeleton,PageOperatorCompanySkeleton}from'./page.connecters.skeleton';import{connectersRequest,legalsRequest,updateConnectersRequest}from'../../store/actions';import{list,connecters,isLoadingConnecters,isLoadingList,isLoadingUpdate as isLoadingUpdateCompany,companyIdConnecters}from'../../store/selects';import{Operators}from'./operators';import{Companies}from'./companies';import{DevOperators}from'./dev-operators';export var Connecters=function Connecters(){var dispatch=useDispatch();var id=useSelector(companyIdConnecters);var companies=useSelector(list);var operators=useSelector(connecters);var isLoading=useSelector(isLoadingConnecters);var isLoadingUpdate=useSelector(isLoadingUpdateCompany);var isLoadingCompanies=useSelector(isLoadingList);useEffect(function(){dispatch(legalsRequest());// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var _useState=useState(operators),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];useEffect(function(){return setItems(operators);},[operators]);var handleOnChecked=function handleOnChecked(code,checked){var index=items.findIndex(function(i){return i.code===code;});items[index].checked=checked;setItems(_toConsumableArray(items));};var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),company=_useState4[0],setCompany=_useState4[1];var handleOnChangeCompany=function handleOnChangeCompany(data){return setCompany(data);};useEffect(function(){var first=get(companies,'0');if(!company&&first){setCompany({value:first.id,label:first.name});}if(company&&company.value!==id){dispatch(connectersRequest({id:company.value}));}},[dispatch,id,company,companies]);var renderCompanies=function renderCompanies(){if(isLoadingCompanies){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PageOperatorCompanySkeleton,null),/*#__PURE__*/React.createElement(PageOperatorSkeleton,null));}return/*#__PURE__*/React.createElement(Companies,{data:companies,value:company,onChange:handleOnChangeCompany});};var renderOperators=function renderOperators(){if(isLoading){return/*#__PURE__*/React.createElement(PageOperatorSkeleton,null);}return/*#__PURE__*/React.createElement(Operators,{data:items,onChange:handleOnChecked});};var handleOnSave=function handleOnSave(){if(company&&company.value&&!isLoadingUpdate){var connectors=items.reduce(function(prev,curr){prev.push({operator:curr.code,enabled:curr.checked});return prev;},[]);dispatch(updateConnectersRequest({id:company.value,connectors:connectors}));}};return/*#__PURE__*/React.createElement(React.Fragment,null,renderCompanies(),renderOperators(),/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Primary,icon:/*#__PURE__*/React.createElement(IconCheck,{style:{fill:'currentcolor'}}),onClick:handleOnSave,toogleTheme:true},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(DevOperators,null));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/system/components/connecters/Connecters.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","ButtonKinds","IconCheck","get","PageOperatorSkeleton","PageOperatorCompanySkeleton","connectersRequest","legalsRequest","updateConnectersRequest","list","connecters","isLoadingConnecters","isLoadingList","isLoadingUpdate","isLoadingUpdateCompany","companyIdConnecters","Operators","Companies","DevOperators","Connecters","dispatch","id","companies","operators","isLoading","isLoadingCompanies","items","setItems","handleOnChecked","code","checked","index","findIndex","i","company","setCompany","handleOnChangeCompany","data","first","value","label","name","renderCompanies","renderOperators","handleOnSave","connectors","reduce","prev","curr","push","operator","enabled","Primary","fill"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button, { ButtonKinds } from '@distate/components/dist/Button';\r\nimport { IconCheck } from '@distate/components/dist/icons';\r\nimport get from 'lodash.get';\r\n\r\nimport { PageOperatorSkeleton, PageOperatorCompanySkeleton } from './page.connecters.skeleton';\r\nimport { connectersRequest, legalsRequest, updateConnectersRequest } from '../../store/actions';\r\nimport {\r\n  list,\r\n  connecters,\r\n  isLoadingConnecters,\r\n  isLoadingList,\r\n  isLoadingUpdate as isLoadingUpdateCompany,\r\n  companyIdConnecters\r\n} from '../../store/selects';\r\nimport { Operators } from './operators';\r\nimport { Companies } from './companies';\r\nimport { DevOperators } from './dev-operators';\r\n\r\nexport const Connecters: React.FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const id = useSelector(companyIdConnecters);\r\n  const companies = useSelector(list);\r\n  const operators = useSelector(connecters);\r\n  const isLoading = useSelector(isLoadingConnecters);\r\n  const isLoadingUpdate = useSelector(isLoadingUpdateCompany);\r\n  const isLoadingCompanies = useSelector(isLoadingList);\r\n\r\n  useEffect(() => {\r\n    dispatch(legalsRequest());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [items, setItems] = useState(operators);\r\n  useEffect(() => setItems(operators), [operators]);\r\n\r\n  const handleOnChecked = (code: any, checked: boolean) => {\r\n    const index = items.findIndex(i => i.code === code);\r\n    items[index].checked = checked;\r\n\r\n    setItems([...items]);\r\n  };\r\n\r\n  const [company, setCompany] = useState<{ value: unknown; label: string }>();\r\n  const handleOnChangeCompany = (data: any) => setCompany(data);\r\n\r\n  useEffect(() => {\r\n    const first = get(companies, '0');\r\n    if (!company && first) {\r\n      setCompany({ value: first.id, label: first.name });\r\n    }\r\n\r\n    if (company && company.value !== id) {\r\n      dispatch(connectersRequest({ id: company.value }));\r\n    }\r\n  }, [dispatch, id, company, companies]);\r\n\r\n  const renderCompanies = () => {\r\n    if (isLoadingCompanies) {\r\n      return (\r\n        <>\r\n          <PageOperatorCompanySkeleton />\r\n          <PageOperatorSkeleton />\r\n        </>\r\n      );\r\n    }\r\n\r\n    return <Companies data={companies} value={company} onChange={handleOnChangeCompany} />;\r\n  };\r\n\r\n  const renderOperators = () => {\r\n    if (isLoading) {\r\n      return <PageOperatorSkeleton />;\r\n    }\r\n    return <Operators data={items} onChange={handleOnChecked} />;\r\n  };\r\n\r\n  const handleOnSave = () => {\r\n    if (company && company.value && !isLoadingUpdate) {\r\n      const connectors = items.reduce((prev, curr) => {\r\n        prev.push({ operator: curr.code, enabled: curr.checked });\r\n        return prev;\r\n      }, []);\r\n\r\n      dispatch(updateConnectersRequest({ id: company.value, connectors }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderCompanies()}\r\n      {renderOperators()}\r\n      <Button\r\n        kind={ButtonKinds.Primary}\r\n        icon={<IconCheck style={{ fill: 'currentcolor' }} />}\r\n        onClick={handleOnSave}\r\n        toogleTheme\r\n      >\r\n        Сохранить\r\n      </Button>\r\n      <DevOperators />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}