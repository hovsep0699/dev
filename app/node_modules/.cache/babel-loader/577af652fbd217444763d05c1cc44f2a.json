{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(ducumentRouter),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(sagaRouter);import{takeLatest,put,select}from'redux-saga/effects';import{actionChangeRoute}from'../../../../store/actions';import{selectPathName}from'../../../../store/selects';import{DOCUMENT}from'../../../../common/Url';import{actionMode,actionDocumentInit,actionDocumentTools,actionDocumentFilter,actionDocumentRequest}from'../actions';var document=DOCUMENT.split('/').filter(Boolean).join('/');export function ducumentRouter(){return _regeneratorRuntime.wrap(function ducumentRouter$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionChangeRoute,sagaRouter);case 2:case\"end\":return _context.stop();}}},_marked);}function sagaRouter(){var pathname,paths,mode,defaultFilter,folderId;return _regeneratorRuntime.wrap(function sagaRouter$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(selectPathName);case 2:pathname=_context2.sent;if(!(pathname.substr(0,DOCUMENT.length)===DOCUMENT)){_context2.next=20;break;}paths=pathname.toLowerCase().split('/').filter(Boolean);mode=paths.slice(0,2).pop();mode=mode===document?'redirect':mode;_context2.next=9;return put(actionDocumentInit());case 9:_context2.next=11;return put(actionMode({mode:mode}));case 11:if(!(mode!=='redirect')){_context2.next=20;break;}defaultFilter={};if(mode==='folder'){folderId=paths.slice(0,3).pop();if(folderId){defaultFilter['labels']=[parseInt(folderId)];}}_context2.next=16;return put(actionDocumentFilter({filter:defaultFilter,offset:0}));case 16:_context2.next=18;return put(actionDocumentTools());case 18:_context2.next=20;return put(actionDocumentRequest({}));case 20:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/store/sagas/router.effect.ts"],"names":["ducumentRouter","sagaRouter","takeLatest","put","select","actionChangeRoute","selectPathName","DOCUMENT","actionMode","actionDocumentInit","actionDocumentTools","actionDocumentFilter","actionDocumentRequest","document","split","filter","Boolean","join","pathname","substr","length","paths","toLowerCase","mode","slice","pop","defaultFilter","folderId","parseInt","offset"],"mappings":"oNAiBiBA,c,iDAIPC,U,EArBV,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,MAA1B,KAAwC,oBAAxC,CAEA,OAASC,iBAAT,KAAkC,2BAAlC,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OACEC,UADF,CAEEC,kBAFF,CAGEC,mBAHF,CAIEC,oBAJF,CAKEC,qBALF,KAMO,YANP,CAQA,GAAMC,CAAAA,QAAQ,CAAGN,QAAQ,CAACO,KAAT,CAAe,GAAf,EACdC,MADc,CACPC,OADO,EAEdC,IAFc,CAET,GAFS,CAAjB,CAIA,MAAO,SAAUjB,CAAAA,cAAV,0IACL,MAAME,CAAAA,UAAU,CAACG,iBAAD,CAAoBJ,UAApB,CAAhB,CADK,sDAIP,QAAUA,CAAAA,UAAV,yLAC2B,MAAMG,CAAAA,MAAM,CAACE,cAAD,CAAZ,CAD3B,OACQY,QADR,qBAEMA,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAAmBZ,QAAQ,CAACa,MAA5B,IAAwCb,QAF9C,4BAGUc,KAHV,CAGkBH,QAAQ,CACnBI,WADW,GAEXR,KAFW,CAEL,GAFK,EAGXC,MAHW,CAGJC,OAHI,CAHlB,CAQQO,IARR,CAQeF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAe,CAAf,EAAkBC,GAAlB,EARf,CASIF,IAAI,CAAGA,IAAI,GAAKV,QAAT,CAAoB,UAApB,CAAiCU,IAAxC,CATJ,iBAWI,MAAMpB,CAAAA,GAAG,CAACM,kBAAkB,EAAnB,CAAT,CAXJ,yBAYI,MAAMN,CAAAA,GAAG,CAACK,UAAU,CAAC,CAAEe,IAAI,CAAJA,IAAF,CAAD,CAAX,CAAT,CAZJ,aAcQA,IAAI,GAAK,UAdjB,4BAeUG,aAfV,CAe+B,EAf/B,CAgBM,GAAIH,IAAI,GAAK,QAAb,CAAuB,CACfI,QADe,CACJN,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAe,CAAf,EAAkBC,GAAlB,EADI,CAErB,GAAIE,QAAJ,CAAc,CACZD,aAAa,CAAC,QAAD,CAAb,CAA0B,CAACE,QAAQ,CAACD,QAAD,CAAT,CAA1B,CACD,CACF,CArBP,kBAuBM,MAAMxB,CAAAA,GAAG,CAACQ,oBAAoB,CAAC,CAAEI,MAAM,CAAEW,aAAV,CAAyBG,MAAM,CAAE,CAAjC,CAAD,CAArB,CAAT,CAvBN,0BAwBM,MAAM1B,CAAAA,GAAG,CAACO,mBAAmB,EAApB,CAAT,CAxBN,0BAyBM,MAAMP,CAAAA,GAAG,CAACS,qBAAqB,CAAC,EAAD,CAAtB,CAAT,CAzBN","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects';\r\n\r\nimport { actionChangeRoute } from '../../../../store/actions';\r\nimport { selectPathName } from '../../../../store/selects';\r\nimport { DOCUMENT } from '../../../../common/Url';\r\nimport {\r\n  actionMode,\r\n  actionDocumentInit,\r\n  actionDocumentTools,\r\n  actionDocumentFilter,\r\n  actionDocumentRequest\r\n} from '../actions';\r\n\r\nconst document = DOCUMENT.split('/')\r\n  .filter(Boolean)\r\n  .join('/');\r\n\r\nexport function* ducumentRouter() {\r\n  yield takeLatest(actionChangeRoute, sagaRouter);\r\n}\r\n\r\nfunction* sagaRouter() {\r\n  const pathname: string = yield select(selectPathName);\r\n  if (pathname.substr(0, DOCUMENT.length) === DOCUMENT) {\r\n    const paths = pathname\r\n      .toLowerCase()\r\n      .split('/')\r\n      .filter(Boolean);\r\n\r\n    let mode = paths.slice(0, 2).pop();\r\n    mode = mode === document ? 'redirect' : mode;\r\n\r\n    yield put(actionDocumentInit());\r\n    yield put(actionMode({ mode }));\r\n\r\n    if (mode !== 'redirect') {\r\n      let defaultFilter: any = {};\r\n      if (mode === 'folder') {\r\n        const folderId = paths.slice(0, 3).pop();\r\n        if (folderId) {\r\n          defaultFilter['labels'] = [parseInt(folderId)];\r\n        }\r\n      }\r\n\r\n      yield put(actionDocumentFilter({ filter: defaultFilter, offset: 0 }));\r\n      yield put(actionDocumentTools());\r\n      yield put(actionDocumentRequest({}));\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}