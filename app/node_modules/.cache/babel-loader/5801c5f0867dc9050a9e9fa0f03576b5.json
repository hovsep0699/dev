{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar AuthRequest = /*#__PURE__*/function () {\n  function AuthRequest(parameters) {\n    _classCallCheck(this, AuthRequest);\n\n    if (!parameters) return;\n    if (parameters.certificate) this.certificate = parameters.certificate;\n    if (parameters.email) this.email = parameters.email;\n    if (parameters.password) this.password = parameters.password;\n    if (parameters.rawUser) this.rawUser = parameters.rawUser;\n    if (parameters.rawCompany) this.rawCompany = parameters.rawCompany;\n    if (parameters.employee) this.employee = parameters.employee;\n    if (parameters.isAuthed) this.isAuthed = parameters.isAuthed;\n    if (parameters.company) this.company = parameters.company;\n    if (parameters.user) this.user = parameters.user;\n  }\n\n  _createClass(AuthRequest, [{\n    key: \"certificate\",\n    set: function set(value) {\n      this._certificate = value;\n    },\n    get: function get() {\n      return this._certificate;\n    }\n  }, {\n    key: \"email\",\n    set: function set(value) {\n      this._email = value;\n    },\n    get: function get() {\n      return this._email;\n    }\n  }, {\n    key: \"password\",\n    set: function set(value) {\n      this._password = value;\n    },\n    get: function get() {\n      return this._password;\n    }\n  }, {\n    key: \"loginString\",\n    set: function set(value) {\n      this._loginString = value;\n    },\n    get: function get() {\n      return this._loginString;\n    }\n  }, {\n    key: \"loginStringSignedData\",\n    set: function set(value) {\n      this._loginStringSignedData = value;\n    },\n    get: function get() {\n      return this._loginStringSignedData;\n    }\n  }, {\n    key: \"rawUser\",\n    set: function set(value) {\n      this._rawUser = value;\n    },\n    get: function get() {\n      return this._rawUser;\n    }\n  }, {\n    key: \"rawCompany\",\n    set: function set(value) {\n      this._rawCompany = value;\n    },\n    get: function get() {\n      return this._rawCompany;\n    }\n  }, {\n    key: \"company\",\n    set: function set(value) {\n      this._company = value;\n    },\n    get: function get() {\n      return this._company;\n    }\n  }, {\n    key: \"user\",\n    set: function set(value) {\n      this._user = value;\n    },\n    get: function get() {\n      return this._user;\n    }\n  }, {\n    key: \"isAuthed\",\n    set: function set(value) {\n      this._isAuthed = value;\n    },\n    get: function get() {\n      return this._isAuthed;\n    }\n  }, {\n    key: \"error\",\n    set: function set(value) {\n      this._error = value;\n    },\n    get: function get() {\n      return this._error;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(request) {\n      if (request === null || request === undefined) throw new Error('Следует передать запрос для авторизации(AuthRequest)');\n      if (!(request instanceof AuthRequest)) throw new Error('Параметр должен быть подклассом AuthRequest');\n      var newReq = new AuthRequest();\n\n      if (request.certificate) {\n        newReq.certificate = request.certificate.clone();\n      }\n\n      newReq.loginString = request.loginString;\n      newReq.loginStringSignedData = request.loginStringSignedData;\n      newReq.email = request.email;\n      newReq.password = request.password;\n      newReq.error = request.error;\n      newReq.employee = request.employee;\n      newReq.rawUser = request.rawUser;\n      newReq.rawCompany = request.rawCompany;\n      newReq.isAuthed = request.isAuthed;\n      newReq.company = request.company;\n      newReq.user = request.user;\n      return newReq;\n    }\n  }]);\n\n  return AuthRequest;\n}();\n\nexport default AuthRequest;","map":{"version":3,"sources":["../../../src/application/auth/AuthRequest.js"],"names":[],"mappings":";;;IAAM,W;AACJ,uBAAY,UAAZ,EAAsB;AAAA;;AACpB,QAAI,CAAC,UAAL,EAAiB;AACjB,QAAI,UAAU,CAAC,WAAf,EAA4B,KAAK,WAAL,GAAmB,UAAU,CAAC,WAA9B;AAC5B,QAAI,UAAU,CAAC,KAAf,EAAsB,KAAK,KAAL,GAAa,UAAU,CAAC,KAAxB;AACtB,QAAI,UAAU,CAAC,QAAf,EAAyB,KAAK,QAAL,GAAgB,UAAU,CAAC,QAA3B;AACzB,QAAI,UAAU,CAAC,OAAf,EAAwB,KAAK,OAAL,GAAe,UAAU,CAAC,OAA1B;AACxB,QAAI,UAAU,CAAC,UAAf,EAA2B,KAAK,UAAL,GAAkB,UAAU,CAAC,UAA7B;AAC3B,QAAI,UAAU,CAAC,QAAf,EAAyB,KAAK,QAAL,GAAgB,UAAU,CAAC,QAA3B;AACzB,QAAI,UAAU,CAAC,QAAf,EAAyB,KAAK,QAAL,GAAgB,UAAU,CAAC,QAA3B;AACzB,QAAI,UAAU,CAAC,OAAf,EAAwB,KAAK,OAAL,GAAe,UAAU,CAAC,OAA1B;AACxB,QAAI,UAAU,CAAC,IAAf,EAAqB,KAAK,IAAL,GAAY,UAAU,CAAC,IAAvB;AACtB;;;;sBA0Be,K,EAAK;AACnB,WAAK,YAAL,GAAoB,KAApB;AACD,K;wBAEc;AACb,aAAO,KAAK,YAAZ;AACD;;;sBAES,K,EAAK;AACb,WAAK,MAAL,GAAc,KAAd;AACD,K;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;sBAEY,K,EAAK;AAChB,WAAK,SAAL,GAAiB,KAAjB;AACD,K;wBAEW;AACV,aAAO,KAAK,SAAZ;AACD;;;sBAEe,K,EAAK;AACnB,WAAK,YAAL,GAAoB,KAApB;AACD,K;wBAEc;AACb,aAAO,KAAK,YAAZ;AACD;;;sBAEyB,K,EAAK;AAC7B,WAAK,sBAAL,GAA8B,KAA9B;AACD,K;wBAEwB;AACvB,aAAO,KAAK,sBAAZ;AACD;;;sBAEW,K,EAAK;AACf,WAAK,QAAL,GAAgB,KAAhB;AACD,K;wBAEU;AACT,aAAO,KAAK,QAAZ;AACD;;;sBAEc,K,EAAK;AAClB,WAAK,WAAL,GAAmB,KAAnB;AACD,K;wBAEa;AACZ,aAAO,KAAK,WAAZ;AACD;;;sBAEW,K,EAAK;AACf,WAAK,QAAL,GAAgB,KAAhB;AACD,K;wBAEU;AACT,aAAO,KAAK,QAAZ;AACD;;;sBAEQ,K,EAAK;AACZ,WAAK,KAAL,GAAa,KAAb;AACD,K;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;;;sBAEY,K,EAAK;AAChB,WAAK,SAAL,GAAiB,KAAjB;AACD,K;wBAEW;AACV,aAAO,KAAK,SAAZ;AACD;;;sBAES,K,EAAK;AACb,WAAK,MAAL,GAAc,KAAd;AACD,K;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;0BA9GY,O,EAAO;AAClB,UAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EACE,MAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACF,UAAI,EAAE,OAAO,YAAY,WAArB,CAAJ,EACE,MAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACF,UAAM,MAAM,GAAG,IAAI,WAAJ,EAAf;;AACA,UAAI,OAAO,CAAC,WAAZ,EAAyB;AACvB,QAAA,MAAM,CAAC,WAAP,GAAqB,OAAO,CAAC,WAAR,CAAoB,KAApB,EAArB;AACD;;AACD,MAAA,MAAM,CAAC,WAAP,GAAqB,OAAO,CAAC,WAA7B;AACA,MAAA,MAAM,CAAC,qBAAP,GAA+B,OAAO,CAAC,qBAAvC;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,KAAvB;AACA,MAAA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAA1B;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,KAAvB;AACA,MAAA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAA1B;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAzB;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAA5B;AACA,MAAA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAA1B;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAzB;AACA,MAAA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAtB;AAEA,aAAO,MAAP;AACD;;;;;;AA2FH,eAAe,WAAf","sourceRoot":"","sourcesContent":["class AuthRequest {\r\n    constructor(parameters) {\r\n        if (!parameters)\r\n            return;\r\n        if (parameters.certificate)\r\n            this.certificate = parameters.certificate;\r\n        if (parameters.email)\r\n            this.email = parameters.email;\r\n        if (parameters.password)\r\n            this.password = parameters.password;\r\n        if (parameters.rawUser)\r\n            this.rawUser = parameters.rawUser;\r\n        if (parameters.rawCompany)\r\n            this.rawCompany = parameters.rawCompany;\r\n        if (parameters.employee)\r\n            this.employee = parameters.employee;\r\n        if (parameters.isAuthed)\r\n            this.isAuthed = parameters.isAuthed;\r\n        if (parameters.company)\r\n            this.company = parameters.company;\r\n        if (parameters.user)\r\n            this.user = parameters.user;\r\n    }\r\n    static clone(request) {\r\n        if (request === null || request === undefined)\r\n            throw new Error('Следует передать запрос для авторизации(AuthRequest)');\r\n        if (!(request instanceof AuthRequest))\r\n            throw new Error('Параметр должен быть подклассом AuthRequest');\r\n        const newReq = new AuthRequest();\r\n        if (request.certificate) {\r\n            newReq.certificate = request.certificate.clone();\r\n        }\r\n        newReq.loginString = request.loginString;\r\n        newReq.loginStringSignedData = request.loginStringSignedData;\r\n        newReq.email = request.email;\r\n        newReq.password = request.password;\r\n        newReq.error = request.error;\r\n        newReq.employee = request.employee;\r\n        newReq.rawUser = request.rawUser;\r\n        newReq.rawCompany = request.rawCompany;\r\n        newReq.isAuthed = request.isAuthed;\r\n        newReq.company = request.company;\r\n        newReq.user = request.user;\r\n        return newReq;\r\n    }\r\n    set certificate(value) {\r\n        this._certificate = value;\r\n    }\r\n    get certificate() {\r\n        return this._certificate;\r\n    }\r\n    set email(value) {\r\n        this._email = value;\r\n    }\r\n    get email() {\r\n        return this._email;\r\n    }\r\n    set password(value) {\r\n        this._password = value;\r\n    }\r\n    get password() {\r\n        return this._password;\r\n    }\r\n    set loginString(value) {\r\n        this._loginString = value;\r\n    }\r\n    get loginString() {\r\n        return this._loginString;\r\n    }\r\n    set loginStringSignedData(value) {\r\n        this._loginStringSignedData = value;\r\n    }\r\n    get loginStringSignedData() {\r\n        return this._loginStringSignedData;\r\n    }\r\n    set rawUser(value) {\r\n        this._rawUser = value;\r\n    }\r\n    get rawUser() {\r\n        return this._rawUser;\r\n    }\r\n    set rawCompany(value) {\r\n        this._rawCompany = value;\r\n    }\r\n    get rawCompany() {\r\n        return this._rawCompany;\r\n    }\r\n    set company(value) {\r\n        this._company = value;\r\n    }\r\n    get company() {\r\n        return this._company;\r\n    }\r\n    set user(value) {\r\n        this._user = value;\r\n    }\r\n    get user() {\r\n        return this._user;\r\n    }\r\n    set isAuthed(value) {\r\n        this._isAuthed = value;\r\n    }\r\n    get isAuthed() {\r\n        return this._isAuthed;\r\n    }\r\n    set error(value) {\r\n        this._error = value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default AuthRequest;\r\n//# sourceMappingURL=AuthRequest.js.map"]},"metadata":{},"sourceType":"module"}