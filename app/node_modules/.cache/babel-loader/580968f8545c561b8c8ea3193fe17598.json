{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport SignHandlerBase from '../SignHandlerBase';\nimport SignRequest from '../../SignRequest';\nimport Core from '../../../Core';\n\nvar CertificateHandler = /*#__PURE__*/function (_SignHandlerBase) {\n  _inherits(CertificateHandler, _SignHandlerBase);\n\n  var _super = _createSuper(CertificateHandler);\n\n  function CertificateHandler() {\n    _classCallCheck(this, CertificateHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CertificateHandler, [{\n    key: \"sign\",\n    value: function sign(request) {\n      _get(_getPrototypeOf(CertificateHandler.prototype), \"sign\", this).call(this, request);\n\n      var certificate = Core.certificate;\n\n      if (certificate && certificate.thumbprint) {\n        var signRequest = SignRequest.clone(request);\n        signRequest.certificate = certificate;\n        return this.doNextHandler(signRequest);\n      } else {\n        var errorRequest = SignRequest.clone(request);\n        errorRequest.error = _get(_getPrototypeOf(CertificateHandler.prototype), \"createSignError\", this).call(this, \"\\u041D\\u0435 \\u0445\\u0432\\u0430\\u0442\\u0430\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E \\u0441\\u0435\\u0440\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u0435\");\n        return this.doNextHandler(errorRequest);\n      }\n    }\n  }]);\n\n  return CertificateHandler;\n}(SignHandlerBase);\n\nexport default CertificateHandler;","map":{"version":3,"sources":["../../../../../src/application/sign/handlers/sign/CertificateHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,WAAP,MAAwB,mBAAxB;AACA,OAAO,IAAP,MAAiB,eAAjB;;IAEM,kB;;;;;;;;;;;;;yBACC,O,EAAO;AACV,mFAAW,OAAX;;AACA,UAAM,WAAW,GAAG,IAAI,CAAC,WAAzB;;AACA,UAAI,WAAW,IAAI,WAAW,CAAC,UAA/B,EAA2C;AACzC,YAAM,WAAW,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAApB;AACA,QAAA,WAAW,CAAC,WAAZ,GAA0B,WAA1B;AACA,eAAO,KAAK,aAAL,CAAmB,WAAnB,CAAP;AACD,OAJD,MAIO;AACL,YAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAArB;AACA,QAAA,YAAY,CAAC,KAAb;AACA,eAAO,KAAK,aAAL,CAAmB,YAAnB,CAAP;AACD;AACF;;;;EAb8B,e;;AAgBjC,eAAe,kBAAf","sourceRoot":"","sourcesContent":["import SignHandlerBase from '../SignHandlerBase';\r\nimport SignRequest from '../../SignRequest';\r\nimport Core from '../../../Core';\r\nclass CertificateHandler extends SignHandlerBase {\r\n    sign(request) {\r\n        super.sign(request);\r\n        const certificate = Core.certificate;\r\n        if (certificate && certificate.thumbprint) {\r\n            const signRequest = SignRequest.clone(request);\r\n            signRequest.certificate = certificate;\r\n            return this.doNextHandler(signRequest);\r\n        }\r\n        else {\r\n            const errorRequest = SignRequest.clone(request);\r\n            errorRequest.error = super.createSignError(`Не хватает данных о сертификате`);\r\n            return this.doNextHandler(errorRequest);\r\n        }\r\n    }\r\n}\r\nexport default CertificateHandler;\r\n//# sourceMappingURL=CertificateHandler.js.map"]},"metadata":{},"sourceType":"module"}