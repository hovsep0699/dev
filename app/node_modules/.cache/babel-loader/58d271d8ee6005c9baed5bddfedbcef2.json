{"ast":null,"code":"import isPlainObject from 'is-plain-object';\nimport op from 'object-path';\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isEmpty(value) {\n  if (isNumber(value)) {\n    return false;\n  }\n\n  if (!value) {\n    return true;\n  }\n\n  if (isArray(value) && value.length === 0) {\n    return true;\n  } else if (!isString(value)) {\n    for (var i in value) {\n      if (_hasOwnProperty.call(value, i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string';\n}\n\nfunction isArray(obj) {\n  return Array.isArray(obj);\n}\n\nfunction assignToObj(target, source) {\n  for (var key in source) {\n    if (_hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction getKey(key) {\n  var intKey = parseInt(key);\n\n  if (intKey.toString() === key) {\n    return intKey;\n  }\n\n  return key;\n}\n\nfunction clone(obj, createIfEmpty, assumeArray) {\n  if (obj == null) {\n    if (createIfEmpty) {\n      if (assumeArray) {\n        return [];\n      }\n\n      return {};\n    }\n\n    return obj;\n  } else if (isArray(obj)) {\n    return obj.slice();\n  }\n\n  return assignToObj({}, obj);\n}\n\nfunction _deepMerge(dest, src) {\n  if (dest !== src && isPlainObject(dest) && isPlainObject(src)) {\n    var merged = {};\n\n    for (var key in dest) {\n      if (_hasOwnProperty.call(dest, key)) {\n        if (_hasOwnProperty.call(src, key)) {\n          merged[key] = _deepMerge(dest[key], src[key]);\n        } else {\n          merged[key] = dest[key];\n        }\n      }\n    }\n\n    for (key in src) {\n      if (_hasOwnProperty.call(src, key)) {\n        merged[key] = _deepMerge(dest[key], src[key]);\n      }\n    }\n\n    return merged;\n  }\n\n  return src;\n}\n\nfunction _changeImmutable(dest, src, path, changeCallback) {\n  if (isNumber(path)) {\n    path = [path];\n  }\n\n  if (isEmpty(path)) {\n    return src;\n  }\n\n  if (isString(path)) {\n    return _changeImmutable(dest, src, path.split('.').map(getKey), changeCallback);\n  }\n\n  var currentPath = path[0];\n\n  if (!dest || dest === src) {\n    dest = clone(src, true, isNumber(currentPath));\n  }\n\n  if (path.length === 1) {\n    return changeCallback(dest, currentPath);\n  }\n\n  if (src != null) {\n    src = src[currentPath];\n  }\n\n  dest[currentPath] = _changeImmutable(dest[currentPath], src, path.slice(1), changeCallback);\n  return dest;\n}\n\nvar api = {};\n\napi.set = function set(dest, src, path, value) {\n  if (isEmpty(path)) {\n    return value;\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    clonedObj[finalPath] = value;\n    return clonedObj;\n  });\n};\n\napi.update = function update(dest, src, path, updater) {\n  if (isEmpty(path)) {\n    return updater(clone(src));\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    clonedObj[finalPath] = updater(clonedObj[finalPath]);\n    return clonedObj;\n  });\n};\n\napi.push = function push(dest, src, path\n/*, values */\n) {\n  var values = Array.prototype.slice.call(arguments, 3);\n\n  if (isEmpty(path)) {\n    if (!isArray(src)) {\n      return values;\n    } else {\n      return src.concat(values);\n    }\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    if (!isArray(clonedObj[finalPath])) {\n      clonedObj[finalPath] = values;\n    } else {\n      clonedObj[finalPath] = clonedObj[finalPath].concat(values);\n    }\n\n    return clonedObj;\n  });\n};\n\napi.insert = function insert(dest, src, path, value, at) {\n  at = ~~at;\n\n  if (isEmpty(path)) {\n    if (!isArray(src)) {\n      return [value];\n    }\n\n    var first = src.slice(0, at);\n    first.push(value);\n    return first.concat(src.slice(at));\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    var arr = clonedObj[finalPath];\n\n    if (!isArray(arr)) {\n      if (arr != null && typeof arr !== 'undefined') {\n        throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path);\n      }\n\n      arr = [];\n    }\n\n    var first = arr.slice(0, at);\n    first.push(value);\n    clonedObj[finalPath] = first.concat(arr.slice(at));\n    return clonedObj;\n  });\n};\n\napi.del = function del(dest, src, path) {\n  if (isEmpty(path)) {\n    return undefined;\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    if (Array.isArray(clonedObj)) {\n      if (clonedObj[finalPath] !== undefined) {\n        clonedObj.splice(finalPath, 1);\n      }\n    } else {\n      if (_hasOwnProperty.call(clonedObj, finalPath)) {\n        delete clonedObj[finalPath];\n      }\n    }\n\n    return clonedObj;\n  });\n};\n\napi.assign = function assign(dest, src, path, source) {\n  if (isEmpty(path)) {\n    if (isEmpty(source)) {\n      return src;\n    }\n\n    return assignToObj(clone(src), source);\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    source = Object(source);\n    var target = clone(clonedObj[finalPath], true);\n    assignToObj(target, source);\n    clonedObj[finalPath] = target;\n    return clonedObj;\n  });\n};\n\napi.merge = function assign(dest, src, path, source) {\n  if (isEmpty(path)) {\n    if (isEmpty(source)) {\n      return src;\n    }\n\n    return _deepMerge(src, source);\n  }\n\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    source = Object(source);\n    clonedObj[finalPath] = _deepMerge(clonedObj[finalPath], source);\n    return clonedObj;\n  });\n};\n\nfunction wrap(src) {\n  var dest = src;\n  var committed = false;\n  var transaction = Object.keys(api).reduce(function (proxy, prop) {\n    /* istanbul ignore else */\n    if (typeof api[prop] === 'function') {\n      proxy[prop] = function () {\n        var args = [dest, src].concat(Array.prototype.slice.call(arguments));\n\n        if (committed) {\n          throw new Error('Cannot call ' + prop + ' after `value`');\n        }\n\n        dest = api[prop].apply(null, args);\n        return transaction;\n      };\n    }\n\n    return proxy;\n  }, {});\n\n  transaction.value = function () {\n    committed = true;\n    return dest;\n  };\n\n  return transaction;\n}\n\nvar set = api.set.bind(null, null);\nvar update = api.update.bind(null, null);\nvar push = api.push.bind(null, null);\nvar insert = api.insert.bind(null, null);\nvar del = api.del.bind(null, null);\nvar assign = api.assign.bind(null, null);\nvar merge = api.merge.bind(null, null);\nvar get = op.get;\nexport { assign, del, get, insert, merge, push, set, update, wrap };","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/node_modules/object-path-immutable/esm/object-path-immutable.js"],"names":["isPlainObject","op","_hasOwnProperty","Object","prototype","hasOwnProperty","isEmpty","value","isNumber","isArray","length","isString","i","call","obj","Array","assignToObj","target","source","key","getKey","intKey","parseInt","toString","clone","createIfEmpty","assumeArray","slice","_deepMerge","dest","src","merged","_changeImmutable","path","changeCallback","split","map","currentPath","api","set","clonedObj","finalPath","update","updater","push","values","arguments","concat","insert","at","first","arr","Error","del","undefined","splice","assign","merge","wrap","committed","transaction","keys","reduce","proxy","prop","args","apply","bind","get"],"mappings":"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","sourcesContent":["import isPlainObject from 'is-plain-object';\nimport op from 'object-path';\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isEmpty (value) {\n  if (isNumber(value)) {\n    return false\n  }\n  if (!value) {\n    return true\n  }\n  if (isArray(value) && value.length === 0) {\n    return true\n  } else if (!isString(value)) {\n    for (var i in value) {\n      if (_hasOwnProperty.call(value, i)) {\n        return false\n      }\n    }\n    return true\n  }\n  return false\n}\n\nfunction isNumber (value) {\n  return typeof value === 'number'\n}\n\nfunction isString (obj) {\n  return typeof obj === 'string'\n}\n\nfunction isArray (obj) {\n  return Array.isArray(obj)\n}\n\nfunction assignToObj (target, source) {\n  for (var key in source) {\n    if (_hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n\nfunction getKey (key) {\n  var intKey = parseInt(key);\n  if (intKey.toString() === key) {\n    return intKey\n  }\n  return key\n}\n\nfunction clone (obj, createIfEmpty, assumeArray) {\n  if (obj == null) {\n    if (createIfEmpty) {\n      if (assumeArray) {\n        return []\n      }\n\n      return {}\n    }\n\n    return obj\n  } else if (isArray(obj)) {\n    return obj.slice()\n  }\n\n  return assignToObj({}, obj)\n}\n\nfunction _deepMerge (dest, src) {\n  if (dest !== src && isPlainObject(dest) && isPlainObject(src)) {\n    var merged = {};\n    for (var key in dest) {\n      if (_hasOwnProperty.call(dest, key)) {\n        if (_hasOwnProperty.call(src, key)) {\n          merged[key] = _deepMerge(dest[key], src[key]);\n        } else {\n          merged[key] = dest[key];\n        }\n      }\n    }\n\n    for (key in src) {\n      if (_hasOwnProperty.call(src, key)) {\n        merged[key] = _deepMerge(dest[key], src[key]);\n      }\n    }\n    return merged\n  }\n  return src\n}\n\nfunction _changeImmutable (dest, src, path, changeCallback) {\n  if (isNumber(path)) {\n    path = [path];\n  }\n  if (isEmpty(path)) {\n    return src\n  }\n  if (isString(path)) {\n    return _changeImmutable(dest, src, path.split('.').map(getKey), changeCallback)\n  }\n  var currentPath = path[0];\n\n  if (!dest || dest === src) {\n    dest = clone(src, true, isNumber(currentPath));\n  }\n\n  if (path.length === 1) {\n    return changeCallback(dest, currentPath)\n  }\n\n  if (src != null) {\n    src = src[currentPath];\n  }\n\n  dest[currentPath] = _changeImmutable(dest[currentPath], src, path.slice(1), changeCallback);\n\n  return dest\n}\n\nvar api = {};\napi.set = function set (dest, src, path, value) {\n  if (isEmpty(path)) {\n    return value\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    clonedObj[finalPath] = value;\n    return clonedObj\n  })\n};\n\napi.update = function update (dest, src, path, updater) {\n  if (isEmpty(path)) {\n    return updater(clone(src))\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    clonedObj[finalPath] = updater(clonedObj[finalPath]);\n    return clonedObj\n  })\n};\n\napi.push = function push (dest, src, path /*, values */) {\n  var values = Array.prototype.slice.call(arguments, 3);\n  if (isEmpty(path)) {\n    if (!isArray(src)) {\n      return values\n    } else {\n      return src.concat(values)\n    }\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    if (!isArray(clonedObj[finalPath])) {\n      clonedObj[finalPath] = values;\n    } else {\n      clonedObj[finalPath] = clonedObj[finalPath].concat(values);\n    }\n    return clonedObj\n  })\n};\n\napi.insert = function insert (dest, src, path, value, at) {\n  at = ~~at;\n  if (isEmpty(path)) {\n    if (!isArray(src)) {\n      return [value]\n    }\n\n    var first = src.slice(0, at);\n    first.push(value);\n    return first.concat(src.slice(at))\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    var arr = clonedObj[finalPath];\n    if (!isArray(arr)) {\n      if (arr != null && typeof arr !== 'undefined') {\n        throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path)\n      }\n      arr = [];\n    }\n\n    var first = arr.slice(0, at);\n    first.push(value);\n    clonedObj[finalPath] = first.concat(arr.slice(at));\n    return clonedObj\n  })\n};\n\napi.del = function del (dest, src, path) {\n  if (isEmpty(path)) {\n    return undefined\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    if (Array.isArray(clonedObj)) {\n      if (clonedObj[finalPath] !== undefined) {\n        clonedObj.splice(finalPath, 1);\n      }\n    } else {\n      if (_hasOwnProperty.call(clonedObj, finalPath)) {\n        delete clonedObj[finalPath];\n      }\n    }\n    return clonedObj\n  })\n};\n\napi.assign = function assign (dest, src, path, source) {\n  if (isEmpty(path)) {\n    if (isEmpty(source)) {\n      return src\n    }\n    return assignToObj(clone(src), source)\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    source = Object(source);\n    var target = clone(clonedObj[finalPath], true);\n    assignToObj(target, source);\n\n    clonedObj[finalPath] = target;\n    return clonedObj\n  })\n};\n\napi.merge = function assign (dest, src, path, source) {\n  if (isEmpty(path)) {\n    if (isEmpty(source)) {\n      return src\n    }\n    return _deepMerge(src, source)\n  }\n  return _changeImmutable(dest, src, path, function (clonedObj, finalPath) {\n    source = Object(source);\n    clonedObj[finalPath] = _deepMerge(clonedObj[finalPath], source);\n    return clonedObj\n  })\n};\n\nfunction wrap (src) {\n  var dest = src;\n  var committed = false;\n\n  var transaction = Object.keys(api).reduce(function (proxy, prop) {\n    /* istanbul ignore else */\n    if (typeof api[prop] === 'function') {\n      proxy[prop] = function () {\n        var args = [dest, src].concat(Array.prototype.slice.call(arguments));\n\n        if (committed) {\n          throw new Error('Cannot call ' + prop + ' after `value`')\n        }\n\n        dest = api[prop].apply(null, args);\n\n        return transaction\n      };\n    }\n\n    return proxy\n  }, {});\n\n  transaction.value = function () {\n    committed = true;\n    return dest\n  };\n\n  return transaction\n}\n\nvar set = api.set.bind(null, null);\nvar update = api.update.bind(null, null);\nvar push = api.push.bind(null, null);\nvar insert = api.insert.bind(null, null);\nvar del = api.del.bind(null, null);\nvar assign = api.assign.bind(null, null);\nvar merge = api.merge.bind(null, null);\nvar get = op.get;\n\nexport { assign, del, get, insert, merge, push, set, update, wrap };\n"]},"metadata":{},"sourceType":"module"}