{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{isObject}from'./ObjectUtil';export function transformerErrors(data){var validateMessages=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var list=parseError(data,validateMessages);return list.filter(function(value,index,array){return array.findIndex(function(arr){return arr.message===value.message;})===index;});}function parseError(errors){var messages=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var paths=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var list=[];if(isObject(errors)){Object.entries(errors).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],error=_ref2[1];var dataMessage=(messages===null||messages===void 0?void 0:messages[key])||{};var fieldName=dataMessage===null||dataMessage===void 0?void 0:dataMessage.name;if(Array.isArray(error.errors)){error.errors.forEach(function(str){var message=fieldName?\"\".concat(fieldName,\": \").concat(str):\"\".concat(key,\": \").concat(str);list.push({name:fieldName,code:key,error:str,paths:[].concat(_toConsumableArray(paths),[key]),message:message});});}else{list.push.apply(list,_toConsumableArray(parseError(error,dataMessage===null||dataMessage===void 0?void 0:dataMessage.children,[].concat(_toConsumableArray(paths),[key]))));}});return list.filter(Boolean);}else if(Array.isArray(errors)){errors.forEach(function(error){list.push.apply(list,_toConsumableArray(parseError(error,messages,paths)));});}return list;}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/utils/errors.ts"],"names":["isObject","transformerErrors","data","validateMessages","list","parseError","filter","value","index","array","findIndex","arr","message","errors","messages","paths","Object","entries","forEach","key","error","dataMessage","fieldName","name","Array","isArray","str","push","code","children","Boolean"],"mappings":"8VAAA,OAASA,QAAT,KAAyB,cAAzB,CAiBA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,IAA3B,CAAuF,IAAjDC,CAAAA,gBAAiD,2DAAb,EAAa,CAC5F,GAAMC,CAAAA,IAAI,CAAGC,UAAU,CAACH,IAAD,CAAOC,gBAAP,CAAvB,CACA,MAAOC,CAAAA,IAAI,CAACE,MAAL,CACL,SAACC,KAAD,CAAQC,KAAR,CAAeC,KAAf,QAAyBA,CAAAA,KAAK,CAACC,SAAN,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,OAAJ,GAAgBL,KAAK,CAACK,OAA1B,EAAnB,IAA0DJ,KAAnF,EADK,CAAP,CAGD,CAED,QAASH,CAAAA,UAAT,CAAoBQ,MAApB,CAA+E,IAA9CC,CAAAA,QAA8C,2DAA9B,EAA8B,IAA1BC,CAAAA,KAA0B,2DAAb,EAAa,CAC7E,GAAMX,CAAAA,IAAa,CAAG,EAAtB,CAEA,GAAIJ,QAAQ,CAACa,MAAD,CAAZ,CAAsB,CACpBG,MAAM,CAACC,OAAP,CAAeJ,MAAf,EAAuBK,OAAvB,CAA+B,cAAuB,kCAArBC,GAAqB,UAAhBC,KAAgB,UACpD,GAAMC,CAAAA,WAAW,CAAG,CAAAP,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAGK,GAAH,CAAR,GAAmB,EAAvC,CACA,GAAMG,CAAAA,SAAS,CAAGD,WAAH,SAAGA,WAAH,iBAAGA,WAAW,CAAEE,IAA/B,CAEA,GAAIC,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACP,MAApB,CAAJ,CAAiC,CAC/BO,KAAK,CAACP,MAAN,CAAaK,OAAb,CAAqB,SAACQ,GAAD,CAAiB,CACpC,GAAMd,CAAAA,OAAO,CAAGU,SAAS,WAAMA,SAAN,cAAoBI,GAApB,YAA+BP,GAA/B,cAAuCO,GAAvC,CAAzB,CACAtB,IAAI,CAACuB,IAAL,CAAU,CACRJ,IAAI,CAAED,SADE,CAERM,IAAI,CAAET,GAFE,CAGRC,KAAK,CAAEM,GAHC,CAIRX,KAAK,8BAAMA,KAAN,GAAaI,GAAb,EAJG,CAKRP,OAAO,CAAPA,OALQ,CAAV,EAOD,CATD,EAUD,CAXD,IAWO,CACLR,IAAI,CAACuB,IAAL,OAAAvB,IAAI,oBAASC,UAAU,CAACe,KAAD,CAAQC,WAAR,SAAQA,WAAR,iBAAQA,WAAW,CAAEQ,QAArB,8BAAmCd,KAAnC,GAA0CI,GAA1C,GAAnB,EAAJ,CACD,CACF,CAlBD,EAoBA,MAAOf,CAAAA,IAAI,CAACE,MAAL,CAAYwB,OAAZ,CAAP,CACD,CAtBD,IAsBO,IAAIN,KAAK,CAACC,OAAN,CAAcZ,MAAd,CAAJ,CAA2B,CAChCA,MAAM,CAACK,OAAP,CAAe,SAAAE,KAAK,CAAI,CACtBhB,IAAI,CAACuB,IAAL,OAAAvB,IAAI,oBAASC,UAAU,CAACe,KAAD,CAAQN,QAAR,CAAkBC,KAAlB,CAAnB,EAAJ,CACD,CAFD,EAGD,CAED,MAAOX,CAAAA,IAAP,CACD","sourcesContent":["import { isObject } from './ObjectUtil';\r\n\r\nexport type Error = {\r\n  name?: string;\r\n  code: string;\r\n  paths: string[];\r\n  error: string;\r\n  message: string;\r\n};\r\n\r\nexport type ValidateMessage = {\r\n  [key: string]: {\r\n    name?: string;\r\n    children?: ValidateMessage;\r\n  };\r\n};\r\n\r\nexport function transformerErrors(data: any, validateMessages: ValidateMessage = {}): Error[] {\r\n  const list = parseError(data, validateMessages);\r\n  return list.filter(\r\n    (value, index, array) => array.findIndex(arr => arr.message === value.message) === index\r\n  );\r\n}\r\n\r\nfunction parseError(errors: any, messages: any = {}, paths: any = []): Error[] {\r\n  const list: Error[] = [];\r\n\r\n  if (isObject(errors)) {\r\n    Object.entries(errors).forEach(([key, error]: any) => {\r\n      const dataMessage = messages?.[key] || {};\r\n      const fieldName = dataMessage?.name;\r\n\r\n      if (Array.isArray(error.errors)) {\r\n        error.errors.forEach((str: string) => {\r\n          const message = fieldName ? `${fieldName}: ${str}` : `${key}: ${str}`;\r\n          list.push({\r\n            name: fieldName,\r\n            code: key,\r\n            error: str,\r\n            paths: [...paths, key],\r\n            message\r\n          });\r\n        });\r\n      } else {\r\n        list.push(...parseError(error, dataMessage?.children, [...paths, key]));\r\n      }\r\n    });\r\n\r\n    return list.filter(Boolean);\r\n  } else if (Array.isArray(errors)) {\r\n    errors.forEach(error => {\r\n      list.push(...parseError(error, messages, paths));\r\n    });\r\n  }\r\n\r\n  return list;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}