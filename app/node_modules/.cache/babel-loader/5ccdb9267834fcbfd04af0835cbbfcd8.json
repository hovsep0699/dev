{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SignRequest = /*#__PURE__*/function () {\n  function SignRequest(parameters) {\n    _classCallCheck(this, SignRequest);\n\n    this.isAutoMode = true;\n    this._signedDocumentIds = new Set();\n    if (!parameters) return;\n    if (parameters.hasOwnProperty('isAutoMode')) this.isAutoMode = parameters.isAutoMode;\n    if (parameters.certificate) this.certificate = parameters.certificate;\n    if (parameters.hasOwnProperty('isGrantedToSign')) this.isGrantedToSign = parameters.isGrantedToSign;\n\n    if (parameters.documents) {\n      this.documents = parameters.documents;\n      this._total = parameters.documents.length;\n      this._counter = 0;\n      this._signFailures = [];\n    }\n\n    if (parameters.documentToSign) {\n      this.documentToSign = parameters.documentToSign;\n\n      if (this.documentToSign.status === 'signed') {\n        this.addSignedDocumentId(this.documentToSign.packageId);\n      }\n    }\n  }\n\n  _createClass(SignRequest, [{\n    key: \"addSignedDocumentId\",\n    value: function addSignedDocumentId(packageId) {\n      this._signedDocumentIds.add(packageId);\n    }\n  }, {\n    key: \"incrementCounter\",\n    value: function incrementCounter() {\n      this._counter = this.counter + 1;\n    }\n  }, {\n    key: \"addSignFailure\",\n    value: function addSignFailure(failure) {\n      this._signFailures.push(failure);\n    }\n  }, {\n    key: \"addContent\",\n    value: function addContent(value) {\n      this._documentToSign.content = value;\n    }\n  }, {\n    key: \"addFileName\",\n    value: function addFileName(value) {\n      this._documentToSign.fileName = value;\n    }\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(value) {\n      this._documentToSign.signature = value;\n    }\n  }, {\n    key: \"certificate\",\n    set: function set(value) {\n      this._certificate = value;\n    },\n    get: function get() {\n      return this._certificate;\n    }\n  }, {\n    key: \"isAutoMode\",\n    set: function set(value) {\n      this._isAutoMode = value;\n    },\n    get: function get() {\n      return this._isAutoMode;\n    }\n  }, {\n    key: \"isGrantedToSign\",\n    set: function set(value) {\n      this._isGrantedToSign = value;\n    },\n    get: function get() {\n      return this._isGrantedToSign;\n    }\n  }, {\n    key: \"documents\",\n    set: function set(documents) {\n      this._documents = documents;\n      this._total = (documents === null || documents === void 0 ? void 0 : documents.length) || 0;\n      this._counter = 0;\n      this._signFailures = [];\n    },\n    get: function get() {\n      return this._documents;\n    }\n  }, {\n    key: \"documentToSign\",\n    get: function get() {\n      return this._documentToSign;\n    },\n    set: function set(value) {\n      var _a;\n\n      this._documentToSign = value;\n\n      if (((_a = this._documentToSign) === null || _a === void 0 ? void 0 : _a.status) === 'signed') {\n        this.addSignedDocumentId(this.documentToSign.packageId);\n      }\n    }\n  }, {\n    key: \"signedDocumentIds\",\n    get: function get() {\n      return this._signedDocumentIds;\n    }\n  }, {\n    key: \"total\",\n    get: function get() {\n      return this._total;\n    }\n  }, {\n    key: \"counter\",\n    get: function get() {\n      return this._counter;\n    }\n  }, {\n    key: \"signFailures\",\n    get: function get() {\n      return this._signFailures;\n    }\n  }, {\n    key: \"error\",\n    set: function set(value) {\n      this._error = value;\n    },\n    get: function get() {\n      return this._error;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(request) {\n      if (request === null || request === undefined) throw new Error('Следует передать запрос для авторизации(SignRequest)');\n      if (!(request instanceof SignRequest)) throw new Error('Параметр должен быть подклассом SignRequest');\n      var newReq = new SignRequest();\n\n      if (request.certificate) {\n        newReq.certificate = request.certificate.clone();\n      }\n\n      newReq.isAutoMode = request.isAutoMode;\n      newReq.isGrantedToSign = request.isGrantedToSign;\n      newReq.documents = request.documents;\n      newReq.documentToSign = request.documentToSign;\n      newReq._signedDocumentIds = request.signedDocumentIds;\n      newReq._total = request.total;\n      newReq._counter = request.counter;\n      newReq._signFailures = request.signFailures;\n      newReq.error = request.error;\n      return newReq;\n    }\n  }]);\n\n  return SignRequest;\n}();\n\nexport default SignRequest;","map":{"version":3,"sources":["../../../src/application/sign/SignRequest.js"],"names":[],"mappings":";;;IAAM,W;AACJ,uBAAY,UAAZ,EAAsB;AAAA;;AACpB,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,kBAAL,GAA0B,IAAI,GAAJ,EAA1B;AACA,QAAI,CAAC,UAAL,EAAiB;AACjB,QAAI,UAAU,CAAC,cAAX,CAA0B,YAA1B,CAAJ,EAA6C,KAAK,UAAL,GAAkB,UAAU,CAAC,UAA7B;AAC7C,QAAI,UAAU,CAAC,WAAf,EAA4B,KAAK,WAAL,GAAmB,UAAU,CAAC,WAA9B;AAC5B,QAAI,UAAU,CAAC,cAAX,CAA0B,iBAA1B,CAAJ,EACE,KAAK,eAAL,GAAuB,UAAU,CAAC,eAAlC;;AACF,QAAI,UAAU,CAAC,SAAf,EAA0B;AACxB,WAAK,SAAL,GAAiB,UAAU,CAAC,SAA5B;AACA,WAAK,MAAL,GAAc,UAAU,CAAC,SAAX,CAAqB,MAAnC;AACA,WAAK,QAAL,GAAgB,CAAhB;AACA,WAAK,aAAL,GAAqB,EAArB;AACD;;AACD,QAAI,UAAU,CAAC,cAAf,EAA+B;AAC7B,WAAK,cAAL,GAAsB,UAAU,CAAC,cAAjC;;AACA,UAAI,KAAK,cAAL,CAAoB,MAApB,KAA+B,QAAnC,EAA6C;AAC3C,aAAK,mBAAL,CAAyB,KAAK,cAAL,CAAoB,SAA7C;AACD;AACF;AACF;;;;wCA0EmB,S,EAAS;AAC3B,WAAK,kBAAL,CAAwB,GAAxB,CAA4B,SAA5B;AACD;;;uCAUe;AACd,WAAK,QAAL,GAAgB,KAAK,OAAL,GAAe,CAA/B;AACD;;;mCAEc,O,EAAO;AACpB,WAAK,aAAL,CAAmB,IAAnB,CAAwB,OAAxB;AACD;;;+BAEU,K,EAAK;AACd,WAAK,eAAL,CAAqB,OAArB,GAA+B,KAA/B;AACD;;;gCAEW,K,EAAK;AACf,WAAK,eAAL,CAAqB,QAArB,GAAgC,KAAhC;AACD;;;iCAEY,K,EAAK;AAChB,WAAK,eAAL,CAAqB,SAArB,GAAiC,KAAjC;AACD;;;sBAhFe,K,EAAK;AACnB,WAAK,YAAL,GAAoB,KAApB;AACD,K;wBAEc;AACb,aAAO,KAAK,YAAZ;AACD;;;sBAEc,K,EAAK;AAClB,WAAK,WAAL,GAAmB,KAAnB;AACD,K;wBAEa;AACZ,aAAO,KAAK,WAAZ;AACD;;;sBAEmB,K,EAAK;AACvB,WAAK,gBAAL,GAAwB,KAAxB;AACD,K;wBAEkB;AACjB,aAAO,KAAK,gBAAZ;AACD;;;sBAEa,S,EAAS;AACrB,WAAK,UAAL,GAAkB,SAAlB;AACA,WAAK,MAAL,GAAc,CAAA,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,MAAX,KAAqB,CAAnC;AACA,WAAK,QAAL,GAAgB,CAAhB;AACA,WAAK,aAAL,GAAqB,EAArB;AACD,K;wBAEY;AACX,aAAO,KAAK,UAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAK,eAAZ;AACD,K;sBAEkB,K,EAAK;;;AACtB,WAAK,eAAL,GAAuB,KAAvB;;AACA,UAAI,CAAA,CAAA,EAAA,GAAA,KAAK,eAAL,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,MAAtB,MAAiC,QAArC,EAA+C;AAC7C,aAAK,mBAAL,CAAyB,KAAK,cAAL,CAAoB,SAA7C;AACD;AACF;;;wBAEoB;AACnB,aAAO,KAAK,kBAAZ;AACD;;;wBAMQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEU;AACT,aAAO,KAAK,QAAZ;AACD;;;wBAsBe;AACd,aAAO,KAAK,aAAZ;AACD;;;sBAES,K,EAAK;AACb,WAAK,MAAL,GAAc,KAAd;AACD,K;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;0BAlHY,O,EAAO;AAClB,UAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EACE,MAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACF,UAAI,EAAE,OAAO,YAAY,WAArB,CAAJ,EACE,MAAM,IAAI,KAAJ,CAAU,6CAAV,CAAN;AACF,UAAM,MAAM,GAAG,IAAI,WAAJ,EAAf;;AACA,UAAI,OAAO,CAAC,WAAZ,EAAyB;AACvB,QAAA,MAAM,CAAC,WAAP,GAAqB,OAAO,CAAC,WAAR,CAAoB,KAApB,EAArB;AACD;;AACD,MAAA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAA5B;AACA,MAAA,MAAM,CAAC,eAAP,GAAyB,OAAO,CAAC,eAAjC;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,OAAO,CAAC,SAA3B;AACA,MAAA,MAAM,CAAC,cAAP,GAAwB,OAAO,CAAC,cAAhC;AACA,MAAA,MAAM,CAAC,kBAAP,GAA4B,OAAO,CAAC,iBAApC;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,KAAxB;AACA,MAAA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,OAA1B;AACA,MAAA,MAAM,CAAC,aAAP,GAAuB,OAAO,CAAC,YAA/B;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,KAAvB;AAEA,aAAO,MAAP;AACD;;;;;;AAiGH,eAAe,WAAf","sourceRoot":"","sourcesContent":["class SignRequest {\r\n    constructor(parameters) {\r\n        this.isAutoMode = true;\r\n        this._signedDocumentIds = new Set();\r\n        if (!parameters)\r\n            return;\r\n        if (parameters.hasOwnProperty('isAutoMode'))\r\n            this.isAutoMode = parameters.isAutoMode;\r\n        if (parameters.certificate)\r\n            this.certificate = parameters.certificate;\r\n        if (parameters.hasOwnProperty('isGrantedToSign'))\r\n            this.isGrantedToSign = parameters.isGrantedToSign;\r\n        if (parameters.documents) {\r\n            this.documents = parameters.documents;\r\n            this._total = parameters.documents.length;\r\n            this._counter = 0;\r\n            this._signFailures = [];\r\n        }\r\n        if (parameters.documentToSign) {\r\n            this.documentToSign = parameters.documentToSign;\r\n            if (this.documentToSign.status === 'signed') {\r\n                this.addSignedDocumentId(this.documentToSign.packageId);\r\n            }\r\n        }\r\n    }\r\n    static clone(request) {\r\n        if (request === null || request === undefined)\r\n            throw new Error('Следует передать запрос для авторизации(SignRequest)');\r\n        if (!(request instanceof SignRequest))\r\n            throw new Error('Параметр должен быть подклассом SignRequest');\r\n        const newReq = new SignRequest();\r\n        if (request.certificate) {\r\n            newReq.certificate = request.certificate.clone();\r\n        }\r\n        newReq.isAutoMode = request.isAutoMode;\r\n        newReq.isGrantedToSign = request.isGrantedToSign;\r\n        newReq.documents = request.documents;\r\n        newReq.documentToSign = request.documentToSign;\r\n        newReq._signedDocumentIds = request.signedDocumentIds;\r\n        newReq._total = request.total;\r\n        newReq._counter = request.counter;\r\n        newReq._signFailures = request.signFailures;\r\n        newReq.error = request.error;\r\n        return newReq;\r\n    }\r\n    set certificate(value) {\r\n        this._certificate = value;\r\n    }\r\n    get certificate() {\r\n        return this._certificate;\r\n    }\r\n    set isAutoMode(value) {\r\n        this._isAutoMode = value;\r\n    }\r\n    get isAutoMode() {\r\n        return this._isAutoMode;\r\n    }\r\n    set isGrantedToSign(value) {\r\n        this._isGrantedToSign = value;\r\n    }\r\n    get isGrantedToSign() {\r\n        return this._isGrantedToSign;\r\n    }\r\n    set documents(documents) {\r\n        this._documents = documents;\r\n        this._total = (documents === null || documents === void 0 ? void 0 : documents.length) || 0;\r\n        this._counter = 0;\r\n        this._signFailures = [];\r\n    }\r\n    get documents() {\r\n        return this._documents;\r\n    }\r\n    get documentToSign() {\r\n        return this._documentToSign;\r\n    }\r\n    set documentToSign(value) {\r\n        var _a;\r\n        this._documentToSign = value;\r\n        if (((_a = this._documentToSign) === null || _a === void 0 ? void 0 : _a.status) === 'signed') {\r\n            this.addSignedDocumentId(this.documentToSign.packageId);\r\n        }\r\n    }\r\n    get signedDocumentIds() {\r\n        return this._signedDocumentIds;\r\n    }\r\n    addSignedDocumentId(packageId) {\r\n        this._signedDocumentIds.add(packageId);\r\n    }\r\n    get total() {\r\n        return this._total;\r\n    }\r\n    get counter() {\r\n        return this._counter;\r\n    }\r\n    incrementCounter() {\r\n        this._counter = this.counter + 1;\r\n    }\r\n    addSignFailure(failure) {\r\n        this._signFailures.push(failure);\r\n    }\r\n    addContent(value) {\r\n        this._documentToSign.content = value;\r\n    }\r\n    addFileName(value) {\r\n        this._documentToSign.fileName = value;\r\n    }\r\n    addSignature(value) {\r\n        this._documentToSign.signature = value;\r\n    }\r\n    get signFailures() {\r\n        return this._signFailures;\r\n    }\r\n    set error(value) {\r\n        this._error = value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default SignRequest;\r\n//# sourceMappingURL=SignRequest.js.map"]},"metadata":{},"sourceType":"module"}