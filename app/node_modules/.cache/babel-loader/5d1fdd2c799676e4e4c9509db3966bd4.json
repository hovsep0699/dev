{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Button,Icons,ButtonKinds}from'@distate/components';import{getSelectedTariffFlow,updateTariffFlow}from'../../store/actions';import{selectedTariffFlowSelector,currentIsPromotionSelector}from'../../store/selects';import{DocumentFlowItem}from'./DocumentFlowItem';/** блок карточки тарифа - Документооборот */export var DocumentFlow=function DocumentFlow(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];var tariffId=props.tariffId;var dispatch=useDispatch();var flow=useSelector(selectedTariffFlowSelector);var isPromotion=useSelector(currentIsPromotionSelector);useEffect(function(){dispatch(getSelectedTariffFlow(tariffId));setIsEditing(false);},[dispatch,tariffId]);var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),editedFlow=_useState4[0],setEditedFlow=_useState4[1];var onSave=function onSave(){dispatch(updateTariffFlow(editedFlow));setIsEditing(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"tariff-card-block\",style:{marginTop:15}},/*#__PURE__*/React.createElement(\"span\",{className:\"tariff-info-title\"},\"\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u043E\\u0431\\u043E\\u0440\\u043E\\u0442\"),/*#__PURE__*/React.createElement(\"div\",{className:\"tariff-card-flow-wrapper\"},flow===null||flow===void 0?void 0:flow.map(function(item){var id=item.id,title=item.title,cost=item.cost,flow_id=item.flow_id;return/*#__PURE__*/React.createElement(\"div\",{key:id,className:\"tariff-card-flow-row\"},/*#__PURE__*/React.createElement(\"div\",null,title),/*#__PURE__*/React.createElement(\"div\",{className:\"tariff-card-flow-cost\"},isEditing?/*#__PURE__*/React.createElement(DocumentFlowItem,{cost:cost,flowId:flow_id,setEditedFlow:setEditedFlow,tariffId:tariffId}):/*#__PURE__*/React.createElement(\"div\",null,(Number(cost)/100).toFixed(2),\" \",isPromotion?'док.':'р.')));})),/*#__PURE__*/React.createElement(\"div\",{style:{padding:'20px 0'}},/*#__PURE__*/React.createElement(\"div\",{style:{padding:'20px 0'}},isEditing?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconSave,{fill:\"currentColor\"}),kind:ButtonKinds.LightGreen,onClick:onSave,style:{marginRight:5}},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconClose,{fill:\"currentColor\"}),kind:ButtonKinds.Danger,onClick:function onClick(){return setIsEditing(false);}},\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")):/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconPencil,{fill:\"currentColor\"}),onClick:function onClick(){return setIsEditing(true);}},\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/tariff/components/tariff-card/DocumentFlow.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","Icons","ButtonKinds","getSelectedTariffFlow","updateTariffFlow","selectedTariffFlowSelector","currentIsPromotionSelector","DocumentFlowItem","DocumentFlow","props","isEditing","setIsEditing","tariffId","dispatch","flow","isPromotion","editedFlow","setEditedFlow","onSave","marginTop","map","item","id","title","cost","flow_id","Number","toFixed","padding","LightGreen","marginRight","Danger"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Icons, ButtonKinds } from '@distate/components';\r\nimport { getSelectedTariffFlow, updateTariffFlow } from '../../store/actions';\r\nimport { selectedTariffFlowSelector, currentIsPromotionSelector } from '../../store/selects';\r\nimport { DocumentFlowItem } from './DocumentFlowItem';\r\n\r\ntype Props = {\r\n  tariffId: number;\r\n};\r\n\r\ntype FlowItem = {\r\n  cost: number;\r\n  flow_id: number;\r\n  id: number;\r\n  system_name: string;\r\n  title: string;\r\n};\r\n\r\nexport type EditedFlowItem = {\r\n  tariffId: number;\r\n  flowId: number;\r\n  cost: number;\r\n};\r\n\r\n/** блок карточки тарифа - Документооборот */\r\nexport const DocumentFlow = (props: Props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const { tariffId } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const flow = useSelector(selectedTariffFlowSelector);\r\n  const isPromotion = useSelector(currentIsPromotionSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSelectedTariffFlow(tariffId));\r\n    setIsEditing(false);\r\n  }, [dispatch, tariffId]);\r\n\r\n  const [editedFlow, setEditedFlow] = useState<EditedFlowItem[]>([]);\r\n\r\n  const onSave = () => {\r\n    dispatch(updateTariffFlow(editedFlow));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tariff-card-block\" style={{ marginTop: 15 }}>\r\n      <span className=\"tariff-info-title\">Документооборот</span>\r\n\r\n      <div className=\"tariff-card-flow-wrapper\">\r\n        {flow?.map((item: FlowItem) => {\r\n          const { id, title, cost, flow_id } = item;\r\n\r\n          return (\r\n            <div key={id} className=\"tariff-card-flow-row\">\r\n              <div>{title}</div>\r\n              <div className=\"tariff-card-flow-cost\">\r\n                {isEditing ? (\r\n                  <DocumentFlowItem\r\n                    cost={cost}\r\n                    flowId={flow_id}\r\n                    setEditedFlow={setEditedFlow}\r\n                    tariffId={tariffId}\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    {(Number(cost) / 100).toFixed(2)} {isPromotion ? 'док.' : 'р.'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div style={{ padding: '20px 0' }}>\r\n        <div style={{ padding: '20px 0' }}>\r\n          {isEditing ? (\r\n            <>\r\n              <Button\r\n                icon={<Icons.IconSave fill=\"currentColor\" />}\r\n                kind={ButtonKinds.LightGreen}\r\n                onClick={onSave}\r\n                style={{ marginRight: 5 }}\r\n              >\r\n                Сохранить\r\n              </Button>\r\n\r\n              <Button\r\n                icon={<Icons.IconClose fill=\"currentColor\" />}\r\n                kind={ButtonKinds.Danger}\r\n                onClick={() => setIsEditing(false)}\r\n              >\r\n                Отмена\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button\r\n              icon={<Icons.IconPencil fill=\"currentColor\" />}\r\n              onClick={() => setIsEditing(true)}\r\n            >\r\n              Редактировать\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}