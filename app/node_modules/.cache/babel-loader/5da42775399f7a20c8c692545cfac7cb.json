{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getAddedGroupInfo),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(getAddedGroupInfoWorker);import{takeLatest,put}from'redux-saga/effects';import{getAddedGroupEmployee,setAddedGroupEmployee}from'../actions';import{Flash}from'../../../../common/flash/Flash';import{ContractorApiServices}from'../../services/contractors.api';export function getAddedGroupInfo(){return _regeneratorRuntime.wrap(function getAddedGroupInfo$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(getAddedGroupEmployee,getAddedGroupInfoWorker);case 2:case\"end\":return _context.stop();}}},_marked);}/** Получение информации о группе контрагентов (уже добавленных) */function getAddedGroupInfoWorker(_ref){var payload,id,offset,limit,name,surname,patronymic,position,employeeInfo,message;return _regeneratorRuntime.wrap(function getAddedGroupInfoWorker$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref.payload;_context2.prev=1;id=payload.id,offset=payload.offset,limit=payload.limit,name=payload.name,surname=payload.surname,patronymic=payload.patronymic,position=payload.position;_context2.next=5;return ContractorApiServices.getEmployeeGroup({id:id,offset:offset,limit:limit,name:name,surname:surname,patronymic:patronymic,position:position});case 5:employeeInfo=_context2.sent;_context2.next=8;return put(setAddedGroupEmployee(employeeInfo));case 8:_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);message=_context2.t0.message;_context2.next=15;return Flash.error(message||'Возникла ошибка');case 15:case\"end\":return _context2.stop();}}},_marked2,null,[[1,10]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/contractors/store/sagas/getAddedGroupEmployeeInfo.effect.ts"],"names":["getAddedGroupInfo","getAddedGroupInfoWorker","takeLatest","put","getAddedGroupEmployee","setAddedGroupEmployee","Flash","ContractorApiServices","payload","id","offset","limit","name","surname","patronymic","position","getEmployeeGroup","employeeInfo","message","error"],"mappings":"oNAMiBA,iB,iDAePC,uB,EArBV,OAASC,UAAT,CAAqBC,GAArB,KAAgC,oBAAhC,CAEA,OAASC,qBAAT,CAAgCC,qBAAhC,KAA6D,YAA7D,CACA,OAASC,KAAT,KAAsB,gCAAtB,CACA,OAASC,qBAAT,KAAsC,gCAAtC,CAEA,MAAO,SAAUP,CAAAA,iBAAV,6IACL,MAAME,CAAAA,UAAU,CAACE,qBAAD,CAAwBH,uBAAxB,CAAhB,CADK,sDAcP,mEACA,QAAUA,CAAAA,uBAAV,4NAAoCO,OAApC,MAAoCA,OAApC,kBAEYC,EAFZ,CAEuED,OAFvE,CAEYC,EAFZ,CAEgBC,MAFhB,CAEuEF,OAFvE,CAEgBE,MAFhB,CAEwBC,KAFxB,CAEuEH,OAFvE,CAEwBG,KAFxB,CAE+BC,IAF/B,CAEuEJ,OAFvE,CAE+BI,IAF/B,CAEqCC,OAFrC,CAEuEL,OAFvE,CAEqCK,OAFrC,CAE8CC,UAF9C,CAEuEN,OAFvE,CAE8CM,UAF9C,CAE0DC,QAF1D,CAEuEP,OAFvE,CAE0DO,QAF1D,kBAGyB,MAAMR,CAAAA,qBAAqB,CAACS,gBAAtB,CAAuC,CAChEP,EAAE,CAAFA,EADgE,CAEhEC,MAAM,CAANA,MAFgE,CAGhEC,KAAK,CAALA,KAHgE,CAIhEC,IAAI,CAAJA,IAJgE,CAKhEC,OAAO,CAAPA,OALgE,CAMhEC,UAAU,CAAVA,UANgE,CAOhEC,QAAQ,CAARA,QAPgE,CAAvC,CAAN,CAHzB,OAGUE,YAHV,iCAYI,MAAMd,CAAAA,GAAG,CAACE,qBAAqB,CAACY,YAAD,CAAtB,CAAT,CAZJ,4FAaaC,OAbb,cAaaA,OAbb,mBAcI,MAAMZ,CAAAA,KAAK,CAACa,KAAN,CAAYD,OAAO,EAAI,iBAAvB,CAAN,CAdJ","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport { getAddedGroupEmployee, setAddedGroupEmployee } from '../actions';\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { ContractorApiServices } from '../../services/contractors.api';\r\n\r\nexport function* getAddedGroupInfo() {\r\n  yield takeLatest(getAddedGroupEmployee, getAddedGroupInfoWorker);\r\n}\r\n\r\ninterface Payload {\r\n  id: number;\r\n  offset?: number;\r\n  limit?: number;\r\n  name?: string;\r\n  surname?: string;\r\n  patronymic?: string;\r\n  position?: string;\r\n}\r\n\r\n/** Получение информации о группе контрагентов (уже добавленных) */\r\nfunction* getAddedGroupInfoWorker({ payload }: { payload: Payload }) {\r\n  try {\r\n    const { id, offset, limit, name, surname, patronymic, position } = payload;\r\n    const employeeInfo = yield ContractorApiServices.getEmployeeGroup({\r\n      id,\r\n      offset,\r\n      limit,\r\n      name,\r\n      surname,\r\n      patronymic,\r\n      position\r\n    });\r\n    yield put(setAddedGroupEmployee(employeeInfo));\r\n  } catch ({ message }) {\r\n    yield Flash.error(message || 'Возникла ошибка');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}