{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(ducumentRequest),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(documentReloads),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(sagaDocumentUpdate),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(sagaDocumentRequest),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(sagaDocumentNext);import{takeLatest,call,put,select}from'redux-saga/effects';import{Flash}from'../../../../common/flash/Flash';import{actionStopProcess}from'../../../../container/sign/store/actions';import{actionDocumentNext,actionDocumentNextRequest,actionDocumentNextSuccess,actionDocumentNextFailure,actionDocumentRequest,actionDocumentFailure,actionDocumentSuccess}from'../actions';import{DocumentsApiServices}from'../../services/documents.api';import{selectIsNext,selectLimit,selectFilter,selectMode,selectOffset}from'../selects';export function ducumentRequest(){return _regeneratorRuntime.wrap(function ducumentRequest$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionDocumentRequest,sagaDocumentRequest);case 2:_context.next=4;return takeLatest(actionStopProcess,sagaDocumentUpdate);case 4:case\"end\":return _context.stop();}}},_marked);}export function documentReloads(){return _regeneratorRuntime.wrap(function documentReloads$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(actionDocumentNext,sagaDocumentNext);case 2:case\"end\":return _context2.stop();}}},_marked2);}function sagaDocumentUpdate(){return _regeneratorRuntime.wrap(function sagaDocumentUpdate$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return put(actionDocumentRequest({}));case 2:case\"end\":return _context3.stop();}}},_marked3);}function sagaDocumentRequest(action){var _action$payload,_action$payload$offse,offset,limit,mode,count,params,res,recordsTotal,_res$rows,rows,isNext,list,message;return _regeneratorRuntime.wrap(function sagaDocumentRequest$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_action$payload=action.payload,_action$payload$offse=_action$payload.offset,offset=_action$payload$offse===void 0?0:_action$payload$offse,limit=_action$payload.limit;_context4.prev=1;_context4.next=4;return select(selectMode);case 4:mode=_context4.sent;if(!limit){_context4.next=9;break;}_context4.t0=limit;_context4.next=12;break;case 9:_context4.next=11;return select(selectLimit);case 11:_context4.t0=_context4.sent;case 12:count=_context4.t0;_context4.next=15;return select(selectFilter)||{};case 15:params=_context4.sent;_context4.next=18;return call(DocumentsApiServices.search,{mode:mode,params:params,offset:offset,limit:count+1});case 18:res=_context4.sent;recordsTotal=res.recordsTotal,_res$rows=res.rows,rows=_res$rows===void 0?[]:_res$rows;isNext=rows.length>count;list=rows.slice(0,count);_context4.next=24;return put(actionDocumentSuccess({isNext:isNext,offset:offset,list:list,totalList:recordsTotal}));case 24:_context4.next=32;break;case 26:_context4.prev=26;_context4.t1=_context4[\"catch\"](1);message=_context4.t1.message;_context4.next=31;return put(actionDocumentFailure(message));case 31:Flash.error(message||'Возникла ошибки при попытке получить список документов.');case 32:case\"end\":return _context4.stop();}}},_marked4,null,[[1,26]]);}function sagaDocumentNext(){var mode,count,offset,params,isNext,step,res,_res$rows2,rows,list,message;return _regeneratorRuntime.wrap(function sagaDocumentNext$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return select(selectMode);case 2:mode=_context5.sent;_context5.next=5;return select(selectLimit);case 5:count=_context5.sent;_context5.next=8;return select(selectOffset);case 8:offset=_context5.sent;_context5.next=11;return select(selectFilter)||{};case 11:params=_context5.sent;_context5.next=14;return select(selectIsNext);case 14:isNext=_context5.sent;if(isNext){_context5.next=17;break;}return _context5.abrupt(\"return\");case 17:_context5.prev=17;_context5.next=20;return put(actionDocumentNextRequest());case 20:step=count+offset;_context5.next=23;return call(DocumentsApiServices.search,{mode:mode,params:params,limit:count+1,offset:step});case 23:res=_context5.sent;_res$rows2=res.rows,rows=_res$rows2===void 0?[]:_res$rows2;isNext=rows.length>count;list=rows.slice(0,count);_context5.next=29;return put(actionDocumentNextSuccess({list:list,isNext:isNext,offset:step}));case 29:_context5.next=37;break;case 31:_context5.prev=31;_context5.t0=_context5[\"catch\"](17);message=_context5.t0.message;_context5.next=36;return put(actionDocumentNextFailure());case 36:Flash.error(message||'Возникла ошибки при попытке получить список документов.');case 37:case\"end\":return _context5.stop();}}},_marked5,null,[[17,31]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/store/sagas/documnets.effect.ts"],"names":["ducumentRequest","documentReloads","sagaDocumentUpdate","sagaDocumentRequest","sagaDocumentNext","takeLatest","call","put","select","Flash","actionStopProcess","actionDocumentNext","actionDocumentNextRequest","actionDocumentNextSuccess","actionDocumentNextFailure","actionDocumentRequest","actionDocumentFailure","actionDocumentSuccess","DocumentsApiServices","selectIsNext","selectLimit","selectFilter","selectMode","selectOffset","action","payload","offset","limit","mode","count","params","search","res","recordsTotal","rows","isNext","length","list","slice","totalList","message","error","step"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, select } from 'redux-saga/effects';\r\n\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { actionStopProcess } from '../../../../container/sign/store/actions';\r\n\r\nimport {\r\n  actionDocumentNext,\r\n  actionDocumentNextRequest,\r\n  actionDocumentNextSuccess,\r\n  actionDocumentNextFailure,\r\n  actionDocumentRequest,\r\n  actionDocumentFailure,\r\n  actionDocumentSuccess\r\n} from '../actions';\r\nimport { ADocumentRequestPayload } from '../../helpers/documents.typings';\r\nimport { DocumentsApiServices } from '../../services/documents.api';\r\nimport { selectIsNext, selectLimit, selectFilter, selectMode, selectOffset } from '../selects';\r\n\r\nexport function* ducumentRequest() {\r\n  yield takeLatest(actionDocumentRequest, sagaDocumentRequest);\r\n  yield takeLatest(actionStopProcess, sagaDocumentUpdate);\r\n}\r\n\r\nexport function* documentReloads() {\r\n  yield takeLatest(actionDocumentNext, sagaDocumentNext);\r\n}\r\n\r\nfunction* sagaDocumentUpdate() {\r\n  yield put(actionDocumentRequest({}));\r\n}\r\n\r\nfunction* sagaDocumentRequest(action: ADocumentRequestPayload) {\r\n  const {\r\n    payload: { offset = 0, limit }\r\n  } = action;\r\n  try {\r\n    const mode = yield select(selectMode);\r\n    const count = limit ? limit : yield select(selectLimit);\r\n    const params = yield select(selectFilter) || {};\r\n\r\n    const res = yield call(DocumentsApiServices.search, { mode, params, offset, limit: count + 1 });\r\n    const { recordsTotal, rows = [] } = res;\r\n\r\n    const isNext = rows.length > count;\r\n    const list = rows.slice(0, count);\r\n\r\n    yield put(\r\n      actionDocumentSuccess({\r\n        isNext,\r\n        offset,\r\n        list,\r\n        totalList: recordsTotal\r\n      })\r\n    );\r\n  } catch ({ message }) {\r\n    yield put(actionDocumentFailure(message));\r\n    Flash.error(message || 'Возникла ошибки при попытке получить список документов.');\r\n  }\r\n}\r\n\r\nfunction* sagaDocumentNext() {\r\n  const mode = yield select(selectMode);\r\n  const count = yield select(selectLimit);\r\n  const offset = yield select(selectOffset);\r\n  const params = yield select(selectFilter) || {};\r\n\r\n  let isNext = yield select(selectIsNext);\r\n  if (!isNext) return;\r\n\r\n  try {\r\n    yield put(actionDocumentNextRequest());\r\n\r\n    const step = count + offset;\r\n    const res = yield call(DocumentsApiServices.search, {\r\n      mode,\r\n      params,\r\n      limit: count + 1,\r\n      offset: step\r\n    });\r\n\r\n    const { rows = [] } = res;\r\n    isNext = rows.length > count;\r\n\r\n    const list = rows.slice(0, count);\r\n\r\n    yield put(actionDocumentNextSuccess({ list, isNext, offset: step }));\r\n  } catch ({ message }) {\r\n    yield put(actionDocumentNextFailure());\r\n    Flash.error(message || 'Возникла ошибки при попытке получить список документов.');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}