{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import*as Yup from'yup';import{Formik,Form}from'formik';import{Button,ButtonKinds,Icons,InputField}from'@distate/components';import{HTMLContainer}from'./form.style';import{Flash}from'../../../../common/flash/Flash';import{UPDATE_FOLDER,CREATE_FOLDER}from'../../../../common/Lbl';var HandleError=React.memo(function(_ref){var errors=_ref.errors;var folderName=errors.folderName;if(folderName){Flash.error('Значение не должно быть пустым');}return null;});export var FolderForm=function FolderForm(_ref2){var dark=_ref2.dark,onSubmit=_ref2.onSubmit,_ref2$defaultValue=_ref2.defaultValue,defaultValue=_ref2$defaultValue===void 0?{}:_ref2$defaultValue;var id=defaultValue.id;var Icon=id?Icons.IconReload:Icons.IconPlus;var Title=id?UPDATE_FOLDER:CREATE_FOLDER;var handleSubmit=function handleSubmit(values,_ref3){var setSubmitting=_ref3.setSubmitting,resetForm=_ref3.resetForm;if(onSubmit){onSubmit(values);}resetForm(defaultValue);setSubmitting(false);};return/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(Formik,{validationSchema:Yup.object({title:Yup.string().required()}),initialValues:_objectSpread({title:'',visible:true},defaultValue),validateOnChange:false,onSubmit:handleSubmit},function(_ref4){var errors=_ref4.errors;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(HandleError,{errors:errors}),/*#__PURE__*/React.createElement(InputField,{name:\"title\",label:dark?'':'Введите имя папки',hideErrors:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",kind:ButtonKinds.Secondary,icon:/*#__PURE__*/React.createElement(Icon,{fill:'#fff'})},Title));}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/components/form/form.tsx"],"names":["React","Yup","Formik","Form","Button","ButtonKinds","Icons","InputField","HTMLContainer","Flash","UPDATE_FOLDER","CREATE_FOLDER","HandleError","memo","errors","folderName","error","FolderForm","dark","onSubmit","defaultValue","id","Icon","IconReload","IconPlus","Title","handleSubmit","values","setSubmitting","resetForm","object","title","string","required","visible","Secondary"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,QAA7B,CACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,KAA9B,CAAqCC,UAArC,KAAuD,qBAAvD,CAEA,OAASC,aAAT,KAA8B,cAA9B,CAEA,OAASC,KAAT,KAAsB,gCAAtB,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,wBAA7C,CAQA,GAAMC,CAAAA,WAAW,CAAGZ,KAAK,CAACa,IAAN,CAAW,cAAqB,IAAlBC,CAAAA,MAAkB,MAAlBA,MAAkB,IAC1CC,CAAAA,UAD0C,CAC3BD,MAD2B,CAC1CC,UAD0C,CAGlD,GAAIA,UAAJ,CAAgB,CACdN,KAAK,CAACO,KAAN,CAAY,gCAAZ,EACD,CAED,MAAO,KAAP,CACD,CARmB,CAApB,CAUA,MAAO,IAAMC,CAAAA,UAA2B,CAAG,QAA9BA,CAAAA,UAA8B,OAA2C,IAAxCC,CAAAA,IAAwC,OAAxCA,IAAwC,CAAlCC,QAAkC,OAAlCA,QAAkC,0BAAxBC,YAAwB,CAAxBA,YAAwB,6BAAT,EAAS,uBAC5EC,CAAAA,EAD4E,CACrED,YADqE,CAC5EC,EAD4E,CAEpF,GAAMC,CAAAA,IAAI,CAAGD,EAAE,CAAGf,KAAK,CAACiB,UAAT,CAAsBjB,KAAK,CAACkB,QAA3C,CACA,GAAMC,CAAAA,KAAK,CAAGJ,EAAE,CAAGX,aAAH,CAAmBC,aAAnC,CAEA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,OAAiE,IAApCC,CAAAA,aAAoC,OAApCA,aAAoC,CAArBC,SAAqB,OAArBA,SAAqB,CACpF,GAAIV,QAAJ,CAAc,CACZA,QAAQ,CAACQ,MAAD,CAAR,CACD,CACDE,SAAS,CAACT,YAAD,CAAT,CACAQ,aAAa,CAAC,KAAD,CAAb,CACD,CAND,CAQA,mBACE,oBAAC,aAAD,mBACE,oBAAC,MAAD,EACE,gBAAgB,CAAE3B,GAAG,CAAC6B,MAAJ,CAAW,CAC3BC,KAAK,CAAE9B,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,EADoB,CAAX,CADpB,CAIE,aAAa,gBACXF,KAAK,CAAE,EADI,CAEXG,OAAO,CAAE,IAFE,EAGRd,YAHQ,CAJf,CASE,gBAAgB,CAAE,KATpB,CAUE,QAAQ,CAAEM,YAVZ,EAYG,mBAAGZ,CAAAA,MAAH,OAAGA,MAAH,oBACC,oBAAC,IAAD,mBACE,oBAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,EADF,cAEE,oBAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAEI,IAAI,CAAG,EAAH,CAAQ,mBAA5C,CAAiE,UAAU,KAA3E,EAFF,cAGE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAEb,WAAW,CAAC8B,SAAxC,CAAmD,IAAI,cAAE,oBAAC,IAAD,EAAM,IAAI,CAAE,MAAZ,EAAzD,EACGV,KADH,CAHF,CADD,EAZH,CADF,CADF,CA0BD,CAvCM","sourcesContent":["import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button, ButtonKinds, Icons, InputField } from '@distate/components';\r\n\r\nimport { HTMLContainer } from './form.style';\r\nimport { FormSubmitAction } from '../../helpers/folder.typings';\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { UPDATE_FOLDER, CREATE_FOLDER } from '../../../../common/Lbl';\r\n\r\nexport interface IForm {\r\n  defaultValue?: FormSubmitAction;\r\n  onSubmit?: (values: FormSubmitAction) => void;\r\n  dark?: boolean;\r\n}\r\n\r\nconst HandleError = React.memo(({ errors }: any) => {\r\n  const { folderName } = errors;\r\n\r\n  if (folderName) {\r\n    Flash.error('Значение не должно быть пустым');\r\n  }\r\n\r\n  return null;\r\n});\r\n\r\nexport const FolderForm: React.FC<IForm> = ({ dark, onSubmit, defaultValue = {} }) => {\r\n  const { id } = defaultValue;\r\n  const Icon = id ? Icons.IconReload : Icons.IconPlus;\r\n  const Title = id ? UPDATE_FOLDER : CREATE_FOLDER;\r\n\r\n  const handleSubmit = (values: FormSubmitAction, { setSubmitting, resetForm }: any) => {\r\n    if (onSubmit) {\r\n      onSubmit(values);\r\n    }\r\n    resetForm(defaultValue);\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <HTMLContainer>\r\n      <Formik\r\n        validationSchema={Yup.object({\r\n          title: Yup.string().required()\r\n        })}\r\n        initialValues={{\r\n          title: '',\r\n          visible: true,\r\n          ...defaultValue\r\n        }}\r\n        validateOnChange={false}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors }) => (\r\n          <Form>\r\n            <HandleError errors={errors} />\r\n            <InputField name=\"title\" label={dark ? '' : 'Введите имя папки'} hideErrors />\r\n            <Button type=\"submit\" kind={ButtonKinds.Secondary} icon={<Icon fill={'#fff'} />}>\r\n              {Title}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </HTMLContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}