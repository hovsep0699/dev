{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport AjaxGetLoginStringHandler from './handlers/auth/AjaxGetLoginStringHandler';\nimport AjaxEmailPasswordHandler from './handlers/auth/AjaxEmailPasswordHandler';\nimport SignLoginStringHandler from './handlers/auth/SignLoginStringHandler';\nimport AjaxCertificateHandler from './handlers/auth/AjaxCertificateHandler';\nimport AjaxRemindPasswordHandler from './handlers/recover/AjaxRemindPasswordHandler';\nimport AjaxGetUserInfoHandler from './handlers/hasAuth/AjaxGetUserInfoHandler';\nimport AjaxGetCompanyInfoHandler from './handlers/hasAuth/AjaxGetCompanyInfoHandler';\nimport MergeUserDataHandler from './handlers/hasAuth/MergeUserDataHandler';\nimport MergeUserAndCompanyDataHandler from './handlers/hasAuth/MergeUserAndCompanyDataHandler';\nimport MergeEmployeeDataHandler from './handlers/hasAuth/MergeEmployeeDataHandler';\nimport Environment from '../Environment';\nimport SecurityService from '../security/SecurityService';\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    var _this = this;\n\n    _classCallCheck(this, AuthService);\n\n    var successAuth = function successAuth() {\n      _this._isAuthed = true;\n    };\n\n    var ajaxGetLoginStringHandler = new AjaxGetLoginStringHandler();\n    var signLoginStringHandler = new SignLoginStringHandler();\n    var ajaxEmailPasswordHandler = new AjaxEmailPasswordHandler(successAuth);\n    var ajaxCertificateHandler = new AjaxCertificateHandler(successAuth);\n    ajaxGetLoginStringHandler.setNext(signLoginStringHandler).setNext(ajaxCertificateHandler).setNext(ajaxEmailPasswordHandler);\n    this.authChain = ajaxGetLoginStringHandler;\n    this.recoverPasswordChain = new AjaxRemindPasswordHandler();\n    var ajaxGetUserInfoHandler = new AjaxGetUserInfoHandler();\n    var ajaxGetCompanyInfoHandler = new AjaxGetCompanyInfoHandler();\n    var mergeUserAndCompanyDataHandler = new MergeUserAndCompanyDataHandler();\n    var mergeUserDataHandler = new MergeUserDataHandler();\n    var mergeEmployeeDataHandler = new MergeEmployeeDataHandler();\n    ajaxGetUserInfoHandler.setNext(ajaxGetCompanyInfoHandler).setNext(mergeUserAndCompanyDataHandler).setNext(mergeUserDataHandler).setNext(mergeEmployeeDataHandler);\n    this.checkAuthChain = ajaxGetUserInfoHandler;\n    this._isAuthed = false;\n  }\n\n  _createClass(AuthService, [{\n    key: \"auth\",\n    value: function auth(request) {\n      return this.authChain.auth(request);\n    }\n  }, {\n    key: \"recover\",\n    value: function recover(request) {\n      return this.recoverPasswordChain.recover(request);\n    }\n  }, {\n    key: \"hasAuth\",\n    value: function hasAuth(request) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user, company, certificate, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.checkAuthChain.hasAuth(request);\n\n              case 3:\n                response = _context.sent;\n                this._isAuthed = response.isAuthed;\n                user = response.user;\n                company = response.company;\n                certificate = response.certificate;\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0); // TODO: обработка ошибки\n\n              case 13:\n                return _context.abrupt(\"return\", {\n                  user: user,\n                  company: company,\n                  certificate: certificate\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var successHandler;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                successHandler = function successHandler(exitResult) {\n                  _this2._isAuthed = false;\n                  SecurityService.clear();\n                  return exitResult;\n                };\n\n                return _context2.abrupt(\"return\", Environment.getAuthGateway().exit().then(successHandler));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"isAuthed\",\n    get: function get() {\n      return this._isAuthed;\n    }\n  }]);\n\n  return AuthService;\n}();\n\nvar instance = new AuthService();\nexport default instance;","map":{"version":3,"sources":["../../../src/application/auth/AuthService.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport AjaxGetLoginStringHandler from './handlers/auth/AjaxGetLoginStringHandler';\r\nimport AjaxEmailPasswordHandler from './handlers/auth/AjaxEmailPasswordHandler';\r\nimport SignLoginStringHandler from './handlers/auth/SignLoginStringHandler';\r\nimport AjaxCertificateHandler from './handlers/auth/AjaxCertificateHandler';\r\nimport AjaxRemindPasswordHandler from './handlers/recover/AjaxRemindPasswordHandler';\r\nimport AjaxGetUserInfoHandler from './handlers/hasAuth/AjaxGetUserInfoHandler';\r\nimport AjaxGetCompanyInfoHandler from './handlers/hasAuth/AjaxGetCompanyInfoHandler';\r\nimport MergeUserDataHandler from './handlers/hasAuth/MergeUserDataHandler';\r\nimport MergeUserAndCompanyDataHandler from './handlers/hasAuth/MergeUserAndCompanyDataHandler';\r\nimport MergeEmployeeDataHandler from './handlers/hasAuth/MergeEmployeeDataHandler';\r\nimport Environment from '../Environment';\r\nimport SecurityService from '../security/SecurityService';\r\nclass AuthService {\r\n    constructor() {\r\n        const successAuth = () => {\r\n            this._isAuthed = true;\r\n        };\r\n        const ajaxGetLoginStringHandler = new AjaxGetLoginStringHandler();\r\n        const signLoginStringHandler = new SignLoginStringHandler();\r\n        const ajaxEmailPasswordHandler = new AjaxEmailPasswordHandler(successAuth);\r\n        const ajaxCertificateHandler = new AjaxCertificateHandler(successAuth);\r\n        ajaxGetLoginStringHandler\r\n            .setNext(signLoginStringHandler)\r\n            .setNext(ajaxCertificateHandler)\r\n            .setNext(ajaxEmailPasswordHandler);\r\n        this.authChain = ajaxGetLoginStringHandler;\r\n        this.recoverPasswordChain = new AjaxRemindPasswordHandler();\r\n        const ajaxGetUserInfoHandler = new AjaxGetUserInfoHandler();\r\n        const ajaxGetCompanyInfoHandler = new AjaxGetCompanyInfoHandler();\r\n        const mergeUserAndCompanyDataHandler = new MergeUserAndCompanyDataHandler();\r\n        const mergeUserDataHandler = new MergeUserDataHandler();\r\n        const mergeEmployeeDataHandler = new MergeEmployeeDataHandler();\r\n        ajaxGetUserInfoHandler\r\n            .setNext(ajaxGetCompanyInfoHandler)\r\n            .setNext(mergeUserAndCompanyDataHandler)\r\n            .setNext(mergeUserDataHandler)\r\n            .setNext(mergeEmployeeDataHandler);\r\n        this.checkAuthChain = ajaxGetUserInfoHandler;\r\n        this._isAuthed = false;\r\n    }\r\n    get isAuthed() {\r\n        return this._isAuthed;\r\n    }\r\n    auth(request) {\r\n        return this.authChain.auth(request);\r\n    }\r\n    recover(request) {\r\n        return this.recoverPasswordChain.recover(request);\r\n    }\r\n    hasAuth(request) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let user, company, certificate;\r\n            try {\r\n                const response = yield this.checkAuthChain.hasAuth(request);\r\n                this._isAuthed = response.isAuthed;\r\n                user = response.user;\r\n                company = response.company;\r\n                certificate = response.certificate;\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                // TODO: обработка ошибки\r\n            }\r\n            return { user, company, certificate };\r\n        });\r\n    }\r\n    exit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const successHandler = exitResult => {\r\n                this._isAuthed = false;\r\n                SecurityService.clear();\r\n                return exitResult;\r\n            };\r\n            return Environment.getAuthGateway()\r\n                .exit()\r\n                .then(successHandler);\r\n        });\r\n    }\r\n}\r\nconst instance = new AuthService();\r\nexport default instance;\r\n//# sourceMappingURL=AuthService.js.map"]},"metadata":{},"sourceType":"module"}