{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Button,Icons}from'@distate/components';import{getEmployeeRoles,deleteRoleToEmployee}from'../../store/actions';import{selectRolesRows,selectRolesTotal}from'../../store/selectors';import{Pagination}from'../../../../common/pagination';import{RolesSubmodal}from'./RolesSubmodal';/** Роли сотрудника */export var EmployeeRoles=function EmployeeRoles(props){var id=props.id;var dispatch=useDispatch();var roles=useSelector(selectRolesRows)||[];var rolesTotal=useSelector(selectRolesTotal);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVisibleSubmodal=_useState2[0],setIsVisibleSubmodal=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),offset=_useState4[0],setOffset=_useState4[1];useEffect(function(){id&&dispatch(getEmployeeRoles({id:id,props:{offset:offset}}));},[dispatch,id,offset]);/** удаление роли у сотрудника */var onDelete=function onDelete(groupId){dispatch(deleteRoleToEmployee({groupId:groupId,employeeId:id}));};/** открытие модалки с доступными ролями для добавления пользователю */var openRolesSubmodal=function openRolesSubmodal(){setIsVisibleSubmodal(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"header\"},\"\\u0420\\u043E\\u043B\\u0438\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"common-table-head\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"\\u0420\\u043E\\u043B\\u044C\"),/*#__PURE__*/React.createElement(\"td\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,roles.map(function(row){return/*#__PURE__*/React.createElement(\"tr\",{key:row.id},/*#__PURE__*/React.createElement(\"td\",null,row.title),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconTrash,{fill:\"currentColor\"}),onClick:function onClick(){return onDelete(row.id);}},\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));})),/*#__PURE__*/React.createElement(\"tfoot\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconPlus,{fill:\"currentColor\"}),onClick:function onClick(){return openRolesSubmodal();}},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-right\"},/*#__PURE__*/React.createElement(Pagination,{setOffset:setOffset,listLength:rolesTotal})))))),/*#__PURE__*/React.createElement(RolesSubmodal,{hide:function hide(){return setIsVisibleSubmodal(false);},isVisible:isVisibleSubmodal,id:id}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/staff/EmployeeRoles.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","Icons","getEmployeeRoles","deleteRoleToEmployee","selectRolesRows","selectRolesTotal","Pagination","RolesSubmodal","EmployeeRoles","props","id","dispatch","roles","rolesTotal","isVisibleSubmodal","setIsVisibleSubmodal","offset","setOffset","onDelete","groupId","employeeId","openRolesSubmodal","map","row","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Icons } from '@distate/components';\r\nimport { getEmployeeRoles, deleteRoleToEmployee } from '../../store/actions';\r\nimport { selectRolesRows, selectRolesTotal } from '../../store/selectors';\r\nimport { Pagination } from '../../../../common/pagination';\r\nimport { RolesSubmodal } from './RolesSubmodal';\r\n\r\ntype Props = {\r\n  id: number;\r\n};\r\n/** Роли сотрудника */\r\nexport const EmployeeRoles = (props: Props) => {\r\n  const { id } = props;\r\n  const dispatch = useDispatch();\r\n  const roles = useSelector(selectRolesRows) || [];\r\n  const rolesTotal = useSelector(selectRolesTotal);\r\n\r\n  const [isVisibleSubmodal, setIsVisibleSubmodal] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    id && dispatch(getEmployeeRoles({ id, props: { offset } }));\r\n  }, [dispatch, id, offset]);\r\n\r\n  /** удаление роли у сотрудника */\r\n  const onDelete = (groupId: number) => {\r\n    dispatch(deleteRoleToEmployee({ groupId, employeeId: id }));\r\n  };\r\n\r\n  /** открытие модалки с доступными ролями для добавления пользователю */\r\n  const openRolesSubmodal = () => {\r\n    setIsVisibleSubmodal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"header\">Роли</h3>\r\n\r\n      <table className=\"table\">\r\n        <thead className=\"common-table-head\">\r\n          <tr>\r\n            <td>Роль</td>\r\n            <td></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.map(row => (\r\n            <tr key={row.id}>\r\n              <td>{row.title}</td>\r\n              <td align=\"right\">\r\n                <Button\r\n                  icon={<Icons.IconTrash fill=\"currentColor\" />}\r\n                  onClick={() => onDelete(row.id)}\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              <Button\r\n                icon={<Icons.IconPlus fill=\"currentColor\" />}\r\n                onClick={() => openRolesSubmodal()}\r\n              >\r\n                Добавить\r\n              </Button>\r\n            </td>\r\n            <td>\r\n              <div className=\"pagination-right\">\r\n                <Pagination setOffset={setOffset} listLength={rolesTotal} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n\r\n      <RolesSubmodal\r\n        hide={() => setIsVisibleSubmodal(false)}\r\n        isVisible={isVisibleSubmodal}\r\n        id={id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}