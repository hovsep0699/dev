{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{FOLDERS}from'../../common/Lbl';import{DOCUMENT_FOLDER}from'../../common/Url';import{Folders}from'./components/folders';import{Dropdonw}from'./components/dropdown';import{selectFolders,selectFormLoading}from'./store/selects';import{HTMLContainer,HTMLHeader,HTMLBody,HTMLTitle}from'./folder.style';import{actionInit,actionClear,actionRequest,actionRemove,actionFormSubmit}from'./store/actions';var Folder=function Folder(){var dispatch=useDispatch();var folders=useSelector(selectFolders);var formLoading=useSelector(selectFormLoading);React.useEffect(function(){dispatch(actionInit());dispatch(actionRequest());return function(){dispatch(actionClear());};},[dispatch]);var handleOnSubmit=function handleOnSubmit(values){dispatch(actionFormSubmit(values));};var handleOnRemove=function handleOnRemove(id){dispatch(actionRemove({id:id}));};return/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(HTMLHeader,null,/*#__PURE__*/React.createElement(HTMLTitle,null,FOLDERS),/*#__PURE__*/React.createElement(Dropdonw,{isLoading:formLoading,onSubmit:handleOnSubmit})),/*#__PURE__*/React.createElement(HTMLBody,null,/*#__PURE__*/React.createElement(Folders,{link:DOCUMENT_FOLDER,items:folders,isLoading:formLoading,onSubmit:handleOnSubmit,onRemove:handleOnRemove})));};export{Folder};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/folder.init.tsx"],"names":["React","useDispatch","useSelector","FOLDERS","DOCUMENT_FOLDER","Folders","Dropdonw","selectFolders","selectFormLoading","HTMLContainer","HTMLHeader","HTMLBody","HTMLTitle","actionInit","actionClear","actionRequest","actionRemove","actionFormSubmit","Folder","dispatch","folders","formLoading","useEffect","handleOnSubmit","values","handleOnRemove","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,sBAAxB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,iBAAjD,CACA,OAASC,aAAT,CAAwBC,UAAxB,CAAoCC,QAApC,CAA8CC,SAA9C,KAA+D,gBAA/D,CAEA,OACEC,UADF,CAEEC,WAFF,CAGEC,aAHF,CAIEC,YAJF,CAKEC,gBALF,KAMO,iBANP,CAUA,GAAMC,CAAAA,MAAyB,CAAG,QAA5BA,CAAAA,MAA4B,EAAM,CACtC,GAAMC,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAEA,GAAMmB,CAAAA,OAAO,CAAGlB,WAAW,CAACK,aAAD,CAA3B,CACA,GAAMc,CAAAA,WAAW,CAAGnB,WAAW,CAACM,iBAAD,CAA/B,CAEAR,KAAK,CAACsB,SAAN,CAAgB,UAAM,CACpBH,QAAQ,CAACN,UAAU,EAAX,CAAR,CACAM,QAAQ,CAACJ,aAAa,EAAd,CAAR,CACA,MAAO,WAAM,CACXI,QAAQ,CAACL,WAAW,EAAZ,CAAR,CACD,CAFD,CAGD,CAND,CAMG,CAACK,QAAD,CANH,EAQA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAA8B,CACnDL,QAAQ,CAACF,gBAAgB,CAACO,MAAD,CAAjB,CAAR,CACD,CAFD,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAgB,CACrCP,QAAQ,CAACH,YAAY,CAAC,CAAEU,EAAE,CAAFA,EAAF,CAAD,CAAb,CAAR,CACD,CAFD,CAIA,mBACE,oBAAC,aAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,MAAYvB,OAAZ,CADF,cAEE,oBAAC,QAAD,EAAU,SAAS,CAAEkB,WAArB,CAAkC,QAAQ,CAAEE,cAA5C,EAFF,CADF,cAKE,oBAAC,QAAD,mBACE,oBAAC,OAAD,EACE,IAAI,CAAEnB,eADR,CAEE,KAAK,CAAEgB,OAFT,CAGE,SAAS,CAAEC,WAHb,CAIE,QAAQ,CAAEE,cAJZ,CAKE,QAAQ,CAAEE,cALZ,EADF,CALF,CADF,CAiBD,CAvCD,CAyCA,OAASP,MAAT","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { FOLDERS } from '../../common/Lbl';\r\nimport { DOCUMENT_FOLDER } from '../../common/Url';\r\nimport { Folders } from './components/folders';\r\nimport { Dropdonw } from './components/dropdown';\r\nimport { selectFolders, selectFormLoading } from './store/selects';\r\nimport { HTMLContainer, HTMLHeader, HTMLBody, HTMLTitle } from './folder.style';\r\nimport { FormSubmitAction } from './helpers/folder.typings';\r\nimport {\r\n  actionInit,\r\n  actionClear,\r\n  actionRequest,\r\n  actionRemove,\r\n  actionFormSubmit\r\n} from './store/actions';\r\n\r\nexport interface IFolder {}\r\n\r\nconst Folder: React.FC<IFolder> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const folders = useSelector(selectFolders);\r\n  const formLoading = useSelector(selectFormLoading);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actionInit());\r\n    dispatch(actionRequest());\r\n    return () => {\r\n      dispatch(actionClear());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const handleOnSubmit = (values: FormSubmitAction) => {\r\n    dispatch(actionFormSubmit(values));\r\n  };\r\n\r\n  const handleOnRemove = (id: string) => {\r\n    dispatch(actionRemove({ id }));\r\n  };\r\n\r\n  return (\r\n    <HTMLContainer>\r\n      <HTMLHeader>\r\n        <HTMLTitle>{FOLDERS}</HTMLTitle>\r\n        <Dropdonw isLoading={formLoading} onSubmit={handleOnSubmit} />\r\n      </HTMLHeader>\r\n      <HTMLBody>\r\n        <Folders\r\n          link={DOCUMENT_FOLDER}\r\n          items={folders}\r\n          isLoading={formLoading}\r\n          onSubmit={handleOnSubmit}\r\n          onRemove={handleOnRemove}\r\n        />\r\n      </HTMLBody>\r\n    </HTMLContainer>\r\n  );\r\n};\r\n\r\nexport { Folder };\r\n"]},"metadata":{},"sourceType":"module"}