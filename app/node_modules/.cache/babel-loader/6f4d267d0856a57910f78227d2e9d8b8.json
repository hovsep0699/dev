{"ast":null,"code":"import React from 'react';\nimport StyledButton, { Inner, IconWrapper, Reload } from './Button.styles';\nimport { IconReload } from '../icons';\nexport var ButtonKinds;\n\n(function (ButtonKinds) {\n  ButtonKinds[\"Default\"] = \"default\";\n  ButtonKinds[\"Primary\"] = \"primary\";\n  ButtonKinds[\"Orange\"] = \"orange\";\n  ButtonKinds[\"Secondary\"] = \"secondary\";\n  ButtonKinds[\"Danger\"] = \"danger\";\n  ButtonKinds[\"LightGreen\"] = \"lightGreen\";\n  ButtonKinds[\"Dark\"] = \"dark\";\n})(ButtonKinds || (ButtonKinds = {}));\n\nexport var ButtonSizes;\n\n(function (ButtonSizes) {\n  ButtonSizes[\"Default\"] = \"default\";\n  ButtonSizes[\"Small\"] = \"small\";\n  ButtonSizes[\"Large\"] = \"large\";\n})(ButtonSizes || (ButtonSizes = {}));\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      _ref$kind = _ref.kind,\n      kind = _ref$kind === void 0 ? ButtonKinds.Default : _ref$kind,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? ButtonSizes.Default : _ref$size,\n      icon = _ref.icon,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      busy = _ref.busy,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      fullWidth = _ref.fullWidth,\n      solid = _ref.solid,\n      className = _ref.className,\n      toogleTheme = _ref.toogleTheme,\n      style = _ref.style;\n  var hasChildren = !!children;\n  var hasIcon = !!icon;\n\n  var handleOnClick = function handleOnClick(e) {\n    if (busy) return;\n    if (onClick) onClick(e);\n  };\n\n  return React.createElement(StyledButton, {\n    type: type,\n    onClick: handleOnClick,\n    kind: kind,\n    size: size,\n    disabled: disabled,\n    hasChildren: hasChildren,\n    hasIcon: hasIcon,\n    busy: busy,\n    fullWidth: fullWidth,\n    solid: solid,\n    className: className,\n    toogleTheme: Boolean(toogleTheme),\n    style: style\n  }, !solid && icon && React.createElement(IconWrapper, {\n    busy: busy,\n    size: size\n  }, React.createElement(IconReload, {\n    fill: \"currentColor\"\n  })), React.createElement(Inner, {\n    busy: busy\n  }, solid && busy ? React.createElement(Reload, {\n    fill: \"currentColor\"\n  }) : icon, children));\n};\n\nexport default Button;","map":{"version":3,"sources":["../../src/Button/Button.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport StyledButton, { Inner, IconWrapper, Reload } from './Button.styles';\r\nimport { IconReload } from '../icons';\r\nexport var ButtonKinds;\r\n(function (ButtonKinds) {\r\n    ButtonKinds[\"Default\"] = \"default\";\r\n    ButtonKinds[\"Primary\"] = \"primary\";\r\n    ButtonKinds[\"Orange\"] = \"orange\";\r\n    ButtonKinds[\"Secondary\"] = \"secondary\";\r\n    ButtonKinds[\"Danger\"] = \"danger\";\r\n    ButtonKinds[\"LightGreen\"] = \"lightGreen\";\r\n    ButtonKinds[\"Dark\"] = \"dark\";\r\n})(ButtonKinds || (ButtonKinds = {}));\r\nexport var ButtonSizes;\r\n(function (ButtonSizes) {\r\n    ButtonSizes[\"Default\"] = \"default\";\r\n    ButtonSizes[\"Small\"] = \"small\";\r\n    ButtonSizes[\"Large\"] = \"large\";\r\n})(ButtonSizes || (ButtonSizes = {}));\r\nconst Button = ({ children, kind = ButtonKinds.Default, size = ButtonSizes.Default, icon, disabled, onClick, busy, type = 'button', fullWidth, solid, className, toogleTheme, style }) => {\r\n    const hasChildren = !!children;\r\n    const hasIcon = !!icon;\r\n    const handleOnClick = (e) => {\r\n        if (busy)\r\n            return;\r\n        if (onClick)\r\n            onClick(e);\r\n    };\r\n    return (React.createElement(StyledButton, { type: type, onClick: handleOnClick, kind: kind, size: size, disabled: disabled, hasChildren: hasChildren, hasIcon: hasIcon, busy: busy, fullWidth: fullWidth, solid: solid, className: className, toogleTheme: Boolean(toogleTheme), style: style },\r\n        !solid && icon && (React.createElement(IconWrapper, { busy: busy, size: size },\r\n            React.createElement(IconReload, { fill: \"currentColor\" }))),\r\n        React.createElement(Inner, { busy: busy },\r\n            solid && busy ? React.createElement(Reload, { fill: \"currentColor\" }) : icon,\r\n            children)));\r\n};\r\nexport default Button;\r\n//# sourceMappingURL=Button.js.map"]},"metadata":{},"sourceType":"module"}