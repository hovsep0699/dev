{"ast":null,"code":"import React from'react';import Preloader from'../../../../common/Preloader';import{HTMLMessage}from'./loading.style';var LoadingPage=function LoadingPage(_ref){var title=_ref.title,currentCount=_ref.currentCount,total=_ref.total,visible=_ref.visible;if(!visible)return null;return/*#__PURE__*/React.createElement(Preloader,{progressCurrent:currentCount,progressTotal:total},/*#__PURE__*/React.createElement(HTMLMessage,null,\"\\u0418\\u0434\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F:\"),/*#__PURE__*/React.createElement(HTMLMessage,null,title),/*#__PURE__*/React.createElement(HTMLMessage,null,\"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u043D\\u043E \",currentCount,\" \\u0438\\u0437 \",total));};export{LoadingPage};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/sign/components/loading.page/loading.page.tsx"],"names":["React","Preloader","HTMLMessage","LoadingPage","title","currentCount","total","visible"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,OAASC,WAAT,KAA4B,iBAA5B,CAUA,GAAMC,CAAAA,WAAwC,CAAG,QAA3CA,CAAAA,WAA2C,MAA6C,IAA1CC,CAAAA,KAA0C,MAA1CA,KAA0C,CAAnCC,YAAmC,MAAnCA,YAAmC,CAArBC,KAAqB,MAArBA,KAAqB,CAAdC,OAAc,MAAdA,OAAc,CAC5F,GAAI,CAACA,OAAL,CAAc,MAAO,KAAP,CACd,mBACE,oBAAC,SAAD,EAAW,eAAe,CAAEF,YAA5B,CAA0C,aAAa,CAAEC,KAAzD,eACE,oBAAC,WAAD,0IADF,cAEE,oBAAC,WAAD,MAAcF,KAAd,CAFF,cAGE,oBAAC,WAAD,gEACaC,YADb,kBAC+BC,KAD/B,CAHF,CADF,CASD,CAXD,CAaA,OAASH,WAAT","sourcesContent":["import React from 'react';\r\n\r\nimport Preloader from '../../../../common/Preloader';\r\nimport { HTMLMessage } from './loading.style';\r\n\r\nexport interface ILoadingPageProps {\r\n  title: string;\r\n  currentCount: number;\r\n  total: number;\r\n  loading?: boolean;\r\n  visible?: boolean;\r\n}\r\n\r\nconst LoadingPage: React.FC<ILoadingPageProps> = ({ title, currentCount, total, visible }) => {\r\n  if (!visible) return null;\r\n  return (\r\n    <Preloader progressCurrent={currentCount} progressTotal={total}>\r\n      <HTMLMessage>Идет процесс подписания:</HTMLMessage>\r\n      <HTMLMessage>{title}</HTMLMessage>\r\n      <HTMLMessage>\r\n        Подписано {currentCount} из {total}\r\n      </HTMLMessage>\r\n    </Preloader>\r\n  );\r\n};\r\n\r\nexport { LoadingPage };\r\n"]},"metadata":{},"sourceType":"module"}