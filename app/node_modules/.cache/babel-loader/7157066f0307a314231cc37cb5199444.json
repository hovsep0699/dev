{"ast":null,"code":"/**\r\n * CryptoPRO simplified library\r\n * @author Aleksandr.ru\r\n * @link http://aleksandr.ru\r\n */\nimport DN from 'ruscryptojs/src/DN';\nimport { X509KeySpec, X509PrivateKeyExportFlags, X509CertificateEnrollmentContext, X509KeyUsageFlags, X500NameFlags, EncodingType, InstallResponseRestrictionFlags, ProviderTypes, cadesErrorMesages } from 'ruscryptojs/src/CryptoPro/constants';\nimport { convertDN } from 'ruscryptojs/src/helpers';\n\nfunction CryptoProLib() {\n  //If the string contains fewer than 128 bytes, the Length field of the TLV triplet requires only one byte to specify the content length.\n  //If the string is more than 127 bytes, bit 7 of the Length field is set to 1 and bits 6 through 0 specify the number of additional bytes used to identify the content length.\n  var maxLengthCSPName = 127; // https://www.cryptopro.ru/forum2/default.aspx?g=posts&m=38467#post38467\n\n  var asn1UTF8StringTag = 0x0c; // 12, UTF8String\n\n  var canAsync;\n  var binded = false;\n  /**\r\n   * Инициализация и проверка наличия требуемых возможностей\r\n   * @returns {Promise<Object>} версия\r\n   */\n\n  this.init = function () {\n    window.cadesplugin_skip_extension_install = true; // считаем что уже все установлено\n\n    window.allow_firefox_cadesplugin_async = true; // FF 52+\n\n    require('ruscryptojs/src/CryptoPro/cadesplugin_api');\n\n    canAsync = !!cadesplugin.CreateObjectAsync;\n    return new Promise(function (resolve, reject) {\n      if (!window.cadesplugin) {\n        throw new Error('КриптоПро ЭЦП Browser plug-in не обнаружен');\n      }\n\n      resolve();\n    }).then(function () {\n      if (canAsync) {\n        return cadesplugin.then(function () {\n          return cadesplugin.CreateObjectAsync(\"CAdESCOM.About\");\n        }).then(function (oAbout) {\n          return oAbout.Version;\n        }).then(function (version) {\n          return {\n            version: version\n          };\n        }).catch(function (e) {\n          // 'Плагин не загружен'\n          var err = getError(e);\n          throw new Error(err);\n        });\n      } else {\n        return new Promise(function (resolve) {\n          try {\n            var oAbout = cadesplugin.CreateObject(\"CAdESCOM.About\");\n\n            if (!oAbout || !oAbout.Version) {\n              throw new Error('КриптоПро ЭЦП Browser plug-in не загружен');\n            }\n\n            var CurrentPluginVersion = oAbout.Version;\n            resolve({\n              version: CurrentPluginVersion\n            });\n          } catch (e) {\n            // 'Плагин не загружен'\n            var err = getError(e);\n            throw new Error(err);\n          }\n        });\n      }\n    });\n  };\n  /**\r\n   * Включает кеширование ПИНов от контейнеров чтоб не тробовать повторного ввода\r\n   * возможно не поддерживается в ИЕ\r\n   * @see https://www.cryptopro.ru/forum2/default.aspx?g=posts&t=10170\r\n   * @param {string} userPin не используется\r\n   * @returns {Promise<boolean>} new binded state\r\n   */\n\n\n  this.bind = function (userPin) {\n    binded = true;\n    return Promise.resolve(binded);\n  };\n  /**\r\n   * Заглушка для совместимости\r\n   * @returns {Promise<boolean>} new binded state\r\n   */\n\n\n  this.unbind = function () {\n    binded = false;\n    return Promise.resolve(binded);\n  };\n  /**\r\n   * Создание CSR.\r\n   * @param {DN} dn\r\n   * @param {string} pin\r\n   * @param {array} ekuOids массив OID Extended Key Usage, по-умолчанию Аутентификация клиента '1.3.6.1.5.5.7.3.2' + Защищенная электронная почта '1.3.6.1.5.5.7.3.4'\r\n   * @param {int} providerType по умолчанию 80 (ГОСТ Р 34.10-2012) или 75 (ГОСТ Р 34.10-2001)\r\n   * @returns {Promise<Object>} объект с полями { csr: 'base64 запрос на сертификат' }\r\n   * @see DN\r\n   */\n\n\n  this.generateCSR = function (dn, pin, ekuOids, providerType) {\n    if (!ekuOids || !ekuOids.length) {\n      ekuOids = ['1.3.6.1.5.5.7.3.2', '1.3.6.1.5.5.7.3.4' // Защищенная электронная почта\n      ];\n    }\n\n    if (!providerType) {\n      providerType = ProviderTypes.GOST_R_34_10_2012;\n    }\n\n    if (canAsync) {\n      var oEnroll, oRequest, oPrivateKey, oExtensions, oKeyUsage, oEnhancedKeyUsage, oEnhancedKeyUsageOIDs, aOIDs, oSstOID, oDn, oCspInformations, sCSPName, oSubjectSignTool;\n      return cadesplugin.then(function () {\n        return Promise.all([cadesplugin.CreateObjectAsync('X509Enrollment.CX509Enrollment'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509CertificateRequestPkcs10'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509PrivateKey'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509ExtensionKeyUsage'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509ExtensionEnhancedKeyUsage'), cadesplugin.CreateObjectAsync('X509Enrollment.CObjectIds'), cadesplugin.CreateObjectAsync('X509Enrollment.CX500DistinguishedName'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509Extensions'), cadesplugin.CreateObjectAsync('X509Enrollment.CCspInformations'), cadesplugin.CreateObjectAsync('X509Enrollment.CX509Extension') //9\n        ]);\n      }).then(function (objects) {\n        oEnroll = objects[0];\n        oRequest = objects[1];\n        oPrivateKey = objects[2];\n        oKeyUsage = objects[3];\n        oEnhancedKeyUsage = objects[4];\n        oEnhancedKeyUsageOIDs = objects[5];\n        oDn = objects[6];\n        oExtensions = objects[7];\n        oCspInformations = objects[8];\n        oSubjectSignTool = objects[9];\n        return oCspInformations.AddAvailableCsps();\n      }).then(function () {\n        return oCspInformations.Count;\n      }).then(function (cnt) {\n        if (!cnt) throw new Error('No CSP informations!');\n        var aPromises = [];\n\n        for (var i = 0; i < cnt; i++) {\n          aPromises.push(oCspInformations.ItemByIndex(i));\n        }\n\n        return Promise.all(aPromises);\n      }).then(function (aCspInformation) {\n        var aPromises = [];\n\n        for (var i in aCspInformation) {\n          var a = aCspInformation[i];\n          aPromises.push(a.LegacyCsp);\n          aPromises.push(a.Type);\n          aPromises.push(a.Name);\n        }\n\n        return Promise.all(aPromises);\n      }).then(function (aCspInfo) {\n        var cspType, cspName;\n\n        for (var i = 0; i < aCspInfo.length; i += 3) {\n          var bLegacyCsp = aCspInfo[i];\n          var nType = aCspInfo[i + 1];\n          var sName = aCspInfo[i + 2];\n\n          if (bLegacyCsp && nType == providerType) {\n            cspType = nType;\n            cspName = sCSPName = sName;\n            break;\n          }\n        }\n\n        if (!cspName || !cspType) {\n          throw new Error('No suitable CSP!');\n        }\n\n        var aPromises = [oPrivateKey.propset_KeySpec(X509KeySpec.XCN_AT_SIGNATURE), oPrivateKey.propset_Existing(false), oPrivateKey.propset_ExportPolicy(X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG), oPrivateKey.propset_ProviderType(cspType), oPrivateKey.propset_ProviderName(cspName)];\n        if (pin) aPromises.push(oPrivateKey.propset_Pin(pin));\n        return Promise.all(aPromises);\n      }).then(function () {\n        return oRequest.InitializeFromPrivateKey(X509CertificateEnrollmentContext.ContextUser, oPrivateKey, '');\n      }).then(function () {\n        return oKeyUsage.InitializeEncode(X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE);\n      }).then(function () {\n        var promises = [];\n\n        for (var i = 0; i < ekuOids.length; i++) {\n          promises.push(cadesplugin.CreateObjectAsync('X509Enrollment.CObjectId'));\n        }\n\n        return Promise.all(promises);\n      }).then(function (objects) {\n        aOIDs = objects;\n        var promises = [];\n\n        for (var i = 0; i < ekuOids.length; i++) {\n          aOIDs[i].InitializeFromValue(ekuOids[i]);\n        }\n\n        return Promise.all(promises);\n      }).then(function () {\n        var promises = [];\n\n        for (var i = 0; i < ekuOids.length; i++) {\n          oEnhancedKeyUsageOIDs.Add(aOIDs[i]);\n        }\n\n        return Promise.all(promises);\n      }).then(function () {\n        return cadesplugin.CreateObjectAsync('X509Enrollment.CObjectId');\n      }).then(function (oid) {\n        oSstOID = oid;\n        return oSstOID.InitializeFromValue('1.2.643.100.111'); // Subject Sign Tool\n      }).then(function () {\n        var shortName = sCSPName.slice(0, maxLengthCSPName);\n        var utf8arr = stringToUtf8ByteArray(shortName);\n        utf8arr.unshift(asn1UTF8StringTag, utf8arr.length);\n        var base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(utf8arr))); //return oSubjectSignTool.Initialize(oSstOID, EncodingType.XCN_CRYPT_STRING_BINARY, utf8string); // не работает на винде\n\n        return oSubjectSignTool.Initialize(oSstOID, EncodingType.XCN_CRYPT_STRING_BASE64, base64String);\n      }).then(function () {\n        return oEnhancedKeyUsage.InitializeEncode(oEnhancedKeyUsageOIDs);\n      }).then(function () {\n        return oRequest.X509Extensions;\n      }).then(function (ext) {\n        oExtensions = ext;\n        return Promise.all([oExtensions.Add(oKeyUsage), oExtensions.Add(oEnhancedKeyUsage), oExtensions.Add(oSubjectSignTool)]);\n      }).then(function () {\n        var strName = dn.toString();\n        return oDn.Encode(strName, X500NameFlags.XCN_CERT_X500_NAME_STR);\n      }).then(function () {\n        return oRequest.propset_Subject(oDn);\n      }).then(function () {\n        return oEnroll.InitializeFromRequest(oRequest);\n      }).then(function () {\n        return oEnroll.CreateRequest(EncodingType.XCN_CRYPT_STRING_BASE64);\n      }).then(function (csr) {\n        return {\n          csr: csr\n        };\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oCspInformations = cadesplugin.CreateObject('X509Enrollment.CCspInformations');\n          var oEnroll = cadesplugin.CreateObject('X509Enrollment.CX509Enrollment');\n          var oRequest = cadesplugin.CreateObject('X509Enrollment.CX509CertificateRequestPkcs10');\n          var oPrivateKey = cadesplugin.CreateObject('X509Enrollment.CX509PrivateKey');\n          var oKeyUsage = cadesplugin.CreateObject('X509Enrollment.CX509ExtensionKeyUsage');\n          var oEnhancedKeyUsage = cadesplugin.CreateObject('X509Enrollment.CX509ExtensionEnhancedKeyUsage');\n          var oEnhancedKeyUsageOIDs = cadesplugin.CreateObject('X509Enrollment.CObjectIds');\n          var oDn = cadesplugin.CreateObject('X509Enrollment.CX500DistinguishedName');\n          var oExtensions = cadesplugin.CreateObject('X509Enrollment.CX509Extensions');\n          var cspType, cspName;\n          oCspInformations.AddAvailableCsps();\n\n          for (var i = 0; i < oCspInformations.Count; i++) {\n            var oCspInfo = oCspInformations.ItemByIndex(i);\n\n            if (oCspInfo.LegacyCsp && oCspInfo.Type == providerType) {\n              cspType = oCspInfo.Type;\n              cspName = oCspInfo.Name;\n              break;\n            }\n          }\n\n          if (!cspName || !cspType) {\n            throw new Error('No suitable CSP!');\n          }\n\n          oPrivateKey.KeySpec = X509KeySpec.XCN_AT_SIGNATURE;\n          oPrivateKey.Existing = false;\n          oPrivateKey.ExportPolicy = X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG;\n          oPrivateKey.ProviderName = cspName;\n          oPrivateKey.ProviderType = cspType; // под виндой нельзя задать ПИН тк не дает доступа\n          //oPrivateKey.Pin = pin; //CX509PrivateKey::put_Pin: Access is denied. 0x80070005 (WIN32: 5)\n\n          oRequest.InitializeFromPrivateKey(X509CertificateEnrollmentContext.ContextUser, oPrivateKey, '');\n          oKeyUsage.InitializeEncode(X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE | X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE);\n          var aEnhancedKeyUsageOIDs = [];\n\n          for (var i = 0; i < ekuOids.length; i++) {\n            aEnhancedKeyUsageOIDs.push(cadesplugin.CreateObject('X509Enrollment.CObjectId'));\n            aEnhancedKeyUsageOIDs[i].InitializeFromValue(ekuOids[i]);\n            oEnhancedKeyUsageOIDs.Add(aEnhancedKeyUsageOIDs[i]);\n          }\n\n          oEnhancedKeyUsage.InitializeEncode(oEnhancedKeyUsageOIDs);\n          oRequest.X509Extensions.Add(oKeyUsage);\n          oRequest.X509Extensions.Add(oEnhancedKeyUsage); //subject sign tool\n\n          var ssOID = cadesplugin.CreateObject('X509Enrollment.CObjectId');\n          ssOID.InitializeFromValue('1.2.643.100.111');\n          var shortName = cspName.slice(0, maxLengthCSPName);\n          var utf8arr = stringToUtf8ByteArray(shortName);\n          utf8arr.unshift(asn1UTF8StringTag, shortName.length);\n          var base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(utf8arr)));\n          var oSubjectSignTool = cadesplugin.CreateObject('X509Enrollment.CX509Extension');\n          oSubjectSignTool.Initialize(ssOID, EncodingType.XCN_CRYPT_STRING_BASE64, base64String);\n          oRequest.X509Extensions.Add(oSubjectSignTool);\n          var strName = dn.toString();\n          oDn.Encode(strName, X500NameFlags.XCN_CERT_X500_NAME_STR);\n          oRequest.Subject = oDn;\n          oEnroll.InitializeFromRequest(oRequest);\n          var csr = oEnroll.CreateRequest(EncodingType.XCN_CRYPT_STRING_BASE64);\n          resolve({\n            csr: csr\n          });\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Запись сертификата.\r\n   * @param {string} certBase64\r\n   * @returns {Promise<string>} thumbprint\r\n   */\n\n\n  this.writeCertificate = function (certBase64) {\n    if (canAsync) {\n      var oEnroll,\n          existingSha = [];\n      return this.listCertificates().then(function (certs) {\n        for (var i in certs) {\n          existingSha.push(certs[i].shift());\n        }\n\n        return cadesplugin.CreateObjectAsync('X509Enrollment.CX509Enrollment');\n      }).then(function (enroll) {\n        oEnroll = enroll;\n        return oEnroll.Initialize(X509CertificateEnrollmentContext.ContextUser);\n      }).then(function () {\n        return oEnroll.InstallResponse(InstallResponseRestrictionFlags.AllowNone, certBase64, EncodingType.XCN_CRYPT_STRING_BASE64, '');\n      }).then(this.listCertificates).then(function (certs) {\n        for (var i in certs) {\n          var sha = certs[i].shift();\n\n          if (existingSha.indexOf(sha) < 0) {\n            return sha;\n          }\n        }\n\n        throw new Error('Не удалось найти установленный сертификат по отпечатку');\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var existingSha = [];\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates;\n\n          for (var i = 1; i <= oCertificates.Count; i++) {\n            existingSha.push(oCertificates.Item(i).Thumbprint);\n          }\n\n          oStore.Close();\n          var oEnroll = cadesplugin.CreateObject('X509Enrollment.CX509Enrollment');\n          oEnroll.Initialize(X509CertificateEnrollmentContext.ContextUser);\n          oEnroll.InstallResponse(InstallResponseRestrictionFlags.AllowNone, certBase64, EncodingType.XCN_CRYPT_STRING_BASE64, '');\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates;\n          var found = false;\n\n          for (var i = 1; i <= oCertificates.Count; i++) {\n            var sha = oCertificates.Item(i).Thumbprint;\n\n            if (existingSha.indexOf(sha) < 0) {\n              found = true;\n            }\n          }\n\n          oStore.Close();\n\n          if (found) {\n            resolve(sha);\n          } else {\n            throw new Error('Не удалось найти установленный сертификат по отпечатку');\n          }\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Получение информации о сертификате.\r\n   * @param {string} certThumbprint\r\n   * @returns {Promise<Object>}\r\n   */\n\n\n  this.certificateInfo = function (certThumbprint) {\n    var infoToString = function infoToString() {\n      return 'Название:              ' + this.Name + '\\nИздатель:              ' + this.IssuerName + '\\nСубъект:               ' + this.SubjectName + '\\nВерсия:                ' + this.Version + '\\nСерийный №:            ' + this.SerialNumber + '\\nОтпечаток SHA1:        ' + this.Thumbprint + '\\nНе действителен до:    ' + this.ValidFromDate + '\\nНе действителен после: ' + this.ValidToDate + '\\nПриватный ключ:        ' + (this.HasPrivateKey ? 'Есть' : 'Нет') + '\\nВалидный:              ' + (this.IsValid ? 'Да' : 'Нет');\n    };\n\n    if (canAsync) {\n      var oStore,\n          oCertificates,\n          oCertificate,\n          oInfo = {};\n      return cadesplugin.then(function () {\n        return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\n      }).then(function (o) {\n        oStore = o;\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n      }).then(function (certificates) {\n        oCertificates = certificates;\n        return oCertificates.Count;\n      }).then(function (count) {\n        if (count != 1) throw new Error('Не обнаружено сертификатов c указанным SHA1');\n        return oCertificates.Item(1);\n      }).then(function (certificate) {\n        oCertificate = certificate;\n        return oStore.Close();\n      }).then(function () {\n        var promises = [oCertificate.IssuerName, oCertificate.SerialNumber, oCertificate.SubjectName, oCertificate.Thumbprint, oCertificate.ValidFromDate, oCertificate.ValidToDate, oCertificate.Version];\n        return Promise.all(promises);\n      }).then(function (a) {\n        oInfo = {\n          HasPrivateKey: true,\n          IsValid: undefined,\n          //TODO: Issuer object\n          IssuerName: a[0],\n          SerialNumber: a[1],\n          SubjectName: a[2],\n          Subject: undefined,\n          Name: undefined,\n          Thumbprint: a[3],\n          ValidFromDate: new Date(a[4]),\n          ValidToDate: new Date(a[5]),\n          Version: a[6]\n        };\n        return true;\n      }).then(function (result) {\n        var oParesedSubj = parseSubject(oInfo.SubjectName);\n        oParesedSubj = convertDN(oParesedSubj);\n        oInfo.Subject = oParesedSubj;\n        oInfo.Name = oParesedSubj['CN'];\n        oInfo.IsValid = result;\n        oInfo.toString = infoToString;\n        return oInfo;\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n\n          if (oCertificates.Count != 1) {\n            throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\n          }\n\n          var oCertificate = oCertificates.Item(1);\n          oStore.Close();\n          var oParesedSubj = parseSubject(oCertificate.SubjectName);\n          oParesedSubj = convertDN(oParesedSubj);\n          var oInfo = {\n            HasPrivateKey: undefined,\n            IsValid: true,\n            //TODO: Issuer object\n            IssuerName: oCertificate.IssuerName,\n            SerialNumber: oCertificate.SerialNumber,\n            SubjectName: oCertificate.SubjectName,\n            Subject: oParesedSubj,\n            Name: oParesedSubj['CN'],\n            Thumbprint: oCertificate.Thumbprint,\n            ValidFromDate: new Date(oCertificate.ValidFromDate),\n            ValidToDate: new Date(oCertificate.ValidToDate),\n            Version: oCertificate.Version\n          };\n          oInfo.toString = infoToString;\n          resolve(oInfo);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Получение массива доступных сертификатов\r\n   * @returns {Promise<Array>} [ {id: thumbprint, name: subject}, ...]\r\n   */\n\n\n  this.listCertificates = function () {\n    if (canAsync) {\n      var oStore, oCertificates, ret;\n      return cadesplugin.then(function () {\n        return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\n      }).then(function (store) {\n        oStore = store;\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        oCertificates = certificates;\n        return certificates.Count;\n      }).then(function (count) {\n        if (count < 1) throw new Error('Не обнаружено сертификатов');\n        var certs = [];\n\n        for (var i = 1; i <= count; i++) {\n          certs.push(oCertificates.Item(i));\n        }\n\n        return Promise.all(certs);\n      }).then(function (certificates) {\n        var certs = [];\n\n        for (var i in certificates) {\n          certs.push(certificates[i].SubjectName, certificates[i].Thumbprint);\n        }\n\n        return Promise.all(certs);\n      }).then(function (subjects) {\n        var certs = [];\n\n        for (var i = 0; i < subjects.length; i += 2) {\n          if (!subjects[i]) {\n            continue;\n          }\n\n          var oDN = parseSubject(subjects[i]);\n          certs.push({\n            id: subjects[i + 1],\n            name: formatCertificateName(oDN)\n          });\n        }\n\n        ret = certs;\n        return oStore.Close();\n      }).then(function () {\n        return ret;\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates;\n          var certs = [];\n\n          for (var i = 1; i <= oCertificates.Count; i++) {\n            var oCertificate = oCertificates.Item(i);\n            var oDN = parseSubject(oCertificate.SubjectName);\n            certs.push({\n              id: oCertificate.Thumbprint,\n              name: formatCertificateName(oDN)\n            });\n          }\n\n          oStore.Close();\n          resolve(certs);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Чтение сертификата\r\n   * @param {string} certThumbprint\r\n   * @returns {Promise<string>} base64\r\n   */\n\n\n  this.readCertificate = function (certThumbprint) {\n    if (canAsync) {\n      var oStore, oCertificates, oCertificate;\n      return cadesplugin.then(function () {\n        return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\n      }).then(function (o) {\n        oStore = o;\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n      }).then(function (certificates) {\n        oCertificates = certificates;\n        return oCertificates.Count;\n      }).then(function (count) {\n        if (count != 1) {\n          throw new Error('Не обнаружено сертификатов c указанным SHA1');\n        }\n\n        return oCertificates.Item(1);\n      }).then(function (certificate) {\n        oCertificate = certificate;\n        return oStore.Close();\n      }).then(function () {\n        return oCertificate.Export(cadesplugin.CADESCOM_ENCODE_BASE64);\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n\n          if (oCertificates.Count != 1) {\n            throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\n          }\n\n          var oCertificate = oCertificates.Item(1);\n          oStore.Close();\n          var data = oCertificate.Export(cadesplugin.CADESCOM_ENCODE_BASE64);\n          resolve(data);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Подпись данных (отсоединенная).\r\n   * @param {string} dataBase64\r\n   * @param {string} certThumbprint\r\n   * @param {string} pin будет запрошен, если отсутствует\r\n   * @returns {Promise<string>} base64\r\n   */\n\n\n  this.signData = function (dataBase64, certThumbprint, pin) {\n    if (canAsync) {\n      var oStore, oCertificates, oCertificate, oSigner, oSignedData;\n      return cadesplugin.then(function () {\n        return Promise.all([cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")]);\n      }).then(function (objects) {\n        oStore = objects[0];\n        oSigner = objects[1];\n        oSignedData = objects[2];\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n      }).then(function (certificates) {\n        oCertificates = certificates;\n        return oCertificates.Count;\n      }).then(function (count) {\n        if (count != 1) {\n          throw new Error('Не обнаружено сертификатов c указанным SHA1');\n        }\n\n        return oCertificates.Item(1);\n      }).then(function (certificate) {\n        oCertificate = certificate;\n        return oStore.Close();\n      }).then(function () {\n        return oCertificate.PrivateKey;\n      }).then(function (privateKey) {\n        return privateKey.propset_CachePin(binded);\n      }).then(function () {\n        var promises = [oSigner.propset_Certificate(oCertificate), // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN)\n        oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY)];\n\n        if (pin) {\n          promises.push(oSigner.propset_KeyPin(pin));\n        }\n\n        return Promise.all(promises);\n      }).then(function () {\n        // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n        return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n      }).then(function () {\n        return oSignedData.propset_Content(dataBase64);\n      }).then(function () {\n        return oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n\n          if (oCertificates.Count != 1) {\n            throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\n          }\n\n          var oCertificate = oCertificates.Item(1);\n          oStore.Close();\n\n          if (oCertificate.PrivateKey && oCertificate.PrivateKey.CachePin !== undefined) {\n            // возможно не поддерживается в ИЕ\n            // https://www.cryptopro.ru/forum2/default.aspx?g=posts&t=10170\n            oCertificate.PrivateKey.CachePin = binded;\n          }\n\n          var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\n          oSigner.Certificate = oCertificate; // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\n\n          oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\n\n          if (pin) {\n            oSigner.KeyPin = pin;\n          }\n\n          var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\"); // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n\n          oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\n          oSignedData.Content = dataBase64;\n          var sSignedMessage = oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\n          resolve(sSignedMessage);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Совместная подпись данных (двумя сертификатами).\r\n   * @param {string} dataBase64\r\n   * @param {string} certThumbprint SHA1 отпечаток первого сертификата\r\n   * @param {string} pin будет запрошен, если отсутствует\r\n   * @param {string} certThumbprint2 SHA1 отпечаток второго сертификата\r\n   * @param {string} pin2 будет запрошен, если отсутствует\r\n   * @returns {Promise<string>} base64\r\n   */\n\n\n  this.signData2 = function (dataBase64, certThumbprint, pin, certThumbprint2, pin2) {\n    if (canAsync) {\n      var oStore, oCertificate, oCertificate2, oSigner, oSignedData;\n      return cadesplugin.then(function () {\n        return Promise.all([cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")]);\n      }).then(function (objects) {\n        oStore = objects[0];\n        oSigner = objects[1];\n        oSignedData = objects[2];\n\n        if (!oStore) {\n          throw new Error('Не обнаружено хранилище');\n        }\n\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        return Promise.all([certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint), certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint2)]);\n      }).then(function (certs) {\n        return Promise.all([certs[0].Count, certs[0].Item(1), certs[1].Count, certs[1].Item(1)]);\n      }).then(function (certificates) {\n        if (certificates[0] != 1) new Error('Не найден сертификат по SHA1');\n        if (certificates[2] != 1) new Error('Не найден сертификат-2 по SHA1');\n        oCertificate = certificates[1];\n        oCertificate2 = certificates[3];\n        return oStore.Close();\n      }).then(function () {\n        // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n        return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n      }).then(function () {\n        return oSignedData.propset_Content(dataBase64);\n      }).then(function () {\n        var promises = [oSigner.propset_Certificate(oCertificate), // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\n        oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY), oSigner.propset_KeyPin(pin ? pin : '')];\n        return Promise.all(promises);\n      }).then(function () {\n        return oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\n      }).then(function (sign) {\n        //console.log('sign1: %s', sign);\n        var promises = [oSigner.propset_Certificate(oCertificate2), // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\n        oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY), oSigner.propset_KeyPin(pin2 ? pin2 : '')];\n        return Promise.all(promises);\n      }).then(function () {\n        return oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n\n          if (oCertificates.Count != 1) {\n            throw new Error(\"Не найден сертификат по SHA1\");\n          }\n\n          var oCertificate = oCertificates.Item(1);\n          var oCertificates2 = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint2);\n\n          if (oCertificates2.Count != 1) {\n            throw new Error(\"Не найден сертификат-2 по SHA1\");\n          }\n\n          var oCertificate2 = oCertificates2.Item(1);\n          oStore.Close();\n          var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\"); // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n\n          oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\n          oSignedData.Content = dataBase64;\n          var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\n          oSigner.Certificate = oCertificate; // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\n\n          oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\n          oSigner.KeyPin = pin ? pin : '';\n          var sSignedMessage = oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\n          oSigner.Certificate = oCertificate2; // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\n\n          oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\n          oSigner.KeyPin = pin2 ? pin2 : '';\n          var sSignedMessage2 = oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\n          resolve(sSignedMessage2);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Добавить подпись к существующей.\r\n   * @param {string} dataBase64\r\n   * @param {string} signBase64 существующая подпись\r\n   * @param {string} certThumbprint SHA1 отпечаток первого сертификата\r\n   * @param {string} pin будет запрошен, если отсутствует\r\n   * @returns {Promise<string>} base64\r\n   */\n\n\n  this.addSign = function (dataBase64, signBase64, certThumbprint, pin) {\n    if (canAsync) {\n      var oStore, oCertificate, oSigner, oSignedData;\n      return cadesplugin.then(function () {\n        return Promise.all([cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"), cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")]);\n      }).then(function (objects) {\n        oStore = objects[0];\n        oSigner = objects[1];\n        oSignedData = objects[2];\n\n        if (!oStore) {\n          throw new Error('Не обнаружено хранилище');\n        }\n\n        return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n      }).then(function () {\n        return oStore.Certificates;\n      }).then(function (certificates) {\n        return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n      }).then(function (certs) {\n        return Promise.all([certs.Count, certs.Item(1)]);\n      }).then(function (certificates) {\n        if (certificates[0] != 1) new Error('Не найден сертификат по SHA1');\n        oCertificate = certificates[1];\n        return oStore.Close();\n      }).then(function () {\n        // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n        return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n      }).then(function () {\n        return oSignedData.propset_Content(dataBase64);\n      }).then(function () {\n        return oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true).catch(function (e) {\n          console.log('Existing sign not verified: %o', e); // Для создания второй подписи успешная проверка не требуется.\n          // Вы можете перехватить исключение при проверке, и добавить подпись вторую.\n          // Проверка нужна только для того что бы подпись попала внутрь SignedData.\n        });\n      }).then(function (result) {\n        //console.log('sign1: %s', sign);\n        var promises = [oSigner.propset_Certificate(oCertificate), // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\n        oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY), oSigner.propset_KeyPin(pin ? pin : '')];\n        return Promise.all(promises);\n      }).then(function () {\n        return oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\n          oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n          var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\n\n          if (oCertificates.Count != 1) {\n            throw new Error(\"Не найден сертификат по SHA1\");\n          }\n\n          var oCertificate = oCertificates.Item(1);\n          oStore.Close();\n          var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\"); // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n\n          oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\n          oSignedData.Content = dataBase64;\n\n          try {\n            oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\n          } catch (e) {\n            console.log('Existing sign not verified: %o', e); // Для создания второй подписи успешная проверка не требуется.\n            // Вы можете перехватить исключение при проверке, и добавить подпись вторую.\n            // Проверка нужна только для того что бы подпись попала внутрь SignedData.\n          }\n\n          var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\n          oSigner.Certificate = oCertificate; // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\n\n          oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\n          oSigner.KeyPin = pin ? pin : '';\n          var sSignedMessage = oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\n          resolve(sSignedMessage);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Проверить подпись.\r\n   * @param {string} dataBase64\r\n   * @param {string} signBase64 существующая подпись\r\n   * @returns {Promise<boolean>} true или reject\r\n   */\n\n\n  this.verifySign = function (dataBase64, signBase64) {\n    if (canAsync) {\n      var oSignedData;\n      return cadesplugin.then(function () {\n        return cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\");\n      }).then(function (object) {\n        oSignedData = object; // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n\n        return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n      }).then(function () {\n        return oSignedData.propset_Content(dataBase64);\n      }).then(function () {\n        return oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\n      }).then(function () {\n        //console.log('sign2: %s', sign2);\n        return true;\n      }).catch(function (e) {\n        console.log(arguments);\n        var err = getError(e);\n        throw new Error(err);\n      });\n    } else {\n      return new Promise(function (resolve) {\n        try {\n          var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\"); // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\n\n          oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\n          oSignedData.Content = dataBase64;\n          oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\n          resolve(true);\n        } catch (e) {\n          console.log(e);\n          var err = getError(e);\n          throw new Error(err);\n        }\n      });\n    }\n  };\n  /**\r\n   * Получить текст ошибки\r\n   * @param {Error} e\r\n   * @returns {string}\r\n   */\n\n\n  function getError(e) {\n    if (e.message) {\n      for (var i in cadesErrorMesages) {\n        if (cadesErrorMesages.hasOwnProperty(i)) {\n          if (e.message.indexOf(i) + 1) {\n            e.message = cadesErrorMesages[i];\n            break;\n          }\n        }\n      }\n    }\n\n    return e.message || e;\n  }\n  /**\r\n   * Разобрать субъект в объект DN\r\n   * @param {string} subjectName\r\n   * @returns {DN}\r\n   */\n\n\n  function parseSubject(subjectName) {\n    var dn = new DN();\n    var pairs = subjectName.match(/([а-яёА-ЯЁa-zA-Z0-9\\.]+)=(?:(\"[^\"]+?\")|(.+?))(?:,|$)/g).map(function (el) {\n      return el.replace(/,$/, '');\n    });\n    pairs.forEach(function (pair) {\n      var d = pair.match(/([^=]+)=(.*)/);\n\n      if (d.length === 3) {\n        var rdn = d[1].trim().replace(/^OID\\./, '');\n        var val = d[2].trim().replace(/^\"(.*)\"$/, '$1');\n        dn[rdn] = val;\n      }\n    });\n    return dn;\n  }\n  /**\r\n   * Получить название сертификата\r\n   * @param {DN} o объект, включающий в себя значения всех полей сертификата.\r\n   * @returns {String}\r\n   */\n\n\n  function formatCertificateName(o) {\n    var snils = o['СНИЛС'] || o['SNILS'];\n    var inn = o['ИНН'] || o['INN'];\n    return '' + o['CN'] + (inn ? '; ИНН ' + inn : '') + (snils ? '; СНИЛС ' + snils : '');\n  }\n  /**\r\n   * https://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array/28227607#28227607\r\n   * @param {string} str\r\n   * @returns {Array}\r\n   */\n\n\n  function stringToUtf8ByteArray(str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [],\n        p = 0;\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str.charCodeAt(i);\n\n      if (c < 128) {\n        out[p++] = c;\n      } else if (c < 2048) {\n        out[p++] = c >> 6 | 192;\n        out[p++] = c & 63 | 128;\n      } else if ((c & 0xFC00) == 0xD800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xFC00) == 0xDC00) {\n        // Surrogate Pair\n        c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n        out[p++] = c >> 18 | 240;\n        out[p++] = c >> 12 & 63 | 128;\n        out[p++] = c >> 6 & 63 | 128;\n        out[p++] = c & 63 | 128;\n      } else {\n        out[p++] = c >> 12 | 224;\n        out[p++] = c >> 6 & 63 | 128;\n        out[p++] = c & 63 | 128;\n      }\n    }\n\n    return out;\n  }\n}\n\nexport default CryptoProLib;","map":{"version":3,"sources":["../../src/infrastructure/CryptoProLib.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * CryptoPRO simplified library\r\n * @author Aleksandr.ru\r\n * @link http://aleksandr.ru\r\n */\r\nimport DN from 'ruscryptojs/src/DN';\r\nimport { X509KeySpec, X509PrivateKeyExportFlags, X509CertificateEnrollmentContext, X509KeyUsageFlags, X500NameFlags, EncodingType, InstallResponseRestrictionFlags, ProviderTypes, cadesErrorMesages } from 'ruscryptojs/src/CryptoPro/constants';\r\nimport { convertDN } from 'ruscryptojs/src/helpers';\r\nfunction CryptoProLib() {\r\n    //If the string contains fewer than 128 bytes, the Length field of the TLV triplet requires only one byte to specify the content length.\r\n    //If the string is more than 127 bytes, bit 7 of the Length field is set to 1 and bits 6 through 0 specify the number of additional bytes used to identify the content length.\r\n    var maxLengthCSPName = 127;\r\n    // https://www.cryptopro.ru/forum2/default.aspx?g=posts&m=38467#post38467\r\n    var asn1UTF8StringTag = 0x0c; // 12, UTF8String\r\n    var canAsync;\r\n    var binded = false;\r\n    /**\r\n     * Инициализация и проверка наличия требуемых возможностей\r\n     * @returns {Promise<Object>} версия\r\n     */\r\n    this.init = function () {\r\n        window.cadesplugin_skip_extension_install = true; // считаем что уже все установлено\r\n        window.allow_firefox_cadesplugin_async = true; // FF 52+\r\n        require('ruscryptojs/src/CryptoPro/cadesplugin_api');\r\n        canAsync = !!cadesplugin.CreateObjectAsync;\r\n        return new Promise((resolve, reject) => {\r\n            if (!window.cadesplugin) {\r\n                throw new Error('КриптоПро ЭЦП Browser plug-in не обнаружен');\r\n            }\r\n            resolve();\r\n        }).then(() => {\r\n            if (canAsync) {\r\n                return cadesplugin.then(function () {\r\n                    return cadesplugin.CreateObjectAsync(\"CAdESCOM.About\");\r\n                }).then(function (oAbout) {\r\n                    return oAbout.Version;\r\n                }).then(function (version) {\r\n                    return { version };\r\n                }).catch(function (e) {\r\n                    // 'Плагин не загружен'\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                });\r\n            }\r\n            else {\r\n                return new Promise(resolve => {\r\n                    try {\r\n                        var oAbout = cadesplugin.CreateObject(\"CAdESCOM.About\");\r\n                        if (!oAbout || !oAbout.Version) {\r\n                            throw new Error('КриптоПро ЭЦП Browser plug-in не загружен');\r\n                        }\r\n                        var CurrentPluginVersion = oAbout.Version;\r\n                        resolve({\r\n                            version: CurrentPluginVersion\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        // 'Плагин не загружен'\r\n                        var err = getError(e);\r\n                        throw new Error(err);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Включает кеширование ПИНов от контейнеров чтоб не тробовать повторного ввода\r\n     * возможно не поддерживается в ИЕ\r\n     * @see https://www.cryptopro.ru/forum2/default.aspx?g=posts&t=10170\r\n     * @param {string} userPin не используется\r\n     * @returns {Promise<boolean>} new binded state\r\n     */\r\n    this.bind = function (userPin) {\r\n        binded = true;\r\n        return Promise.resolve(binded);\r\n    };\r\n    /**\r\n     * Заглушка для совместимости\r\n     * @returns {Promise<boolean>} new binded state\r\n     */\r\n    this.unbind = function () {\r\n        binded = false;\r\n        return Promise.resolve(binded);\r\n    };\r\n    /**\r\n     * Создание CSR.\r\n     * @param {DN} dn\r\n     * @param {string} pin\r\n     * @param {array} ekuOids массив OID Extended Key Usage, по-умолчанию Аутентификация клиента '1.3.6.1.5.5.7.3.2' + Защищенная электронная почта '1.3.6.1.5.5.7.3.4'\r\n     * @param {int} providerType по умолчанию 80 (ГОСТ Р 34.10-2012) или 75 (ГОСТ Р 34.10-2001)\r\n     * @returns {Promise<Object>} объект с полями { csr: 'base64 запрос на сертификат' }\r\n     * @see DN\r\n     */\r\n    this.generateCSR = function (dn, pin, ekuOids, providerType) {\r\n        if (!ekuOids || !ekuOids.length) {\r\n            ekuOids = [\r\n                '1.3.6.1.5.5.7.3.2',\r\n                '1.3.6.1.5.5.7.3.4' // Защищенная электронная почта\r\n            ];\r\n        }\r\n        if (!providerType) {\r\n            providerType = ProviderTypes.GOST_R_34_10_2012;\r\n        }\r\n        if (canAsync) {\r\n            var oEnroll, oRequest, oPrivateKey, oExtensions, oKeyUsage, oEnhancedKeyUsage, oEnhancedKeyUsageOIDs, aOIDs, oSstOID, oDn, oCspInformations, sCSPName, oSubjectSignTool;\r\n            return cadesplugin.then(function () {\r\n                return Promise.all([\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509Enrollment'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509CertificateRequestPkcs10'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509PrivateKey'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509ExtensionKeyUsage'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509ExtensionEnhancedKeyUsage'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CObjectIds'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX500DistinguishedName'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509Extensions'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CCspInformations'),\r\n                    cadesplugin.CreateObjectAsync('X509Enrollment.CX509Extension') //9\r\n                ]);\r\n            }).then(function (objects) {\r\n                oEnroll = objects[0];\r\n                oRequest = objects[1];\r\n                oPrivateKey = objects[2];\r\n                oKeyUsage = objects[3];\r\n                oEnhancedKeyUsage = objects[4];\r\n                oEnhancedKeyUsageOIDs = objects[5];\r\n                oDn = objects[6];\r\n                oExtensions = objects[7];\r\n                oCspInformations = objects[8];\r\n                oSubjectSignTool = objects[9];\r\n                return oCspInformations.AddAvailableCsps();\r\n            }).then(function () {\r\n                return oCspInformations.Count;\r\n            }).then(function (cnt) {\r\n                if (!cnt)\r\n                    throw new Error('No CSP informations!');\r\n                var aPromises = [];\r\n                for (var i = 0; i < cnt; i++)\r\n                    aPromises.push(oCspInformations.ItemByIndex(i));\r\n                return Promise.all(aPromises);\r\n            }).then(function (aCspInformation) {\r\n                var aPromises = [];\r\n                for (var i in aCspInformation) {\r\n                    var a = aCspInformation[i];\r\n                    aPromises.push(a.LegacyCsp);\r\n                    aPromises.push(a.Type);\r\n                    aPromises.push(a.Name);\r\n                }\r\n                return Promise.all(aPromises);\r\n            }).then(function (aCspInfo) {\r\n                var cspType, cspName;\r\n                for (var i = 0; i < aCspInfo.length; i += 3) {\r\n                    var bLegacyCsp = aCspInfo[i];\r\n                    var nType = aCspInfo[i + 1];\r\n                    var sName = aCspInfo[i + 2];\r\n                    if (bLegacyCsp && nType == providerType) {\r\n                        cspType = nType;\r\n                        cspName = sCSPName = sName;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!cspName || !cspType) {\r\n                    throw new Error('No suitable CSP!');\r\n                }\r\n                var aPromises = [\r\n                    oPrivateKey.propset_KeySpec(X509KeySpec.XCN_AT_SIGNATURE),\r\n                    oPrivateKey.propset_Existing(false),\r\n                    oPrivateKey.propset_ExportPolicy(X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG),\r\n                    oPrivateKey.propset_ProviderType(cspType),\r\n                    oPrivateKey.propset_ProviderName(cspName)\r\n                ];\r\n                if (pin)\r\n                    aPromises.push(oPrivateKey.propset_Pin(pin));\r\n                return Promise.all(aPromises);\r\n            }).then(function () {\r\n                return oRequest.InitializeFromPrivateKey(X509CertificateEnrollmentContext.ContextUser, oPrivateKey, '');\r\n            }).then(function () {\r\n                return oKeyUsage.InitializeEncode(X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE |\r\n                    X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE |\r\n                    X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE |\r\n                    X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE);\r\n            }).then(function () {\r\n                var promises = [];\r\n                for (var i = 0; i < ekuOids.length; i++) {\r\n                    promises.push(cadesplugin.CreateObjectAsync('X509Enrollment.CObjectId'));\r\n                }\r\n                return Promise.all(promises);\r\n            }).then(function (objects) {\r\n                aOIDs = objects;\r\n                var promises = [];\r\n                for (var i = 0; i < ekuOids.length; i++) {\r\n                    aOIDs[i].InitializeFromValue(ekuOids[i]);\r\n                }\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                var promises = [];\r\n                for (var i = 0; i < ekuOids.length; i++) {\r\n                    oEnhancedKeyUsageOIDs.Add(aOIDs[i]);\r\n                }\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                return cadesplugin.CreateObjectAsync('X509Enrollment.CObjectId');\r\n            }).then(function (oid) {\r\n                oSstOID = oid;\r\n                return oSstOID.InitializeFromValue('1.2.643.100.111'); // Subject Sign Tool\r\n            }).then(function () {\r\n                var shortName = sCSPName.slice(0, maxLengthCSPName);\r\n                var utf8arr = stringToUtf8ByteArray(shortName);\r\n                utf8arr.unshift(asn1UTF8StringTag, utf8arr.length);\r\n                var base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(utf8arr)));\r\n                //return oSubjectSignTool.Initialize(oSstOID, EncodingType.XCN_CRYPT_STRING_BINARY, utf8string); // не работает на винде\r\n                return oSubjectSignTool.Initialize(oSstOID, EncodingType.XCN_CRYPT_STRING_BASE64, base64String);\r\n            }).then(function () {\r\n                return oEnhancedKeyUsage.InitializeEncode(oEnhancedKeyUsageOIDs);\r\n            }).then(function () {\r\n                return oRequest.X509Extensions;\r\n            }).then(function (ext) {\r\n                oExtensions = ext;\r\n                return Promise.all([\r\n                    oExtensions.Add(oKeyUsage),\r\n                    oExtensions.Add(oEnhancedKeyUsage),\r\n                    oExtensions.Add(oSubjectSignTool)\r\n                ]);\r\n            }).then(function () {\r\n                var strName = dn.toString();\r\n                return oDn.Encode(strName, X500NameFlags.XCN_CERT_X500_NAME_STR);\r\n            }).then(function () {\r\n                return oRequest.propset_Subject(oDn);\r\n            }).then(function () {\r\n                return oEnroll.InitializeFromRequest(oRequest);\r\n            }).then(function () {\r\n                return oEnroll.CreateRequest(EncodingType.XCN_CRYPT_STRING_BASE64);\r\n            }).then(function (csr) {\r\n                return { csr };\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oCspInformations = cadesplugin.CreateObject('X509Enrollment.CCspInformations');\r\n                    var oEnroll = cadesplugin.CreateObject('X509Enrollment.CX509Enrollment');\r\n                    var oRequest = cadesplugin.CreateObject('X509Enrollment.CX509CertificateRequestPkcs10');\r\n                    var oPrivateKey = cadesplugin.CreateObject('X509Enrollment.CX509PrivateKey');\r\n                    var oKeyUsage = cadesplugin.CreateObject('X509Enrollment.CX509ExtensionKeyUsage');\r\n                    var oEnhancedKeyUsage = cadesplugin.CreateObject('X509Enrollment.CX509ExtensionEnhancedKeyUsage');\r\n                    var oEnhancedKeyUsageOIDs = cadesplugin.CreateObject('X509Enrollment.CObjectIds');\r\n                    var oDn = cadesplugin.CreateObject('X509Enrollment.CX500DistinguishedName');\r\n                    var oExtensions = cadesplugin.CreateObject('X509Enrollment.CX509Extensions');\r\n                    var cspType, cspName;\r\n                    oCspInformations.AddAvailableCsps();\r\n                    for (var i = 0; i < oCspInformations.Count; i++) {\r\n                        var oCspInfo = oCspInformations.ItemByIndex(i);\r\n                        if (oCspInfo.LegacyCsp && oCspInfo.Type == providerType) {\r\n                            cspType = oCspInfo.Type;\r\n                            cspName = oCspInfo.Name;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!cspName || !cspType) {\r\n                        throw new Error('No suitable CSP!');\r\n                    }\r\n                    oPrivateKey.KeySpec = X509KeySpec.XCN_AT_SIGNATURE;\r\n                    oPrivateKey.Existing = false;\r\n                    oPrivateKey.ExportPolicy = X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG;\r\n                    oPrivateKey.ProviderName = cspName;\r\n                    oPrivateKey.ProviderType = cspType;\r\n                    // под виндой нельзя задать ПИН тк не дает доступа\r\n                    //oPrivateKey.Pin = pin; //CX509PrivateKey::put_Pin: Access is denied. 0x80070005 (WIN32: 5)\r\n                    oRequest.InitializeFromPrivateKey(X509CertificateEnrollmentContext.ContextUser, oPrivateKey, '');\r\n                    oKeyUsage.InitializeEncode(X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE |\r\n                        X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE |\r\n                        X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE |\r\n                        X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE);\r\n                    var aEnhancedKeyUsageOIDs = [];\r\n                    for (var i = 0; i < ekuOids.length; i++) {\r\n                        aEnhancedKeyUsageOIDs.push(cadesplugin.CreateObject('X509Enrollment.CObjectId'));\r\n                        aEnhancedKeyUsageOIDs[i].InitializeFromValue(ekuOids[i]);\r\n                        oEnhancedKeyUsageOIDs.Add(aEnhancedKeyUsageOIDs[i]);\r\n                    }\r\n                    oEnhancedKeyUsage.InitializeEncode(oEnhancedKeyUsageOIDs);\r\n                    oRequest.X509Extensions.Add(oKeyUsage);\r\n                    oRequest.X509Extensions.Add(oEnhancedKeyUsage);\r\n                    //subject sign tool\r\n                    var ssOID = cadesplugin.CreateObject('X509Enrollment.CObjectId');\r\n                    ssOID.InitializeFromValue('1.2.643.100.111');\r\n                    var shortName = cspName.slice(0, maxLengthCSPName);\r\n                    var utf8arr = stringToUtf8ByteArray(shortName);\r\n                    utf8arr.unshift(asn1UTF8StringTag, shortName.length);\r\n                    var base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(utf8arr)));\r\n                    var oSubjectSignTool = cadesplugin.CreateObject('X509Enrollment.CX509Extension');\r\n                    oSubjectSignTool.Initialize(ssOID, EncodingType.XCN_CRYPT_STRING_BASE64, base64String);\r\n                    oRequest.X509Extensions.Add(oSubjectSignTool);\r\n                    var strName = dn.toString();\r\n                    oDn.Encode(strName, X500NameFlags.XCN_CERT_X500_NAME_STR);\r\n                    oRequest.Subject = oDn;\r\n                    oEnroll.InitializeFromRequest(oRequest);\r\n                    var csr = oEnroll.CreateRequest(EncodingType.XCN_CRYPT_STRING_BASE64);\r\n                    resolve({ csr });\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Запись сертификата.\r\n     * @param {string} certBase64\r\n     * @returns {Promise<string>} thumbprint\r\n     */\r\n    this.writeCertificate = function (certBase64) {\r\n        if (canAsync) {\r\n            var oEnroll, existingSha = [];\r\n            return this.listCertificates().then(function (certs) {\r\n                for (var i in certs) {\r\n                    existingSha.push(certs[i].shift());\r\n                }\r\n                return cadesplugin.CreateObjectAsync('X509Enrollment.CX509Enrollment');\r\n            }).then(function (enroll) {\r\n                oEnroll = enroll;\r\n                return oEnroll.Initialize(X509CertificateEnrollmentContext.ContextUser);\r\n            }).then(function () {\r\n                return oEnroll.InstallResponse(InstallResponseRestrictionFlags.AllowNone, certBase64, EncodingType.XCN_CRYPT_STRING_BASE64, '');\r\n            }).then(this.listCertificates).then(function (certs) {\r\n                for (var i in certs) {\r\n                    var sha = certs[i].shift();\r\n                    if (existingSha.indexOf(sha) < 0) {\r\n                        return sha;\r\n                    }\r\n                }\r\n                throw new Error('Не удалось найти установленный сертификат по отпечатку');\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var existingSha = [];\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates;\r\n                    for (var i = 1; i <= oCertificates.Count; i++) {\r\n                        existingSha.push(oCertificates.Item(i).Thumbprint);\r\n                    }\r\n                    oStore.Close();\r\n                    var oEnroll = cadesplugin.CreateObject('X509Enrollment.CX509Enrollment');\r\n                    oEnroll.Initialize(X509CertificateEnrollmentContext.ContextUser);\r\n                    oEnroll.InstallResponse(InstallResponseRestrictionFlags.AllowNone, certBase64, EncodingType.XCN_CRYPT_STRING_BASE64, '');\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates;\r\n                    var found = false;\r\n                    for (var i = 1; i <= oCertificates.Count; i++) {\r\n                        var sha = oCertificates.Item(i).Thumbprint;\r\n                        if (existingSha.indexOf(sha) < 0) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    oStore.Close();\r\n                    if (found) {\r\n                        resolve(sha);\r\n                    }\r\n                    else {\r\n                        throw new Error('Не удалось найти установленный сертификат по отпечатку');\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Получение информации о сертификате.\r\n     * @param {string} certThumbprint\r\n     * @returns {Promise<Object>}\r\n     */\r\n    this.certificateInfo = function (certThumbprint) {\r\n        var infoToString = function () {\r\n            return 'Название:              ' + this.Name +\r\n                '\\nИздатель:              ' + this.IssuerName +\r\n                '\\nСубъект:               ' + this.SubjectName +\r\n                '\\nВерсия:                ' + this.Version +\r\n                '\\nСерийный №:            ' + this.SerialNumber +\r\n                '\\nОтпечаток SHA1:        ' + this.Thumbprint +\r\n                '\\nНе действителен до:    ' + this.ValidFromDate +\r\n                '\\nНе действителен после: ' + this.ValidToDate +\r\n                '\\nПриватный ключ:        ' + (this.HasPrivateKey ? 'Есть' : 'Нет') +\r\n                '\\nВалидный:              ' + (this.IsValid ? 'Да' : 'Нет');\r\n        };\r\n        if (canAsync) {\r\n            var oStore, oCertificates, oCertificate, oInfo = {};\r\n            return cadesplugin.then(function () {\r\n                return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\r\n            }).then(function (o) {\r\n                oStore = o;\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n            }).then(function (certificates) {\r\n                oCertificates = certificates;\r\n                return oCertificates.Count;\r\n            }).then(function (count) {\r\n                if (count != 1)\r\n                    throw new Error('Не обнаружено сертификатов c указанным SHA1');\r\n                return oCertificates.Item(1);\r\n            }).then(function (certificate) {\r\n                oCertificate = certificate;\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                var promises = [\r\n                    oCertificate.IssuerName,\r\n                    oCertificate.SerialNumber,\r\n                    oCertificate.SubjectName,\r\n                    oCertificate.Thumbprint,\r\n                    oCertificate.ValidFromDate,\r\n                    oCertificate.ValidToDate,\r\n                    oCertificate.Version\r\n                ];\r\n                return Promise.all(promises);\r\n            }).then(function (a) {\r\n                oInfo = {\r\n                    HasPrivateKey: true,\r\n                    IsValid: undefined,\r\n                    //TODO: Issuer object\r\n                    IssuerName: a[0],\r\n                    SerialNumber: a[1],\r\n                    SubjectName: a[2],\r\n                    Subject: undefined,\r\n                    Name: undefined,\r\n                    Thumbprint: a[3],\r\n                    ValidFromDate: new Date(a[4]),\r\n                    ValidToDate: new Date(a[5]),\r\n                    Version: a[6]\r\n                };\r\n                return true;\r\n            }).then(function (result) {\r\n                var oParesedSubj = parseSubject(oInfo.SubjectName);\r\n                oParesedSubj = convertDN(oParesedSubj);\r\n                oInfo.Subject = oParesedSubj;\r\n                oInfo.Name = oParesedSubj['CN'];\r\n                oInfo.IsValid = result;\r\n                oInfo.toString = infoToString;\r\n                return oInfo;\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n                    if (oCertificates.Count != 1) {\r\n                        throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\r\n                    }\r\n                    var oCertificate = oCertificates.Item(1);\r\n                    oStore.Close();\r\n                    var oParesedSubj = parseSubject(oCertificate.SubjectName);\r\n                    oParesedSubj = convertDN(oParesedSubj);\r\n                    var oInfo = {\r\n                        HasPrivateKey: undefined,\r\n                        IsValid: true,\r\n                        //TODO: Issuer object\r\n                        IssuerName: oCertificate.IssuerName,\r\n                        SerialNumber: oCertificate.SerialNumber,\r\n                        SubjectName: oCertificate.SubjectName,\r\n                        Subject: oParesedSubj,\r\n                        Name: oParesedSubj['CN'],\r\n                        Thumbprint: oCertificate.Thumbprint,\r\n                        ValidFromDate: new Date(oCertificate.ValidFromDate),\r\n                        ValidToDate: new Date(oCertificate.ValidToDate),\r\n                        Version: oCertificate.Version\r\n                    };\r\n                    oInfo.toString = infoToString;\r\n                    resolve(oInfo);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Получение массива доступных сертификатов\r\n     * @returns {Promise<Array>} [ {id: thumbprint, name: subject}, ...]\r\n     */\r\n    this.listCertificates = function () {\r\n        if (canAsync) {\r\n            var oStore, oCertificates, ret;\r\n            return cadesplugin.then(function () {\r\n                return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\r\n            }).then(function (store) {\r\n                oStore = store;\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                oCertificates = certificates;\r\n                return certificates.Count;\r\n            }).then(function (count) {\r\n                if (count < 1)\r\n                    throw new Error('Не обнаружено сертификатов');\r\n                var certs = [];\r\n                for (var i = 1; i <= count; i++)\r\n                    certs.push(oCertificates.Item(i));\r\n                return Promise.all(certs);\r\n            }).then(function (certificates) {\r\n                var certs = [];\r\n                for (var i in certificates)\r\n                    certs.push(certificates[i].SubjectName, certificates[i].Thumbprint);\r\n                return Promise.all(certs);\r\n            }).then(function (subjects) {\r\n                var certs = [];\r\n                for (var i = 0; i < subjects.length; i += 2) {\r\n                    if (!subjects[i]) {\r\n                        continue;\r\n                    }\r\n                    var oDN = parseSubject(subjects[i]);\r\n                    certs.push({\r\n                        id: subjects[i + 1],\r\n                        name: formatCertificateName(oDN)\r\n                    });\r\n                }\r\n                ret = certs;\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                return ret;\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates;\r\n                    var certs = [];\r\n                    for (var i = 1; i <= oCertificates.Count; i++) {\r\n                        var oCertificate = oCertificates.Item(i);\r\n                        var oDN = parseSubject(oCertificate.SubjectName);\r\n                        certs.push({\r\n                            id: oCertificate.Thumbprint,\r\n                            name: formatCertificateName(oDN)\r\n                        });\r\n                    }\r\n                    oStore.Close();\r\n                    resolve(certs);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Чтение сертификата\r\n     * @param {string} certThumbprint\r\n     * @returns {Promise<string>} base64\r\n     */\r\n    this.readCertificate = function (certThumbprint) {\r\n        if (canAsync) {\r\n            var oStore, oCertificates, oCertificate;\r\n            return cadesplugin.then(function () {\r\n                return cadesplugin.CreateObjectAsync(\"CAPICOM.Store\");\r\n            }).then(function (o) {\r\n                oStore = o;\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n            }).then(function (certificates) {\r\n                oCertificates = certificates;\r\n                return oCertificates.Count;\r\n            }).then(function (count) {\r\n                if (count != 1) {\r\n                    throw new Error('Не обнаружено сертификатов c указанным SHA1');\r\n                }\r\n                return oCertificates.Item(1);\r\n            }).then(function (certificate) {\r\n                oCertificate = certificate;\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                return oCertificate.Export(cadesplugin.CADESCOM_ENCODE_BASE64);\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n                    if (oCertificates.Count != 1) {\r\n                        throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\r\n                    }\r\n                    var oCertificate = oCertificates.Item(1);\r\n                    oStore.Close();\r\n                    var data = oCertificate.Export(cadesplugin.CADESCOM_ENCODE_BASE64);\r\n                    resolve(data);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Подпись данных (отсоединенная).\r\n     * @param {string} dataBase64\r\n     * @param {string} certThumbprint\r\n     * @param {string} pin будет запрошен, если отсутствует\r\n     * @returns {Promise<string>} base64\r\n     */\r\n    this.signData = function (dataBase64, certThumbprint, pin) {\r\n        if (canAsync) {\r\n            var oStore, oCertificates, oCertificate, oSigner, oSignedData;\r\n            return cadesplugin.then(function () {\r\n                return Promise.all([\r\n                    cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")\r\n                ]);\r\n            }).then(function (objects) {\r\n                oStore = objects[0];\r\n                oSigner = objects[1];\r\n                oSignedData = objects[2];\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n            }).then(function (certificates) {\r\n                oCertificates = certificates;\r\n                return oCertificates.Count;\r\n            }).then(function (count) {\r\n                if (count != 1) {\r\n                    throw new Error('Не обнаружено сертификатов c указанным SHA1');\r\n                }\r\n                return oCertificates.Item(1);\r\n            }).then(function (certificate) {\r\n                oCertificate = certificate;\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                return oCertificate.PrivateKey;\r\n            }).then(function (privateKey) {\r\n                return privateKey.propset_CachePin(binded);\r\n            }).then(function () {\r\n                var promises = [\r\n                    oSigner.propset_Certificate(oCertificate),\r\n                    // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN)\r\n                    oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY)\r\n                ];\r\n                if (pin) {\r\n                    promises.push(oSigner.propset_KeyPin(pin));\r\n                }\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\r\n            }).then(function () {\r\n                return oSignedData.propset_Content(dataBase64);\r\n            }).then(function () {\r\n                return oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n                    if (oCertificates.Count != 1) {\r\n                        throw new Error(\"Не обнаружено сертификатов c указанным SHA1\");\r\n                    }\r\n                    var oCertificate = oCertificates.Item(1);\r\n                    oStore.Close();\r\n                    if (oCertificate.PrivateKey && oCertificate.PrivateKey.CachePin !== undefined) {\r\n                        // возможно не поддерживается в ИЕ\r\n                        // https://www.cryptopro.ru/forum2/default.aspx?g=posts&t=10170\r\n                        oCertificate.PrivateKey.CachePin = binded;\r\n                    }\r\n                    var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\r\n                    oSigner.Certificate = oCertificate;\r\n                    // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\r\n                    oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\r\n                    if (pin) {\r\n                        oSigner.KeyPin = pin;\r\n                    }\r\n                    var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\");\r\n                    // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                    oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\r\n                    oSignedData.Content = dataBase64;\r\n                    var sSignedMessage = oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\r\n                    resolve(sSignedMessage);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Совместная подпись данных (двумя сертификатами).\r\n     * @param {string} dataBase64\r\n     * @param {string} certThumbprint SHA1 отпечаток первого сертификата\r\n     * @param {string} pin будет запрошен, если отсутствует\r\n     * @param {string} certThumbprint2 SHA1 отпечаток второго сертификата\r\n     * @param {string} pin2 будет запрошен, если отсутствует\r\n     * @returns {Promise<string>} base64\r\n     */\r\n    this.signData2 = function (dataBase64, certThumbprint, pin, certThumbprint2, pin2) {\r\n        if (canAsync) {\r\n            var oStore, oCertificate, oCertificate2, oSigner, oSignedData;\r\n            return cadesplugin.then(function () {\r\n                return Promise.all([\r\n                    cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")\r\n                ]);\r\n            }).then(function (objects) {\r\n                oStore = objects[0];\r\n                oSigner = objects[1];\r\n                oSignedData = objects[2];\r\n                if (!oStore) {\r\n                    throw new Error('Не обнаружено хранилище');\r\n                }\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                return Promise.all([\r\n                    certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint),\r\n                    certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint2)\r\n                ]);\r\n            }).then(function (certs) {\r\n                return Promise.all([\r\n                    certs[0].Count,\r\n                    certs[0].Item(1),\r\n                    certs[1].Count,\r\n                    certs[1].Item(1)\r\n                ]);\r\n            }).then(function (certificates) {\r\n                if (certificates[0] != 1)\r\n                    new Error('Не найден сертификат по SHA1');\r\n                if (certificates[2] != 1)\r\n                    new Error('Не найден сертификат-2 по SHA1');\r\n                oCertificate = certificates[1];\r\n                oCertificate2 = certificates[3];\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\r\n            }).then(function () {\r\n                return oSignedData.propset_Content(dataBase64);\r\n            }).then(function () {\r\n                var promises = [\r\n                    oSigner.propset_Certificate(oCertificate),\r\n                    // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\r\n                    oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY),\r\n                    oSigner.propset_KeyPin(pin ? pin : '')\r\n                ];\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                return oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\r\n            }).then(function (sign) {\r\n                //console.log('sign1: %s', sign);\r\n                var promises = [\r\n                    oSigner.propset_Certificate(oCertificate2),\r\n                    // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\r\n                    oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY),\r\n                    oSigner.propset_KeyPin(pin2 ? pin2 : '')\r\n                ];\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                return oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n                    if (oCertificates.Count != 1) {\r\n                        throw new Error(\"Не найден сертификат по SHA1\");\r\n                    }\r\n                    var oCertificate = oCertificates.Item(1);\r\n                    var oCertificates2 = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint2);\r\n                    if (oCertificates2.Count != 1) {\r\n                        throw new Error(\"Не найден сертификат-2 по SHA1\");\r\n                    }\r\n                    var oCertificate2 = oCertificates2.Item(1);\r\n                    oStore.Close();\r\n                    var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\");\r\n                    // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                    oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\r\n                    oSignedData.Content = dataBase64;\r\n                    var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\r\n                    oSigner.Certificate = oCertificate;\r\n                    // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\r\n                    oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\r\n                    oSigner.KeyPin = pin ? pin : '';\r\n                    var sSignedMessage = oSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\r\n                    oSigner.Certificate = oCertificate2;\r\n                    // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\r\n                    oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\r\n                    oSigner.KeyPin = pin2 ? pin2 : '';\r\n                    var sSignedMessage2 = oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\r\n                    resolve(sSignedMessage2);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Добавить подпись к существующей.\r\n     * @param {string} dataBase64\r\n     * @param {string} signBase64 существующая подпись\r\n     * @param {string} certThumbprint SHA1 отпечаток первого сертификата\r\n     * @param {string} pin будет запрошен, если отсутствует\r\n     * @returns {Promise<string>} base64\r\n     */\r\n    this.addSign = function (dataBase64, signBase64, certThumbprint, pin) {\r\n        if (canAsync) {\r\n            var oStore, oCertificate, oSigner, oSignedData;\r\n            return cadesplugin.then(function () {\r\n                return Promise.all([\r\n                    cadesplugin.CreateObjectAsync(\"CAPICOM.Store\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\"),\r\n                    cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\")\r\n                ]);\r\n            }).then(function (objects) {\r\n                oStore = objects[0];\r\n                oSigner = objects[1];\r\n                oSignedData = objects[2];\r\n                if (!oStore) {\r\n                    throw new Error('Не обнаружено хранилище');\r\n                }\r\n                return oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n            }).then(function () {\r\n                return oStore.Certificates;\r\n            }).then(function (certificates) {\r\n                return certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n            }).then(function (certs) {\r\n                return Promise.all([\r\n                    certs.Count,\r\n                    certs.Item(1)\r\n                ]);\r\n            }).then(function (certificates) {\r\n                if (certificates[0] != 1)\r\n                    new Error('Не найден сертификат по SHA1');\r\n                oCertificate = certificates[1];\r\n                return oStore.Close();\r\n            }).then(function () {\r\n                // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\r\n            }).then(function () {\r\n                return oSignedData.propset_Content(dataBase64);\r\n            }).then(function () {\r\n                return oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true).catch(function (e) {\r\n                    console.log('Existing sign not verified: %o', e);\r\n                    // Для создания второй подписи успешная проверка не требуется.\r\n                    // Вы можете перехватить исключение при проверке, и добавить подпись вторую.\r\n                    // Проверка нужна только для того что бы подпись попала внутрь SignedData.\r\n                });\r\n            }).then(function (result) {\r\n                //console.log('sign1: %s', sign);\r\n                var promises = [\r\n                    oSigner.propset_Certificate(oCertificate),\r\n                    // oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN),\r\n                    oSigner.propset_Options(cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY),\r\n                    oSigner.propset_KeyPin(pin ? pin : '')\r\n                ];\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                return oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oStore = cadesplugin.CreateObject(\"CAPICOM.Store\");\r\n                    oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\r\n                    var oCertificates = oStore.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, certThumbprint);\r\n                    if (oCertificates.Count != 1) {\r\n                        throw new Error(\"Не найден сертификат по SHA1\");\r\n                    }\r\n                    var oCertificate = oCertificates.Item(1);\r\n                    oStore.Close();\r\n                    var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\");\r\n                    // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                    oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\r\n                    oSignedData.Content = dataBase64;\r\n                    try {\r\n                        oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\r\n                    }\r\n                    catch (e) {\r\n                        console.log('Existing sign not verified: %o', e);\r\n                        // Для создания второй подписи успешная проверка не требуется.\r\n                        // Вы можете перехватить исключение при проверке, и добавить подпись вторую.\r\n                        // Проверка нужна только для того что бы подпись попала внутрь SignedData.\r\n                    }\r\n                    var oSigner = cadesplugin.CreateObject(\"CAdESCOM.CPSigner\");\r\n                    oSigner.Certificate = oCertificate;\r\n                    // oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN;\r\n                    oSigner.Options = cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY;\r\n                    oSigner.KeyPin = pin ? pin : '';\r\n                    var sSignedMessage = oSignedData.CoSignCades(oSigner, cadesplugin.CADESCOM_CADES_BES);\r\n                    resolve(sSignedMessage);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Проверить подпись.\r\n     * @param {string} dataBase64\r\n     * @param {string} signBase64 существующая подпись\r\n     * @returns {Promise<boolean>} true или reject\r\n     */\r\n    this.verifySign = function (dataBase64, signBase64) {\r\n        if (canAsync) {\r\n            var oSignedData;\r\n            return cadesplugin.then(function () {\r\n                return cadesplugin.CreateObjectAsync(\"CAdESCOM.CadesSignedData\");\r\n            }).then(function (object) {\r\n                oSignedData = object;\r\n                // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                return oSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\r\n            }).then(function () {\r\n                return oSignedData.propset_Content(dataBase64);\r\n            }).then(function () {\r\n                return oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\r\n            }).then(function () {\r\n                //console.log('sign2: %s', sign2);\r\n                return true;\r\n            }).catch(function (e) {\r\n                console.log(arguments);\r\n                var err = getError(e);\r\n                throw new Error(err);\r\n            });\r\n        }\r\n        else {\r\n            return new Promise(resolve => {\r\n                try {\r\n                    var oSignedData = cadesplugin.CreateObject(\"CAdESCOM.CadesSignedData\");\r\n                    // Значение свойства ContentEncoding должно быть задано до заполнения свойства Content\r\n                    oSignedData.ContentEncoding = cadesplugin.CADESCOM_BASE64_TO_BINARY;\r\n                    oSignedData.Content = dataBase64;\r\n                    oSignedData.VerifyCades(signBase64, cadesplugin.CADESCOM_CADES_BES, true);\r\n                    resolve(true);\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                    var err = getError(e);\r\n                    throw new Error(err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Получить текст ошибки\r\n     * @param {Error} e\r\n     * @returns {string}\r\n     */\r\n    function getError(e) {\r\n        if (e.message) {\r\n            for (var i in cadesErrorMesages) {\r\n                if (cadesErrorMesages.hasOwnProperty(i)) {\r\n                    if (e.message.indexOf(i) + 1) {\r\n                        e.message = cadesErrorMesages[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return e.message || e;\r\n    }\r\n    /**\r\n     * Разобрать субъект в объект DN\r\n     * @param {string} subjectName\r\n     * @returns {DN}\r\n     */\r\n    function parseSubject(subjectName) {\r\n        var dn = new DN;\r\n        var pairs = subjectName.match(/([а-яёА-ЯЁa-zA-Z0-9\\.]+)=(?:(\"[^\"]+?\")|(.+?))(?:,|$)/g).map(el => el.replace(/,$/, ''));\r\n        pairs.forEach(pair => {\r\n            var d = pair.match(/([^=]+)=(.*)/);\r\n            if (d.length === 3) {\r\n                var rdn = d[1].trim().replace(/^OID\\./, '');\r\n                var val = d[2].trim().replace(/^\"(.*)\"$/, '$1');\r\n                dn[rdn] = val;\r\n            }\r\n        });\r\n        return dn;\r\n    }\r\n    /**\r\n     * Получить название сертификата\r\n     * @param {DN} o объект, включающий в себя значения всех полей сертификата.\r\n     * @returns {String}\r\n     */\r\n    function formatCertificateName(o) {\r\n        var snils = o['СНИЛС'] || o['SNILS'];\r\n        var inn = o['ИНН'] || o['INN'];\r\n        return '' + o['CN'] + (inn ? '; ИНН ' + inn : '') + (snils ? '; СНИЛС ' + snils : '');\r\n    }\r\n    /**\r\n     * https://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array/28227607#28227607\r\n     * @param {string} str\r\n     * @returns {Array}\r\n     */\r\n    function stringToUtf8ByteArray(str) {\r\n        // TODO(user): Use native implementations if/when available\r\n        var out = [], p = 0;\r\n        for (var i = 0; i < str.length; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if (c < 128) {\r\n                out[p++] = c;\r\n            }\r\n            else if (c < 2048) {\r\n                out[p++] = (c >> 6) | 192;\r\n                out[p++] = (c & 63) | 128;\r\n            }\r\n            else if (((c & 0xFC00) == 0xD800) && (i + 1) < str.length &&\r\n                ((str.charCodeAt(i + 1) & 0xFC00) == 0xDC00)) {\r\n                // Surrogate Pair\r\n                c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\r\n                out[p++] = (c >> 18) | 240;\r\n                out[p++] = ((c >> 12) & 63) | 128;\r\n                out[p++] = ((c >> 6) & 63) | 128;\r\n                out[p++] = (c & 63) | 128;\r\n            }\r\n            else {\r\n                out[p++] = (c >> 12) | 224;\r\n                out[p++] = ((c >> 6) & 63) | 128;\r\n                out[p++] = (c & 63) | 128;\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n}\r\nexport default CryptoProLib;\r\n//# sourceMappingURL=CryptoProLib.js.map"]},"metadata":{},"sourceType":"module"}