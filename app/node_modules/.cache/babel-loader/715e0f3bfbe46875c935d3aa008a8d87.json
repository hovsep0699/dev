{"ast":null,"code":"import React from'react';import{Icons,Dropdown,Loading}from'@distate/components';import{NEW_FOLDER}from'../../../../common/Lbl';import{FolderForm}from'../form';import{HTMLContainer,HTMLBody,HTMLDropdown,HTMLButton}from'./dropdown.style';export var Dropdonw=function Dropdonw(_ref){var isLoading=_ref.isLoading,onSubmit=_ref.onSubmit,defaultValue=_ref.defaultValue;return/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(HTMLDropdown,{width:\"213px\",trigger:/*#__PURE__*/React.createElement(HTMLButton,{solid:true,icon:/*#__PURE__*/React.createElement(Icons.IconPlus,{fill:'#fff'})})},isLoading&&/*#__PURE__*/React.createElement(Loading,{isRelative:false}),/*#__PURE__*/React.createElement(Dropdown.Header,null,NEW_FOLDER),/*#__PURE__*/React.createElement(HTMLBody,null,/*#__PURE__*/React.createElement(FolderForm,{defaultValue:defaultValue,onSubmit:onSubmit}))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/components/dropdown/dropdown.tsx"],"names":["React","Icons","Dropdown","Loading","NEW_FOLDER","FolderForm","HTMLContainer","HTMLBody","HTMLDropdown","HTMLButton","Dropdonw","isLoading","onSubmit","defaultValue"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,CAA0BC,OAA1B,KAAyC,qBAAzC,CAEA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,UAAT,KAA2B,SAA3B,CAEA,OAASC,aAAT,CAAwBC,QAAxB,CAAkCC,YAAlC,CAAgDC,UAAhD,KAAkE,kBAAlE,CAQA,MAAO,IAAMC,CAAAA,QAA6B,CAAG,QAAhCA,CAAAA,QAAgC,MAA2C,IAAxCC,CAAAA,SAAwC,MAAxCA,SAAwC,CAA7BC,QAA6B,MAA7BA,QAA6B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACtF,mBACE,oBAAC,aAAD,mBACE,oBAAC,YAAD,EACE,KAAK,CAAC,OADR,CAEE,OAAO,cAAE,oBAAC,UAAD,EAAY,KAAK,KAAjB,CAAkB,IAAI,cAAE,oBAAC,KAAD,CAAO,QAAP,EAAgB,IAAI,CAAE,MAAtB,EAAxB,EAFX,EAIGF,SAAS,eAAI,oBAAC,OAAD,EAAS,UAAU,CAAE,KAArB,EAJhB,cAKE,oBAAC,QAAD,CAAU,MAAV,MAAkBP,UAAlB,CALF,cAME,oBAAC,QAAD,mBACE,oBAAC,UAAD,EAAY,YAAY,CAAES,YAA1B,CAAwC,QAAQ,CAAED,QAAlD,EADF,CANF,CADF,CADF,CAcD,CAfM","sourcesContent":["import React from 'react';\r\nimport { Icons, Dropdown, Loading } from '@distate/components';\r\n\r\nimport { NEW_FOLDER } from '../../../../common/Lbl';\r\nimport { FolderForm } from '../form';\r\nimport { FormSubmitAction } from '../../helpers/folder.typings';\r\nimport { HTMLContainer, HTMLBody, HTMLDropdown, HTMLButton } from './dropdown.style';\r\n\r\nexport interface IDropdonw {\r\n  isLoading?: boolean;\r\n  onSubmit?: (values: FormSubmitAction) => void;\r\n  defaultValue?: FormSubmitAction;\r\n}\r\n\r\nexport const Dropdonw: React.FC<IDropdonw> = ({ isLoading, onSubmit, defaultValue }) => {\r\n  return (\r\n    <HTMLContainer>\r\n      <HTMLDropdown\r\n        width=\"213px\"\r\n        trigger={<HTMLButton solid icon={<Icons.IconPlus fill={'#fff'} />} />}\r\n      >\r\n        {isLoading && <Loading isRelative={false} />}\r\n        <Dropdown.Header>{NEW_FOLDER}</Dropdown.Header>\r\n        <HTMLBody>\r\n          <FolderForm defaultValue={defaultValue} onSubmit={onSubmit} />\r\n        </HTMLBody>\r\n      </HTMLDropdown>\r\n    </HTMLContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}