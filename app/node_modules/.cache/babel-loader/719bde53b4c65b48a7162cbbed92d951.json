{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Сведения о грузоотправителе(строка 3 счет-фактуры) (ГрузОт)\r\n*/\nimport ParticipantType from '../../standard_element/participant/ParticipantType';\nimport CargoFromTheSame from './cargo_from/CargoFromTheSame';\nimport CargoFromEmpty from './cargo_from/CargoFromEmpty';\nimport CargoFromUserInput from './cargo_from/CargoFromUserInput';\n\nvar CargoFrom = /*#__PURE__*/function () {\n  _createClass(CargoFrom, null, [{\n    key: \"validate\",\n    value: function validate(values) {\n      var errorMsgs = [];\n      CargoFrom.VOs.forEach(function (DomainVO) {\n        values.forEach(function (val) {\n          var msg = DomainVO.validate(val[DomainVO.field]);\n\n          if (msg !== undefined) {\n            errorMsgs.push(msg);\n          }\n        });\n      });\n      return errorMsgs.length > 0 ? 'ГрузОт заполнено неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !CargoFrom.validate(value);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Грузоотправитель';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Указывается, если грузоотправитель не совпадает с продавцом';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'cargoFrom';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [ParticipantType];\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return [CargoFromEmpty, CargoFromTheSame, CargoFromUserInput];\n    }\n  }]);\n\n  function CargoFrom(participant) {\n    _classCallCheck(this, CargoFrom);\n\n    this.participant = participant;\n  }\n\n  _createClass(CargoFrom, [{\n    key: \"clone\",\n    value: function clone() {\n      return new CargoFrom(this.participant);\n    }\n  }, {\n    key: \"participant\",\n    get: function get() {\n      return this._participant;\n    },\n    set: function set(value) {\n      this._participant = value;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.participant;\n    }\n  }]);\n\n  return CargoFrom;\n}();\n\nexport default CargoFrom;","map":{"version":3,"sources":["../../../../../../src/domain/documents/invoice/vo/invoice/CargoFrom.js"],"names":[],"mappings":";;;AAAA;;;AAGA,OAAO,eAAP,MAA4B,oDAA5B;AACA,OAAO,gBAAP,MAA6B,+BAA7B;AACA,OAAO,cAAP,MAA2B,6BAA3B;AACA,OAAO,kBAAP,MAA+B,iCAA/B;;IAEM,S;;;6BACY,M,EAAM;AACpB,UAAM,SAAS,GAAG,EAAlB;AACA,MAAA,SAAS,CAAC,GAAV,CAAc,OAAd,CAAsB,UAAC,QAAD,EAAa;AACjC,QAAA,MAAM,CAAC,OAAP,CAAe,UAAC,GAAD,EAAQ;AACrB,cAAM,GAAG,GAAG,QAAQ,CAAC,QAAT,CAAkB,GAAG,CAAC,QAAQ,CAAC,KAAV,CAArB,CAAZ;;AACA,cAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,YAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACD;AACF,SALD;AAMD,OAPD;AAQA,aAAQ,SAAS,CAAC,MAAV,GAAmB,CAApB,GAAyB,0BAAzB,GAAsD,SAA7D;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,SAAS,CAAC,QAAV,CAAmB,KAAnB,CAAR;AACD;;;wBAEc;AACb,aAAO,kBAAP;AACD;;;wBAEc;AACb,aAAO,6DAAP;AACD;;;wBAEe;AACd,aAAO,WAAP;AACD;;;wBAEa;AACZ,aAAO,CAAC,eAAD,CAAP;AACD;;;wBAEiB;AAChB,aAAO,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,kBAAnC,CAAP;AACD;;;AAED,qBAAY,WAAZ,EAAuB;AAAA;;AACrB,SAAK,WAAL,GAAmB,WAAnB;AACD;;;;4BAEI;AACH,aAAO,IAAI,SAAJ,CAAc,KAAK,WAAnB,CAAP;AACD;;;wBAEc;AACb,aAAO,KAAK,YAAZ;AACD,K;sBAEe,K,EAAK;AACnB,WAAK,YAAL,GAAoB,KAApB;AACD;;;wBAEQ;AACP,aAAO,KAAK,WAAZ;AACD;;;;;;AAGH,eAAe,SAAf","sourceRoot":"","sourcesContent":["/*\r\n  Сведения о грузоотправителе(строка 3 счет-фактуры) (ГрузОт)\r\n*/\r\nimport ParticipantType from '../../standard_element/participant/ParticipantType';\r\nimport CargoFromTheSame from './cargo_from/CargoFromTheSame';\r\nimport CargoFromEmpty from './cargo_from/CargoFromEmpty';\r\nimport CargoFromUserInput from './cargo_from/CargoFromUserInput';\r\nclass CargoFrom {\r\n    static validate(values) {\r\n        const errorMsgs = [];\r\n        CargoFrom.VOs.forEach((DomainVO) => {\r\n            values.forEach((val) => {\r\n                const msg = DomainVO.validate(val[DomainVO.field]);\r\n                if (msg !== undefined) {\r\n                    errorMsgs.push(msg);\r\n                }\r\n            });\r\n        });\r\n        return (errorMsgs.length > 0) ? 'ГрузОт заполнено неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !CargoFrom.validate(value);\r\n    }\r\n    static get name() {\r\n        return 'Грузоотправитель';\r\n    }\r\n    static get hint() {\r\n        return 'Указывается, если грузоотправитель не совпадает с продавцом';\r\n    }\r\n    static get field() {\r\n        return 'cargoFrom';\r\n    }\r\n    static get VOs() {\r\n        return [ParticipantType];\r\n    }\r\n    static get options() {\r\n        return [CargoFromEmpty, CargoFromTheSame, CargoFromUserInput];\r\n    }\r\n    constructor(participant) {\r\n        this.participant = participant;\r\n    }\r\n    clone() {\r\n        return new CargoFrom(this.participant);\r\n    }\r\n    get participant() {\r\n        return this._participant;\r\n    }\r\n    set participant(value) {\r\n        this._participant = value;\r\n    }\r\n    get value() {\r\n        return this.participant;\r\n    }\r\n}\r\nexport default CargoFrom;\r\n//# sourceMappingURL=CargoFrom.js.map"]},"metadata":{},"sourceType":"module"}