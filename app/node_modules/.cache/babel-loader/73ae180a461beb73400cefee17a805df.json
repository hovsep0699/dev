{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  ОГРНИП(Основной Государственный Регистрационный Номер Индивидуального Предпринимателя) состоит из 15 цифр\r\n  Номер - уникальный\r\n\r\n  С Г Г К К Н Н Х Х Х Х Х X X Ч\r\n\r\n  С (1-й знак) — признак отнесения государственного регистрационного номера записи:\r\n    к ОГРНИП - \"3\";\r\n    к иному государственному регистрационному номеру записи - 4;\r\n\r\n  ГГ (со 2-го по 3-й знак) — две последние цифры года внесения записи в государственный реестр\r\n\r\n  КК (4-й, 5-й знаки) — порядковый номер субъекта Российской Федерации\r\n\r\n  НН (с 6-го по 7-й знак) — код налоговой инспекции\r\n  ХХХХХXX (с 8-го по 14-й знак) — номер записи, внесенной в государственный реестр в течение года\r\n  Ч (15-й знак) — контрольное число\r\n*/\nvar OGRNIP = /*#__PURE__*/function () {\n  _createClass(OGRNIP, null, [{\n    key: \"validate\",\n    value: function validate(ogrnip) {\n      if (ogrnip.length === 15) {\n        var n15 = parseInt((parseInt(ogrnip.slice(0, -1), 10) % 13).toString().slice(-1), 10);\n        if (n15 !== parseInt(ogrnip[14], 10)) return 'Неправильное контрольное число';\n      }\n\n      return OGRNIP.REG_EXP.test(ogrnip) ? undefined : 'Введите номер длиной 15 знаков';\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !OGRNIP.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      return value && value.replace(/\\D/g, '').slice(0, 15);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9][0-9]{2}[0-9]{2}[0-9]{2}[0-9]{7}[0-9]$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите ОГРНИП';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите 15-значный код';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'ОГРНИП';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'ogrn';\n    }\n  }]);\n\n  function OGRNIP(ogrnip) {\n    _classCallCheck(this, OGRNIP);\n\n    if (!OGRNIP.isValid(\"\".concat(ogrnip))) {\n      this._error = new Error('Невозможно создать ОГРНИП. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(ogrnip);\n  }\n\n  _createClass(OGRNIP, [{\n    key: \"clone\",\n    value: function clone() {\n      return new OGRNIP(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return OGRNIP;\n}();\n\nexport default OGRNIP;","map":{"version":3,"sources":["../../../../src/domain/individual_entrepreneur/vo/OGRNIP.js"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;IAkBM,M;;;6BAKY,M,EAAM;AACpB,UAAI,MAAM,CAAC,MAAP,KAAkB,EAAtB,EAA0B;AACxB,YAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAD,EAAsB,EAAtB,CAAR,GAAoC,EAArC,EAAyC,QAAzC,GAAoD,KAApD,CAA0D,CAAC,CAA3D,CAAD,EAAgE,EAAhE,CAApB;AACA,YAAI,GAAG,KAAK,QAAQ,CAAC,MAAM,CAAC,EAAD,CAAP,EAAa,EAAb,CAApB,EAAsC,OAAO,gCAAP;AACvC;;AACD,aAAO,MAAM,CAAC,OAAP,CAAe,IAAf,CAAoB,MAApB,IAA8B,SAA9B,GAA0C,gCAAjD;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAR;AACD;;;yBAEW,K,EAAK;AACf,aAAO,KAAK,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyB,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAhB;AACD;;;wBAlBiB;AAChB,aAAO,IAAI,MAAJ,CAAW,8CAAX,CAAP;AACD;;;wBAkBqB;AACpB,aAAO,gBAAP;AACD;;;wBAEc;AACb,aAAO,wBAAP;AACD;;;wBAEc;AACb,aAAO,QAAP;AACD;;;wBAEe;AACd,aAAO,MAAP;AACD;;;AAED,kBAAY,MAAZ,EAAkB;AAAA;;AAChB,QAAI,CAAC,MAAM,CAAC,OAAP,WAAkB,MAAlB,EAAL,EAAkC;AAChC,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,6CAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,MAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,MAAJ,CAAW,KAAK,KAAhB,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,MAAf","sourceRoot":"","sourcesContent":["/*\r\n  ОГРНИП(Основной Государственный Регистрационный Номер Индивидуального Предпринимателя) состоит из 15 цифр\r\n  Номер - уникальный\r\n\r\n  С Г Г К К Н Н Х Х Х Х Х X X Ч\r\n\r\n  С (1-й знак) — признак отнесения государственного регистрационного номера записи:\r\n    к ОГРНИП - \"3\";\r\n    к иному государственному регистрационному номеру записи - 4;\r\n\r\n  ГГ (со 2-го по 3-й знак) — две последние цифры года внесения записи в государственный реестр\r\n\r\n  КК (4-й, 5-й знаки) — порядковый номер субъекта Российской Федерации\r\n\r\n  НН (с 6-го по 7-й знак) — код налоговой инспекции\r\n  ХХХХХXX (с 8-го по 14-й знак) — номер записи, внесенной в государственный реестр в течение года\r\n  Ч (15-й знак) — контрольное число\r\n*/\r\nclass OGRNIP {\r\n    static get REG_EXP() {\r\n        return new RegExp('^[0-9][0-9]{2}[0-9]{2}[0-9]{2}[0-9]{7}[0-9]$');\r\n    }\r\n    static validate(ogrnip) {\r\n        if (ogrnip.length === 15) {\r\n            const n15 = parseInt((parseInt(ogrnip.slice(0, -1), 10) % 13).toString().slice(-1), 10);\r\n            if (n15 !== parseInt(ogrnip[14], 10))\r\n                return 'Неправильное контрольное число';\r\n        }\r\n        return OGRNIP.REG_EXP.test(ogrnip) ? undefined : 'Введите номер длиной 15 знаков';\r\n    }\r\n    static isValid(value) {\r\n        return !OGRNIP.validate(value);\r\n    }\r\n    static mask(value) {\r\n        return value && value.replace(/\\D/g, '').slice(0, 15);\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите ОГРНИП';\r\n    }\r\n    static get hint() {\r\n        return 'Введите 15-значный код';\r\n    }\r\n    static get name() {\r\n        return 'ОГРНИП';\r\n    }\r\n    static get field() {\r\n        return 'ogrn';\r\n    }\r\n    constructor(ogrnip) {\r\n        if (!OGRNIP.isValid(`${ogrnip}`)) {\r\n            this._error = new Error('Невозможно создать ОГРНИП. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${ogrnip}`;\r\n    }\r\n    clone() {\r\n        return new OGRNIP(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default OGRNIP;\r\n//# sourceMappingURL=OGRNIP.js.map"]},"metadata":{},"sourceType":"module"}