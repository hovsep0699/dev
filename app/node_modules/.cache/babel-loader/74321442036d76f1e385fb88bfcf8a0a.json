{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Modal}from'@distate/components';import{Button,Icons}from'@distate/components';import{Pagination}from'../../../../../common/pagination';import{joinNoEmptyValues}from'../../../../../helpers/heplers';import{addEmployeeToDivision,getNoDivisionEmployee}from'../../../store/actions';import{selectNoDivisionStaff,selectNoDivisionStaffTotal}from'../../../store/selectors';/** добавлеие новых сотрудников в подразделение */export var SubmodalAddStaff=function SubmodalAddStaff(props){var isVisible=props.isVisible,_hide=props.hide,divisionId=props.divisionId;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),offset=_useState2[0],setOffset=_useState2[1];var dispatch=useDispatch();var staff=useSelector(selectNoDivisionStaff);var staffNumber=useSelector(selectNoDivisionStaffTotal)||0;useEffect(function(){dispatch(getNoDivisionEmployee({divisionId:divisionId,params:{offset:offset}}));},[dispatch,divisionId,offset]);var onAdd=function onAdd(employeeId){dispatch(addEmployeeToDivision({divisionId:divisionId,employeeId:employeeId}));};return/*#__PURE__*/React.createElement(Modal,{hide:function hide(){return _hide();},isVisible:isVisible,zIndex:1001},/*#__PURE__*/React.createElement(Modal.Header,{title:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",{className:\"header\"},\"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"common-table-head\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"\\u0424\\u0418\\u041E\"),/*#__PURE__*/React.createElement(\"td\",null,\"\\u0434\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,staff===null||staff===void 0?void 0:staff.map(function(employee){var id=employee.id,surname=employee.surname,name=employee.name,patronymic=employee.patronymic,position=employee.position;var fio=joinNoEmptyValues([surname,name,patronymic]);return/*#__PURE__*/React.createElement(\"tr\",{key:id},/*#__PURE__*/React.createElement(\"td\",null,fio),/*#__PURE__*/React.createElement(\"td\",null,position),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return onAdd(id);},icon:/*#__PURE__*/React.createElement(Icons.IconPlus,{fill:\"currentColor\"})},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")));})),/*#__PURE__*/React.createElement(\"tfoot\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{align:\"right\",colSpan:3},/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-right\"},/*#__PURE__*/React.createElement(Pagination,{listLength:staffNumber,setOffset:setOffset})))))))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/divisions/modal-division-card/SubmodalAddStaff.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Modal","Button","Icons","Pagination","joinNoEmptyValues","addEmployeeToDivision","getNoDivisionEmployee","selectNoDivisionStaff","selectNoDivisionStaffTotal","SubmodalAddStaff","props","isVisible","hide","divisionId","offset","setOffset","dispatch","staff","staffNumber","params","onAdd","employeeId","map","employee","id","surname","name","patronymic","position","fio"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from '@distate/components';\r\nimport { Button, Icons } from '@distate/components';\r\nimport { Pagination } from '../../../../../common/pagination';\r\nimport { joinNoEmptyValues } from '../../../../../helpers/heplers';\r\nimport { addEmployeeToDivision, getNoDivisionEmployee } from '../../../store/actions';\r\nimport { selectNoDivisionStaff, selectNoDivisionStaffTotal } from '../../../store/selectors';\r\n\r\ntype Props = {\r\n  hide: () => void;\r\n  isVisible: boolean;\r\n  divisionId: number;\r\n};\r\n\r\n/** добавлеие новых сотрудников в подразделение */\r\nexport const SubmodalAddStaff = (props: Props) => {\r\n  const { isVisible, hide, divisionId } = props;\r\n\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const staff = useSelector(selectNoDivisionStaff);\r\n  const staffNumber = useSelector(selectNoDivisionStaffTotal) || 0;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNoDivisionEmployee({ divisionId, params: { offset } }));\r\n  }, [dispatch, divisionId, offset]);\r\n\r\n  const onAdd = (employeeId: number) => {\r\n    dispatch(addEmployeeToDivision({ divisionId, employeeId }));\r\n  };\r\n\r\n  return (\r\n    <Modal hide={() => hide()} isVisible={isVisible} zIndex={1001}>\r\n      <Modal.Header title=\"Добавление элементов\" />\r\n      <Modal.Body>\r\n        <div>\r\n          <h3 className=\"header\">Сотрудники</h3>\r\n          <table className=\"table\">\r\n            <thead className=\"common-table-head\">\r\n              <tr>\r\n                <td>ФИО</td>\r\n                <td>должность</td>\r\n                <td align=\"right\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {staff?.map(employee => {\r\n                const { id, surname, name, patronymic, position } = employee;\r\n                const fio = joinNoEmptyValues([surname, name, patronymic]);\r\n\r\n                return (\r\n                  <tr key={id}>\r\n                    <td>{fio}</td>\r\n                    <td>{position}</td>\r\n                    <td align=\"right\">\r\n                      <Button\r\n                        onClick={() => onAdd(id)}\r\n                        icon={<Icons.IconPlus fill=\"currentColor\" />}\r\n                      >\r\n                        Добавить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td align=\"right\" colSpan={3}>\r\n                  <div className=\"pagination-right\">\r\n                    <Pagination listLength={staffNumber} setOffset={setOffset} />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}