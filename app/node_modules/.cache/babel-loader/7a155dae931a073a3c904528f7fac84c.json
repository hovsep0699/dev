{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Текстовая информация (ТекстИнфТип)\r\n */\nimport TextInfoId from './TextInfoId';\nimport TextInfoValue from './TextInfoValue';\n\nvar TextInfoType = /*#__PURE__*/function () {\n  _createClass(TextInfoType, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      var errorMsgs = [];\n      TextInfoType.VOs.forEach(function (DomainVO) {\n        var msg = DomainVO.validate(value[DomainVO.field]);\n\n        if (msg !== undefined) {\n          errorMsgs.push(msg);\n        }\n      });\n      return errorMsgs.length > 0 ? 'Инфополе заполнено неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !TextInfoType.validate(value);\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Начните вводить название валюты и выберите его из выпадающего списка';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите инфополе';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'ТекстИнфТип';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'invoice.informationField.attributeValues';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [TextInfoId, TextInfoValue];\n    }\n  }]);\n\n  function TextInfoType(id, infoValue) {\n    _classCallCheck(this, TextInfoType);\n\n    this.id = id;\n    this.infoValue = infoValue;\n  }\n\n  _createClass(TextInfoType, [{\n    key: \"clone\",\n    value: function clone() {\n      return new TextInfoType(this.id, this.infoValue);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(value) {\n      this._id = new TextInfoId(value);\n    }\n  }, {\n    key: \"infoValue\",\n    set: function set(value) {\n      this._infoValue = new TextInfoValue(value);\n    },\n    get: function get() {\n      return this._infoValue;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, TextInfoId.field, this.id), _defineProperty(_ref, \"value\", this.infoValue), _ref;\n    }\n  }]);\n\n  return TextInfoType;\n}();\n\nexport default TextInfoType;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/standard_element/text_info/TextInfoType.js"],"names":[],"mappings":";;;;AAAA;;;AAGA,OAAO,UAAP,MAAuB,cAAvB;AACA,OAAO,aAAP,MAA0B,iBAA1B;;IAEM,Y;;;6BACY,K,EAAK;AACnB,UAAM,SAAS,GAAG,EAAlB;AACA,MAAA,YAAY,CAAC,GAAb,CAAiB,OAAjB,CAAyB,UAAC,QAAD,EAAa;AACpC,YAAM,GAAG,GAAG,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,QAAQ,CAAC,KAAV,CAAvB,CAAZ;;AACA,YAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,UAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACD;AACF,OALD;AAMA,aAAQ,SAAS,CAAC,MAAV,GAAmB,CAApB,GAAyB,4BAAzB,GAAwD,SAA/D;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,YAAY,CAAC,QAAb,CAAsB,KAAtB,CAAR;AACD;;;wBAEc;AACb,aAAO,sEAAP;AACD;;;wBAEqB;AACpB,aAAO,kBAAP;AACD;;;wBAEc;AACb,aAAO,aAAP;AACD;;;wBAEe;AACd,aAAO,0CAAP;AACD;;;wBAEa;AACZ,aAAO,CAAC,UAAD,EAAa,aAAb,CAAP;AACD;;;AAED,wBAAY,EAAZ,EAAgB,SAAhB,EAAyB;AAAA;;AACvB,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,SAAL,GAAiB,SAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,YAAJ,CAAiB,KAAK,EAAtB,EAA0B,KAAK,SAA/B,CAAP;AACD;;;wBAEK;AACJ,aAAO,KAAK,GAAZ;AACD,K;sBAEM,K,EAAK;AACV,WAAK,GAAL,GAAW,IAAI,UAAJ,CAAe,KAAf,CAAX;AACD;;;sBAEa,K,EAAK;AACjB,WAAK,UAAL,GAAkB,IAAI,aAAJ,CAAkB,KAAlB,CAAlB;AACD,K;wBAEY;AACX,aAAO,KAAK,UAAZ;AACD;;;wBAEQ;AAAA;;AACP,8CACG,UAAU,CAAC,KADd,EACsB,KAAK,EAD3B,kCAES,KAAK,SAFd;AAID;;;;;;AAGH,eAAe,YAAf","sourceRoot":"","sourcesContent":["/*\r\n  Текстовая информация (ТекстИнфТип)\r\n */\r\nimport TextInfoId from './TextInfoId';\r\nimport TextInfoValue from './TextInfoValue';\r\nclass TextInfoType {\r\n    static validate(value) {\r\n        const errorMsgs = [];\r\n        TextInfoType.VOs.forEach((DomainVO) => {\r\n            const msg = DomainVO.validate(value[DomainVO.field]);\r\n            if (msg !== undefined) {\r\n                errorMsgs.push(msg);\r\n            }\r\n        });\r\n        return (errorMsgs.length > 0) ? 'Инфополе заполнено неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !TextInfoType.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Начните вводить название валюты и выберите его из выпадающего списка';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите инфополе';\r\n    }\r\n    static get name() {\r\n        return 'ТекстИнфТип';\r\n    }\r\n    static get field() {\r\n        return 'invoice.informationField.attributeValues';\r\n    }\r\n    static get VOs() {\r\n        return [TextInfoId, TextInfoValue];\r\n    }\r\n    constructor(id, infoValue) {\r\n        this.id = id;\r\n        this.infoValue = infoValue;\r\n    }\r\n    clone() {\r\n        return new TextInfoType(this.id, this.infoValue);\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(value) {\r\n        this._id = new TextInfoId(value);\r\n    }\r\n    set infoValue(value) {\r\n        this._infoValue = new TextInfoValue(value);\r\n    }\r\n    get infoValue() {\r\n        return this._infoValue;\r\n    }\r\n    get value() {\r\n        return {\r\n            [TextInfoId.field]: this.id,\r\n            value: this.infoValue\r\n        };\r\n    }\r\n}\r\nexport default TextInfoType;\r\n//# sourceMappingURL=TextInfoType.js.map"]},"metadata":{},"sourceType":"module"}