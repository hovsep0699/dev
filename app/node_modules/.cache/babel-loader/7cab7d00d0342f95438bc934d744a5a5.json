{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useDispatch}from'react-redux';import{Button,ButtonKinds,Icons,Dropdown,Input,Placement}from'@distate/components';import{getNaturalEntityGroup}from'../../../../store/actions';/** Фильтр для ФЛ (еще не добавленных) */export var NaturalEntityFilter=function NaturalEntityFilter(props){var id=props.id;var dispatch=useDispatch();var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),surname=_React$useState4[0],setSurname=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),patronymic=_React$useState6[0],setPatronymic=_React$useState6[1];var _React$useState7=React.useState(),_React$useState8=_slicedToArray(_React$useState7,2),socialNumber=_React$useState8[0],setSocialNumber=_React$useState8[1];var onClearForm=function onClearForm(){setName(undefined);setSurname(undefined);setPatronymic(undefined);setSocialNumber(undefined);};var onFilter=function onFilter(){var filterParams={name:name,surname:surname,patronymic:patronymic,socialNumber:socialNumber};dispatch(getNaturalEntityGroup(_objectSpread(_objectSpread({},filterParams),{},{id:id})));};return/*#__PURE__*/React.createElement(Dropdown,{widthRestrict:true,placement:Placement.TOP,trigger:/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconSearch,{fill:\"currentColor\"})},\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\")},/*#__PURE__*/React.createElement(\"div\",{className:\"contractor-dropdown-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-header\"},/*#__PURE__*/React.createElement(\"span\",null,\"\\u0424\\u0438\\u0437\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u043B\\u0438\\u0446\\u0430\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{label:\"\\u0418\\u043C\\u044F\",name:\"name\",onChange:function onChange(e){return setName(e.target.value);},value:name}),/*#__PURE__*/React.createElement(Input,{label:\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",name:\"surname\",onChange:function onChange(e){return setSurname(e.target.value);},value:surname}),/*#__PURE__*/React.createElement(Input,{label:\"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",name:\"patronymic\",onChange:function onChange(e){return setPatronymic(e.target.value);},value:patronymic}),/*#__PURE__*/React.createElement(Input,{label:\"\\u0421\\u041D\\u0418\\u041B\\u0421\",name:\"socialNumber\",onChange:function onChange(e){return setSocialNumber(e.target.value);},value:socialNumber})),/*#__PURE__*/React.createElement(\"div\",{className:\"contractor-dropdown-buttons\"},/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconClose,{fill:\"currentColor\"}),fullWidth:true,onClick:onClearForm},\"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconSearch,{fill:\"currentColor\"}),kind:ButtonKinds.Secondary,fullWidth:true,onClick:onFilter},\"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/contractors/components/groups/modal/filters/NaturalEntityFilter.tsx"],"names":["React","useDispatch","Button","ButtonKinds","Icons","Dropdown","Input","Placement","getNaturalEntityGroup","NaturalEntityFilter","props","id","dispatch","useState","name","setName","surname","setSurname","patronymic","setPatronymic","socialNumber","setSocialNumber","onClearForm","undefined","onFilter","filterParams","TOP","e","target","value","Secondary"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, ButtonKinds, Icons, Dropdown, Input, Placement } from '@distate/components';\r\nimport { getNaturalEntityGroup } from '../../../../store/actions';\r\n\r\ninterface Props {\r\n  id: number;\r\n}\r\n\r\n/** Фильтр для ФЛ (еще не добавленных) */\r\nexport const NaturalEntityFilter = (props: Props) => {\r\n  const { id } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = React.useState<string | undefined>();\r\n  const [surname, setSurname] = React.useState<string | undefined>();\r\n  const [patronymic, setPatronymic] = React.useState<string | undefined>();\r\n  const [socialNumber, setSocialNumber] = React.useState<string | undefined>();\r\n\r\n  const onClearForm = () => {\r\n    setName(undefined);\r\n    setSurname(undefined);\r\n    setPatronymic(undefined);\r\n    setSocialNumber(undefined);\r\n  };\r\n\r\n  const onFilter = () => {\r\n    const filterParams = {\r\n      name,\r\n      surname,\r\n      patronymic,\r\n      socialNumber\r\n    };\r\n    dispatch(getNaturalEntityGroup({ ...filterParams, id }));\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      widthRestrict\r\n      placement={Placement.TOP}\r\n      trigger={<Button icon={<Icons.IconSearch fill=\"currentColor\" />}>Фильтрация</Button>}\r\n    >\r\n      <div className=\"contractor-dropdown-wrapper\">\r\n        <div className=\"dropdown-header\">\r\n          <span>Физические лица</span>\r\n        </div>\r\n        <div>\r\n          <Input\r\n            label=\"Имя\"\r\n            name=\"name\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n          <Input\r\n            label=\"Фамилия\"\r\n            name=\"surname\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSurname(e.target.value)}\r\n            value={surname}\r\n          />\r\n          <Input\r\n            label=\"Отчество\"\r\n            name=\"patronymic\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPatronymic(e.target.value)}\r\n            value={patronymic}\r\n          />\r\n          <Input\r\n            label=\"СНИЛС\"\r\n            name=\"socialNumber\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSocialNumber(e.target.value)}\r\n            value={socialNumber}\r\n          />\r\n        </div>\r\n        <div className=\"contractor-dropdown-buttons\">\r\n          <Button icon={<Icons.IconClose fill=\"currentColor\" />} fullWidth onClick={onClearForm}>\r\n            Очистить\r\n          </Button>\r\n          <Button\r\n            icon={<Icons.IconSearch fill=\"currentColor\" />}\r\n            kind={ButtonKinds.Secondary}\r\n            fullWidth\r\n            onClick={onFilter}\r\n          >\r\n            Фильтровать\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}