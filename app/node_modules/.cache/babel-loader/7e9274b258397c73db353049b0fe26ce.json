{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  ДатаПРД (Дата платежно-расчетного документа)\r\n\r\n  XML:\r\n  <СвПРД СуммаПРД=\"9999\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n\r\n  date (Date for Payment Document)\r\n*/\nimport DateType from '../../../standard_element/date/DateType';\n\nvar DatePD = /*#__PURE__*/function () {\n  _createClass(DatePD, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return DateType.validate(value);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !DateType.validate(value);\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return DateType.placeholder;\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return DateType.hint;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return DateType.name;\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return DateType.field;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'date';\n    }\n  }]);\n\n  function DatePD(date) {\n    _classCallCheck(this, DatePD);\n\n    if (!DatePD.isValid(\"\".concat(date))) {\n      this._error = new Error('Невозможно создать ДатаПРД (Дата платежно-расчетного документа). Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(date);\n  }\n\n  _createClass(DatePD, [{\n    key: \"clone\",\n    value: function clone() {\n      return new DatePD(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return DatePD;\n}();\n\nexport default DatePD;","map":{"version":3,"sources":["../../../../../../../src/domain/documents/upd/vo/invoice/payment_document/Date.js"],"names":[],"mappings":";;;AAAA;;;;;;;;AAQA,OAAO,QAAP,MAAqB,yCAArB;;IAEM,M;;;6BACY,K,EAAK;AACnB,aAAO,QAAQ,CAAC,QAAT,CAAkB,KAAlB,CAAP;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,QAAQ,CAAC,QAAT,CAAkB,KAAlB,CAAR;AACD;;;wBAEqB;AACpB,aAAO,QAAQ,CAAC,WAAhB;AACD;;;wBAEc;AACb,aAAO,QAAQ,CAAC,IAAhB;AACD;;;wBAEc;AACb,aAAO,QAAQ,CAAC,IAAhB;AACD;;;wBAEe;AACd,aAAO,QAAQ,CAAC,KAAhB;AACD;;;wBAEc;AACb,aAAO,MAAP;AACD;;;AAED,kBAAY,IAAZ,EAAgB;AAAA;;AACd,QAAI,CAAC,MAAM,CAAC,OAAP,WAAkB,IAAlB,EAAL,EAAgC;AAC9B,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,mFAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,IAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,MAAJ,CAAW,KAAK,KAAhB,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,MAAf","sourceRoot":"","sourcesContent":["/*\r\n  ДатаПРД (Дата платежно-расчетного документа)\r\n\r\n  XML:\r\n  <СвПРД СуммаПРД=\"9999\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n\r\n  date (Date for Payment Document)\r\n*/\r\nimport DateType from '../../../standard_element/date/DateType';\r\nclass DatePD {\r\n    static validate(value) {\r\n        return DateType.validate(value);\r\n    }\r\n    static isValid(value) {\r\n        return !DateType.validate(value);\r\n    }\r\n    static get placeholder() {\r\n        return DateType.placeholder;\r\n    }\r\n    static get hint() {\r\n        return DateType.hint;\r\n    }\r\n    static get name() {\r\n        return DateType.name;\r\n    }\r\n    static get field() {\r\n        return DateType.field;\r\n    }\r\n    static get type() {\r\n        return 'date';\r\n    }\r\n    constructor(date) {\r\n        if (!DatePD.isValid(`${date}`)) {\r\n            this._error = new Error('Невозможно создать ДатаПРД (Дата платежно-расчетного документа). Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${date}`;\r\n    }\r\n    clone() {\r\n        return new DatePD(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default DatePD;\r\n//# sourceMappingURL=Date.js.map"]},"metadata":{},"sourceType":"module"}