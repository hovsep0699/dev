{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import{Button,ButtonKinds,Modal,Icons}from'@distate/components';import{selectEmployeeResponsible}from'../../store/selectors';import{changeEmployeeResponsible,resetEmployeePassword}from'../../store/actions';/** Кнопки управления в карточке сотрудника */export var EmployeeCardToolButtons=function EmployeeCardToolButtons(props){var id=props.id;var responsible=useSelector(selectEmployeeResponsible);var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVisibleAlert=_useState2[0],setIsVisibleAlert=_useState2[1];/** изменение ответственности */var onChangeResponsible=function onChangeResponsible(){dispatch(changeEmployeeResponsible({employeeId:id,responsible:responsible}));};/** открытие модалки для подтверждения сброса пароля */var onOpenAlert=function onOpenAlert(){setIsVisibleAlert(true);};/** сброс пароля */var onResetPassword=function onResetPassword(){dispatch(resetEmployeePassword({employeeId:id}));setIsVisibleAlert(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:15}},/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Danger,onClick:onOpenAlert},\"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"),' ',/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Secondary,onClick:onChangeResponsible},responsible?'Снять ответственность':'Назначить ответственным')),/*#__PURE__*/React.createElement(Modal,{hide:function hide(){return setIsVisibleAlert(false);},isVisible:isVisibleAlert,zIndex:1001},/*#__PURE__*/React.createElement(Modal.Header,{title:\"\\u0412\\u044B \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconCheck,{fill:\"currentColor\"}),kind:ButtonKinds.Orange,onClick:onResetPassword,style:{marginRight:15}},\"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconClose,{fill:\"currentColor\"}),onClick:function onClick(){return setIsVisibleAlert(false);}},\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/staff/EmployeeCardToolButtons.tsx"],"names":["React","useState","useSelector","useDispatch","Button","ButtonKinds","Modal","Icons","selectEmployeeResponsible","changeEmployeeResponsible","resetEmployeePassword","EmployeeCardToolButtons","props","id","responsible","dispatch","isVisibleAlert","setIsVisibleAlert","onChangeResponsible","employeeId","onOpenAlert","onResetPassword","marginTop","Danger","Secondary","display","justifyContent","Orange","marginRight"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,KAA9B,CAAqCC,KAArC,KAAkD,qBAAlD,CAEA,OAASC,yBAAT,KAA0C,uBAA1C,CACA,OAASC,yBAAT,CAAoCC,qBAApC,KAAiE,qBAAjE,CAMA,8CACA,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAkB,IAC/CC,CAAAA,EAD+C,CACxCD,KADwC,CAC/CC,EAD+C,CAEvD,GAAMC,CAAAA,WAAW,CAAGZ,WAAW,CAACM,yBAAD,CAA/B,CACA,GAAMO,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAHuD,cAKXF,QAAQ,CAAC,KAAD,CALG,wCAKhDe,cALgD,eAKhCC,iBALgC,eAOvD,gCACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCH,QAAQ,CAACN,yBAAyB,CAAC,CAAEU,UAAU,CAAEN,EAAd,CAAkBC,WAAW,CAAXA,WAAlB,CAAD,CAA1B,CAAR,CACD,CAFD,CAIA,uDACA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBH,iBAAiB,CAAC,IAAD,CAAjB,CACD,CAFD,CAIA,mBACA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BN,QAAQ,CAACL,qBAAqB,CAAC,CAAES,UAAU,CAAEN,EAAd,CAAD,CAAtB,CAAR,CACAI,iBAAiB,CAAC,KAAD,CAAjB,CACD,CAHD,CAKA,mBACE,qDACE,2BAAK,KAAK,CAAE,CAAEK,SAAS,CAAE,EAAb,CAAZ,eACE,oBAAC,MAAD,EAAQ,IAAI,CAAEjB,WAAW,CAACkB,MAA1B,CAAkC,OAAO,CAAEH,WAA3C,0FADF,CAGY,GAHZ,cAIE,oBAAC,MAAD,EAAQ,IAAI,CAAEf,WAAW,CAACmB,SAA1B,CAAqC,OAAO,CAAEN,mBAA9C,EACGJ,WAAW,CAAG,uBAAH,CAA6B,yBAD3C,CAJF,CADF,cAUE,oBAAC,KAAD,EAAO,IAAI,CAAE,sBAAMG,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,EAAb,CAA6C,SAAS,CAAED,cAAxD,CAAwE,MAAM,CAAE,IAAhF,eACE,oBAAC,KAAD,CAAO,MAAP,EAAc,KAAK,CAAC,yNAApB,EADF,cAEE,oBAAC,KAAD,CAAO,IAAP,mBACE,2BAAK,KAAK,CAAE,CAAES,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAZ,eACE,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,EAAiB,IAAI,CAAC,cAAtB,EADR,CAEE,IAAI,CAAErB,WAAW,CAACsB,MAFpB,CAGE,OAAO,CAAEN,eAHX,CAIE,KAAK,CAAE,CAAEO,WAAW,CAAE,EAAf,CAJT,qDADF,cASE,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,EAAiB,IAAI,CAAC,cAAtB,EADR,CAEE,OAAO,CAAE,yBAAMX,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,EAFX,yCATF,CADF,CAFF,CAVF,CADF,CAkCD,CAzDM","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, ButtonKinds, Modal, Icons } from '@distate/components';\r\n\r\nimport { selectEmployeeResponsible } from '../../store/selectors';\r\nimport { changeEmployeeResponsible, resetEmployeePassword } from '../../store/actions';\r\n\r\ntype Props = {\r\n  id: number;\r\n};\r\n\r\n/** Кнопки управления в карточке сотрудника */\r\nexport const EmployeeCardToolButtons = (props: Props) => {\r\n  const { id } = props;\r\n  const responsible = useSelector(selectEmployeeResponsible);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isVisibleAlert, setIsVisibleAlert] = useState(false);\r\n\r\n  /** изменение ответственности */\r\n  const onChangeResponsible = () => {\r\n    dispatch(changeEmployeeResponsible({ employeeId: id, responsible }));\r\n  };\r\n\r\n  /** открытие модалки для подтверждения сброса пароля */\r\n  const onOpenAlert = () => {\r\n    setIsVisibleAlert(true);\r\n  };\r\n\r\n  /** сброс пароля */\r\n  const onResetPassword = () => {\r\n    dispatch(resetEmployeePassword({ employeeId: id }));\r\n    setIsVisibleAlert(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: 15 }}>\r\n        <Button kind={ButtonKinds.Danger} onClick={onOpenAlert}>\r\n          Сбросить пароль\r\n        </Button>{' '}\r\n        <Button kind={ButtonKinds.Secondary} onClick={onChangeResponsible}>\r\n          {responsible ? 'Снять ответственность' : 'Назначить ответственным'}\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal hide={() => setIsVisibleAlert(false)} isVisible={isVisibleAlert} zIndex={1001}>\r\n        <Modal.Header title=\"Вы действительно хотите сбросить пароль?\" />\r\n        <Modal.Body>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              icon={<Icons.IconCheck fill=\"currentColor\" />}\r\n              kind={ButtonKinds.Orange}\r\n              onClick={onResetPassword}\r\n              style={{ marginRight: 15 }}\r\n            >\r\n              Сбросить\r\n            </Button>\r\n            <Button\r\n              icon={<Icons.IconClose fill=\"currentColor\" />}\r\n              onClick={() => setIsVisibleAlert(false)}\r\n            >\r\n              Отмена\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}