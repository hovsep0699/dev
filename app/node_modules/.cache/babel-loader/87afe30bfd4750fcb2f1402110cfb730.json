{"ast":null,"code":"// Dialog.tsx\nimport React from'react';import{DialogActionsContainer,DialogContainer,DialogOverlay}from\"./dialog.styles\";import{Box}from\"grommet\";import SingleChildScrollView from\"../../../widgets/SingleChildScrollView\";export var AlignmentType;(function(AlignmentType){AlignmentType[\"left\"]=\"start\";AlignmentType[\"center\"]=\"center\";AlignmentType[\"right\"]=\"end\";})(AlignmentType||(AlignmentType={}));var BuildDialogOverlayContainer=function BuildDialogOverlayContainer(_ref){var title=_ref.title,content=_ref.content,actions=_ref.actions,width=_ref.width,height=_ref.height,maxWidth=_ref.maxWidth,titleCentered=_ref.titleCentered,alignment=_ref.alignment,dialogContainerStyle=_ref.dialogContainerStyle,isScrollable=_ref.isScrollable,isShowArrow=_ref.isShowArrow,maxHeight=_ref.maxHeight;console.log(\"VVVVVVVVVVVVVVVVVVVV\");if(isScrollable){return/*#__PURE__*/React.createElement(SingleChildScrollView,{maxHeight:maxHeight,isShowArrow:isShowArrow},/*#__PURE__*/React.createElement(DialogContainer,{style:dialogContainerStyle,width:width,height:height,maxWidth:maxWidth,isShowArrow:isShowArrow,maxHeight:maxHeight,onClick:function onClick(e){return e.stopPropagation();}},isScrollable?/*#__PURE__*/React.createElement(SingleChildScrollView,{maxHeight:maxHeight,style:{display:\"flex\",flexDirection:\"column\",justifyContent:alignment}},/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"100%\",justify:alignment,align:alignment},/*#__PURE__*/React.createElement(Box,{direction:\"row\",justify:titleCentered?\"center\":\"start\",align:alignment},title?title:/*#__PURE__*/React.createElement(React.Fragment,null)),content?content:/*#__PURE__*/React.createElement(React.Fragment,null))):/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"100%\",justify:alignment,align:alignment},/*#__PURE__*/React.createElement(Box,{direction:\"row\",justify:titleCentered?\"center\":\"start\",align:alignment},title?title:/*#__PURE__*/React.createElement(React.Fragment,null)),content?content:/*#__PURE__*/React.createElement(React.Fragment,null)),actions?/*#__PURE__*/React.createElement(DialogActionsContainer,null,actions?actions:/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)));}return/*#__PURE__*/React.createElement(DialogContainer,{style:dialogContainerStyle,width:width,height:height,isShowArrow:isShowArrow,maxWidth:maxWidth,maxHeight:maxHeight,onClick:function onClick(e){return e.stopPropagation();}},isScrollable?/*#__PURE__*/React.createElement(SingleChildScrollView,{maxHeight:maxHeight,style:{display:\"flex\",flexDirection:\"column\",justifyContent:alignment}},/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"100%\",justify:alignment,align:alignment},/*#__PURE__*/React.createElement(Box,{direction:\"row\",justify:titleCentered?\"center\":\"start\",align:alignment},title?title:/*#__PURE__*/React.createElement(React.Fragment,null)),content?content:/*#__PURE__*/React.createElement(React.Fragment,null))):/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"100%\",justify:alignment,align:alignment},/*#__PURE__*/React.createElement(Box,{direction:\"row\",justify:titleCentered?\"center\":\"start\",align:alignment},title?title:/*#__PURE__*/React.createElement(React.Fragment,null)),content?content:/*#__PURE__*/React.createElement(React.Fragment,null)),actions?/*#__PURE__*/React.createElement(DialogActionsContainer,null,actions?actions:/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null));};var Dialog=function Dialog(_ref2){var title=_ref2.title,content=_ref2.content,alignment=_ref2.alignment,overlayColor=_ref2.overlayColor,actions=_ref2.actions,onClose=_ref2.onClose,isScrollable=_ref2.isScrollable,isShowArrow=_ref2.isShowArrow,titleCentered=_ref2.titleCentered,width=_ref2.width,maxWidth=_ref2.maxWidth,dialogContainerStyle=_ref2.dialogContainerStyle,height=_ref2.height,position=_ref2.position,positionOffset=_ref2.positionOffset,maxHeight=_ref2.maxHeight;return/*#__PURE__*/React.createElement(DialogOverlay,{position:position,onClick:onClose,overlayColor:overlayColor,alignment:alignment},isScrollable?/*#__PURE__*/React.createElement(SingleChildScrollView,{isShowArrow:isShowArrow,maxHeight:\"80vh\",positionOffset:positionOffset},/*#__PURE__*/React.createElement(BuildDialogOverlayContainer,{isShowArrow:isShowArrow,dialogContainerStyle:dialogContainerStyle,alignment:alignment,titleCentered:titleCentered,width:width,height:height,maxHeight:maxHeight,maxWidth:maxWidth,title:title,content:content,actions:actions})):/*#__PURE__*/React.createElement(BuildDialogOverlayContainer,{dialogContainerStyle:dialogContainerStyle,titleCentered:titleCentered,isShowArrow:isShowArrow,alignment:alignment,positionOffset:positionOffset,title:title,maxHeight:maxHeight,maxWidth:maxWidth,height:height,width:width,content:content,actions:actions}));// document.body\n// )\n};export default Dialog;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/pages/dashboard/modals/Dialog.tsx"],"names":["React","DialogActionsContainer","DialogContainer","DialogOverlay","Box","SingleChildScrollView","AlignmentType","BuildDialogOverlayContainer","title","content","actions","width","height","maxWidth","titleCentered","alignment","dialogContainerStyle","isScrollable","isShowArrow","maxHeight","console","log","e","stopPropagation","display","flexDirection","justifyContent","Dialog","overlayColor","onClose","position","positionOffset"],"mappings":"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","sourcesContent":["// Dialog.tsx\r\nimport React, {CSSProperties} from 'react';\r\nimport {\r\n    DialogActionsContainer,\r\n    DialogContainer,\r\n    DialogOverlay\r\n} from \"./dialog.styles\";\r\nimport {Box} from \"grommet\";\r\nimport SingleChildScrollView from \"../../../widgets/SingleChildScrollView\";\r\nimport {EdgeInsets} from \"../../../utils/EdgeInsets\";\r\n\r\n\r\n\r\nexport enum AlignmentType {\r\n    left = \"start\",\r\n    center = \"center\",\r\n    right = \"end\"\r\n}\r\n\r\ninterface DialogProps {\r\n    title?: React.ReactNode | string;\r\n    titleCentered?: boolean;\r\n    content?: React.ReactNode;\r\n    actions?: React.ReactNode;\r\n    isScrollable?: boolean | true;\r\n    onClose?: () => void;\r\n    overlayColor?: string;\r\n    alignment?: \"start\" | \"end\" | \"center\" | AlignmentType;\r\n    width?: string;\r\n    height?: string;\r\n    maxWidth?: string;\r\n    maxHeight?: string;\r\n    minWidth?: string;\r\n    minHeight?: string;\r\n    dialogContainerStyle?: CSSProperties;\r\n    position?: \"absolute\" | \"relative\" | \"fixed\";\r\n    positionOffset?: EdgeInsets;\r\n    isShowArrow?: boolean;\r\n}\r\n\r\nconst BuildDialogOverlayContainer = ({\r\n  title,\r\n  content,\r\n  actions,\r\n  width,\r\n  height,\r\n  maxWidth,\r\n  titleCentered,\r\n  alignment,\r\n  dialogContainerStyle,\r\n  isScrollable,\r\n  isShowArrow,\r\n  maxHeight\r\n}: DialogProps) => {\r\n    console.log(\"VVVVVVVVVVVVVVVVVVVV\")\r\n    if (isScrollable) {\r\n        return  <SingleChildScrollView maxHeight={maxHeight} isShowArrow={isShowArrow}>\r\n            <DialogContainer\r\n                style={dialogContainerStyle}\r\n                width={width}\r\n                height={height}\r\n                maxWidth={maxWidth}\r\n                isShowArrow={isShowArrow}\r\n                maxHeight={maxHeight}\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                {/*{!title && !content ? (<></>) : (*/}\r\n                {isScrollable ? (\r\n                    <SingleChildScrollView maxHeight={maxHeight} style={{display: \"flex\", flexDirection: \"column\", justifyContent: alignment}}>\r\n                        <Box direction={\"column\"} width={\"100%\"} justify={alignment} align={alignment}>\r\n                            <Box direction={\"row\"} justify={titleCentered ? \"center\" : \"start\"} align={alignment}>\r\n                                {title ? title : <></>}\r\n                            </Box>\r\n                            {content ? content : <></>}\r\n                        </Box>\r\n\r\n                    </SingleChildScrollView>\r\n                ) : (\r\n                    <Box direction={\"column\"} width={\"100%\"} justify={alignment} align={alignment}>\r\n                        <Box direction={\"row\"} justify={titleCentered ? \"center\" : \"start\"} align={alignment}>\r\n                            {title ? title : <></>}\r\n                        </Box>\r\n                        {content ? content : <></>}\r\n                    </Box>\r\n                )}\r\n\r\n                {/*)}*/}\r\n                {actions ? (\r\n                    <DialogActionsContainer>\r\n                        {actions ? actions : <></>}\r\n                    </DialogActionsContainer>\r\n                ) : (<></>)}\r\n\r\n            </DialogContainer>\r\n        </SingleChildScrollView>\r\n\r\n    }\r\n    return (\r\n            <DialogContainer\r\n                style={dialogContainerStyle}\r\n                width={width}\r\n                height={height}\r\n                isShowArrow={isShowArrow}\r\n                maxWidth={maxWidth}\r\n                maxHeight={maxHeight}\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                {/*{!title && !content ? (<></>) : (*/}\r\n                {isScrollable ? (\r\n                    <SingleChildScrollView maxHeight={maxHeight} style={{display: \"flex\", flexDirection: \"column\", justifyContent: alignment}}>\r\n                        <Box direction={\"column\"} width={\"100%\"} justify={alignment} align={alignment}>\r\n                            <Box direction={\"row\"} justify={titleCentered ? \"center\" : \"start\"} align={alignment}>\r\n                                {title ? title : <></>}\r\n                            </Box>\r\n                            {content ? content : <></>}\r\n                        </Box>\r\n\r\n                    </SingleChildScrollView>\r\n                ) : (\r\n                    <Box direction={\"column\"} width={\"100%\"} justify={alignment} align={alignment}>\r\n                        <Box direction={\"row\"} justify={titleCentered ? \"center\" : \"start\"} align={alignment}>\r\n                            {title ? title : <></>}\r\n                        </Box>\r\n                        {content ? content : <></>}\r\n                    </Box>\r\n                )}\r\n\r\n                {/*)}*/}\r\n                {actions ? (\r\n                    <DialogActionsContainer>\r\n                        {actions ? actions : <></>}\r\n                    </DialogActionsContainer>\r\n                ) : (<></>)}\r\n\r\n            </DialogContainer>\r\n    );\r\n}\r\n\r\n\r\nconst Dialog: React.FC<DialogProps> = ({\r\n      title,\r\n      content,\r\n      alignment,\r\n      overlayColor,\r\n      actions,\r\n      onClose,\r\n      isScrollable,\r\n      isShowArrow,\r\n      titleCentered,\r\n      width,\r\n      maxWidth,\r\n      dialogContainerStyle,\r\n      height,\r\n      position,\r\n      positionOffset,\r\n      maxHeight\r\n}) => {\r\n    return <DialogOverlay\r\n            position={position}\r\n            onClick={onClose}\r\n            overlayColor={overlayColor}\r\n            alignment={alignment}\r\n        >\r\n            {isScrollable ?\r\n                <SingleChildScrollView isShowArrow={isShowArrow} maxHeight={\"80vh\"} positionOffset={positionOffset}>\r\n                    <BuildDialogOverlayContainer\r\n                        isShowArrow={isShowArrow}\r\n                        dialogContainerStyle={dialogContainerStyle}\r\n                        alignment={alignment}\r\n                        titleCentered={titleCentered}\r\n                        width={width}\r\n                        height={height}\r\n                        maxHeight={maxHeight}\r\n                        maxWidth={maxWidth}\r\n                        title={title}\r\n                        content={content}\r\n                        actions={actions}\r\n                    />\r\n                </SingleChildScrollView>\r\n                :\r\n                <BuildDialogOverlayContainer\r\n                    dialogContainerStyle={dialogContainerStyle}\r\n                    titleCentered={titleCentered}\r\n                    isShowArrow={isShowArrow}\r\n                    alignment={alignment}\r\n                    positionOffset={positionOffset}\r\n                    title={title}\r\n                    maxHeight={maxHeight}\r\n                    maxWidth={maxWidth}\r\n                    height={height}\r\n                    width={width}\r\n                    content={content}\r\n                    actions={actions}\r\n                />}\r\n        </DialogOverlay>\r\n        // document.body\r\n    // )\r\n};\r\n\r\nexport default Dialog;\r\n"]},"metadata":{},"sourceType":"module"}