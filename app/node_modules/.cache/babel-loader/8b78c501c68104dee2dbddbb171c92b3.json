{"ast":null,"code":"import{PowersExercisedType,PowersSubTrustType,PowersType}from\"../../domain/model/SelectionType\";export var typeOptions=[{value:\"00000000\",label:\"Доверенность для взаимодействия между хозяйствующими субъектами\"},{value:\"00010000\",label:\"Доверенность для предоставления в налоговые органы и взаимодействия между хозяйствующими субъектами\"}];export var AddressType;(function(AddressType){AddressType[AddressType[\"normal\"]=0]=\"normal\";AddressType[AddressType[\"fias\"]=1]=\"fias\";})(AddressType||(AddressType={}));export var addressTypes=[{label:'Обычный',value:AddressType.normal.toString()},{label:'ФИАС',value:AddressType.fias.toString()}];export var reTrustOptions=[{value:\"1\",label:\"Без права передоверия\"},{value:\"2\",label:\"Однократное передоверие\"},{value:\"3\",label:\"C правом последующего передоверия\"}];export var Options=[{label:'Корневая',value:'Корневая'},{label:'Дочерняя',value:'Дочерняя'}];export var options=[{value:\"type1\",label:\"Type 1\"},{value:\"type2\",label:\"Type 2\"},{value:\"unchecked\",label:\"unchecked\"}];export var genderOptions=[{value:\"1\",label:\"Мужской\"},{value:\"2\",label:\"Женский\"}];export var powersDeltsType=[{value:PowersExercisedType.individual,label:\"Индивидуально\"},{value:PowersExercisedType.group,label:\"Совместно\"}];export var powersSubTrustType=[{value:PowersSubTrustType.lost,label:\"Утрачиваются\"},{value:PowersSubTrustType.notLost,label:\"Не утрачиваются\"}];export var privilagesOptions=[{label:'Полные',value:'Полные'},{label:'Ограниченные',value:'Ограниченные'},{label:'Other',value:'other'}];export var POAType=[{label:'Корневая',value:'Корневая'},{label:'Дочерняя',value:'Дочерняя'}];export var powerOfAttonomyType=[{value:PowersType.text,label:\"Текстовые\"},{value:PowersType.machineReadable,label:\"Машиночитаемые\"}];export var principalsTypes={UL:\"russianorg\",IP:\"individualEntrepreneur\"};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/constants/SelectionConstants.tsx"],"names":["PowersExercisedType","PowersSubTrustType","PowersType","typeOptions","value","label","AddressType","addressTypes","normal","toString","fias","reTrustOptions","Options","options","genderOptions","powersDeltsType","individual","group","powersSubTrustType","lost","notLost","privilagesOptions","POAType","powerOfAttonomyType","text","machineReadable","principalsTypes","UL","IP"],"mappings":"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","sourcesContent":["import {\r\n    PowersExercisedSelectionType,\r\n    PowersExercisedType,\r\n    PowersSelectionType,\r\n    PowersSubTrustSelectionType,\r\n    PowersSubTrustType,\r\n    PowersType,\r\n    SelectionType\r\n} from \"../../domain/model/SelectionType\";\r\n\r\nexport const typeOptions: SelectionType[] = [\r\n    {value: \"00000000\", label: \"Доверенность для взаимодействия между хозяйствующими субъектами\"},\r\n    {\r\n        value: \"00010000\",\r\n        label: \"Доверенность для предоставления в налоговые органы и взаимодействия между хозяйствующими субъектами\"\r\n    }\r\n]\r\n\r\nexport enum AddressType {\r\n    normal = 0,\r\n    fias = 1\r\n}\r\n\r\n\r\nexport const addressTypes: SelectionType[] = [\r\n    { label: 'Обычный', value: AddressType.normal.toString() },\r\n    { label: 'ФИАС', value: AddressType.fias.toString() },\r\n];\r\n\r\nexport const reTrustOptions: SelectionType[] = [\r\n    {value: \"1\", label: \"Без права передоверия\"},\r\n    {value: \"2\", label: \"Однократное передоверие\"},\r\n    {value: \"3\", label: \"C правом последующего передоверия\"}\r\n]\r\n\r\n\r\nexport const Options: SelectionType[] = [\r\n    {label: 'Корневая', value: 'Корневая'},\r\n    {label: 'Дочерняя', value: 'Дочерняя'},\r\n];\r\n\r\nexport const options: SelectionType[] = [\r\n    {value: \"type1\", label: \"Type 1\"},\r\n    {value: \"type2\", label: \"Type 2\"},\r\n    {value: \"unchecked\", label: \"unchecked\"},\r\n]\r\n\r\nexport const genderOptions: SelectionType[] = [\r\n    {value: \"1\", label: \"Мужской\"},\r\n    {value: \"2\", label: \"Женский\"}\r\n]\r\n\r\n\r\nexport const powersDeltsType: PowersExercisedSelectionType[] = [\r\n    {value: PowersExercisedType.individual, label: \"Индивидуально\"},\r\n    {value: PowersExercisedType.group, label: \"Совместно\"}\r\n]\r\n\r\n\r\nexport const powersSubTrustType: PowersSubTrustSelectionType[] = [\r\n    {value: PowersSubTrustType.lost, label: \"Утрачиваются\"},\r\n    {value: PowersSubTrustType.notLost, label: \"Не утрачиваются\"}\r\n]\r\n\r\nexport  const privilagesOptions: SelectionType[] = [\r\n    { label: 'Полные', value: 'Полные' },\r\n    { label: 'Ограниченные', value: 'Ограниченные' },\r\n    { label: 'Other', value: 'other' },\r\n];\r\n\r\n\r\nexport const POAType: SelectionType[] = [\r\n    { label: 'Корневая', value: 'Корневая' },\r\n    { label: 'Дочерняя', value: 'Дочерняя' },\r\n]\r\n\r\nexport const powerOfAttonomyType: PowersSelectionType[] = [\r\n    {value: PowersType.text, label: \"Текстовые\"},\r\n    {value: PowersType.machineReadable, label: \"Машиночитаемые\"}\r\n]\r\n\r\nexport const principalsTypes : Record<string, string> = {\r\n    UL:\"russianorg\",\r\n    IP: \"individualEntrepreneur\"\r\n}"]},"metadata":{},"sourceType":"module"}