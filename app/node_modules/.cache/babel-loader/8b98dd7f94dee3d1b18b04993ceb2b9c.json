{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar NumbersCollection = /*#__PURE__*/function () {\n  _createClass(NumbersCollection, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return !value || !NumbersCollection.REG_EXP.test(value) ? 'Введите список значений длиной 1-255 знаков' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !NumbersCollection.validate(value);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^.{0,255}$');\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите строку длиной до 255 знаков';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите список значений через разделитель (перенос строки)';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Значение';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'collection';\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'textarea';\n    }\n  }]);\n\n  function NumbersCollection(str) {\n    _classCallCheck(this, NumbersCollection);\n\n    if (!NumbersCollection.isValid(\"\".concat(str))) {\n      this._error = new Error('Невозможно создать список значений уникальных идентификаторов. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(str);\n  }\n\n  _createClass(NumbersCollection, [{\n    key: \"clone\",\n    value: function clone() {\n      return new NumbersCollection(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return NumbersCollection;\n}();\n\nexport default NumbersCollection;","map":{"version":3,"sources":["../../../../../../../../src/domain/documents/upd/vo/good/information/identificationNumbers/NumbersCollection.js"],"names":[],"mappings":";;;IAAM,iB;;;6BAKY,K,EAAK;AACnB,aAAO,CAAC,KAAD,IAAU,CAAC,iBAAiB,CAAC,OAAlB,CAA0B,IAA1B,CAA+B,KAA/B,CAAX,GAAmD,6CAAnD,GAAmG,SAA1G;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,iBAAiB,CAAC,QAAlB,CAA2B,KAA3B,CAAR;AACD;;;wBAViB;AAChB,aAAO,IAAI,MAAJ,CAAW,YAAX,CAAP;AACD;;;wBAUc;AACb,aAAO,qCAAP;AACD;;;wBAEqB;AACpB,aAAO,4DAAP;AACD;;;wBAEc;AACb,aAAO,UAAP;AACD;;;wBAEe;AACd,aAAO,YAAP;AACD;;;wBAEc;AACb,aAAO,UAAP;AACD;;;AAED,6BAAY,GAAZ,EAAe;AAAA;;AACb,QAAI,CAAC,iBAAiB,CAAC,OAAlB,WAA6B,GAA7B,EAAL,EAA0C;AACxC,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,iFAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,GAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,iBAAJ,CAAsB,KAAK,KAA3B,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,iBAAf","sourceRoot":"","sourcesContent":["class NumbersCollection {\r\n    static get REG_EXP() {\r\n        return new RegExp('^.{0,255}$');\r\n    }\r\n    static validate(value) {\r\n        return !value || !NumbersCollection.REG_EXP.test(value) ? 'Введите список значений длиной 1-255 знаков' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !NumbersCollection.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Введите строку длиной до 255 знаков';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите список значений через разделитель (перенос строки)';\r\n    }\r\n    static get name() {\r\n        return 'Значение';\r\n    }\r\n    static get field() {\r\n        return 'collection';\r\n    }\r\n    static get type() {\r\n        return 'textarea';\r\n    }\r\n    constructor(str) {\r\n        if (!NumbersCollection.isValid(`${str}`)) {\r\n            this._error = new Error('Невозможно создать список значений уникальных идентификаторов. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${str}`;\r\n    }\r\n    clone() {\r\n        return new NumbersCollection(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default NumbersCollection;\r\n//# sourceMappingURL=NumbersCollection.js.map"]},"metadata":{},"sourceType":"module"}