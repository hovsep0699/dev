{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport SignHandlerBase from '../SignHandlerBase';\nimport SignRequest from '../../SignRequest';\nimport SignService from '../../SignService';\n\nvar SignDocumentsProcessHandler = /*#__PURE__*/function (_SignHandlerBase) {\n  _inherits(SignDocumentsProcessHandler, _SignHandlerBase);\n\n  var _super = _createSuper(SignDocumentsProcessHandler);\n\n  function SignDocumentsProcessHandler() {\n    _classCallCheck(this, SignDocumentsProcessHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignDocumentsProcessHandler, [{\n    key: \"sign\",\n    value: function sign(request) {\n      _get(_getPrototypeOf(SignDocumentsProcessHandler.prototype), \"sign\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        SignService.events.notify('startSignProcess', request);\n        var counter = request.counter;\n        var allDocumentsProcessed = counter >= request.total;\n\n        if (allDocumentsProcessed) {\n          this.handleSignProcessEnding(request);\n          SignService.events.notify('endSignProcess', request);\n          return this.doNextHandler(request);\n        }\n\n        var signProcessChain = SignService.getSignAndSendDocumentsProcessChain();\n        this.setNext(signProcessChain);\n        var nextDocumentRequest = SignRequest.clone(request);\n        nextDocumentRequest.incrementCounter();\n        nextDocumentRequest.documentToSign = request.documents[counter];\n        SignService.events.notify('startSignProcessIteration', nextDocumentRequest);\n        return this.doNextHandler(nextDocumentRequest);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      var _a;\n\n      _get(_getPrototypeOf(SignDocumentsProcessHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return !!request.certificate && request.isGrantedToSign && ((_a = request.documents) === null || _a === void 0 ? void 0 : _a.length);\n    }\n  }, {\n    key: \"showSignFailures\",\n    value: function showSignFailures(signFailure) {\n      var _a, _b;\n\n      var error = signFailure.error;\n      var messages = (_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.messages;\n      throw new Error(messages);\n    }\n  }, {\n    key: \"handleSignProcessEnding\",\n    value: function handleSignProcessEnding(request) {\n      var signFailures = request.signFailures;\n\n      if (signFailures && signFailures.length) {\n        this.showSignFailures(signFailures[0]);\n      }\n    }\n  }]);\n\n  return SignDocumentsProcessHandler;\n}(SignHandlerBase);\n\nexport default SignDocumentsProcessHandler;","map":{"version":3,"sources":["../../../../../src/application/sign/handlers/sign/SignDocumentsProcessHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP,MAAwB,mBAAxB;;IAEM,2B;;;;;;;;;;;;;yBACC,O,EAAO;AACV,4FAAW,OAAX;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,QAAA,WAAW,CAAC,MAAZ,CAAmB,MAAnB,CAA0B,kBAA1B,EAA8C,OAA9C;AAEA,YAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;AACA,YAAM,qBAAqB,GAAG,OAAO,IAAI,OAAO,CAAC,KAAjD;;AACA,YAAI,qBAAJ,EAA2B;AACzB,eAAK,uBAAL,CAA6B,OAA7B;AACA,UAAA,WAAW,CAAC,MAAZ,CAAmB,MAAnB,CAA0B,gBAA1B,EAA4C,OAA5C;AACA,iBAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;AACD,YAAM,gBAAgB,GAAG,WAAW,CAAC,mCAAZ,EAAzB;AACA,aAAK,OAAL,CAAa,gBAAb;AAEA,YAAM,mBAAmB,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAA5B;AACA,QAAA,mBAAmB,CAAC,gBAApB;AACA,QAAA,mBAAmB,CAAC,cAApB,GAAqC,OAAO,CAAC,SAAR,CAAkB,OAAlB,CAArC;AAEA,QAAA,WAAW,CAAC,MAAZ,CAAmB,MAAnB,CAA0B,2BAA1B,EAAuD,mBAAvD;AAEA,eAAO,KAAK,aAAL,CAAmB,mBAAnB,CAAP;AACD;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;;;AACf,iGAAgB,OAAhB;;AACA,aAAO,CAAC,CAAC,OAAO,CAAC,WAAV,IAAyB,OAAO,CAAC,eAAjC,KAAgD,CAAA,EAAA,GAAI,OAAO,CAAC,SAAZ,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,MAAvE,CAAP;AACD;;;qCAEgB,W,EAAW;;;AAAA,UAClB,KADkB,GACR,WADQ,CAClB,KADkB;AAE1B,UAAM,QAAQ,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAG,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAV,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,IAApB,MAAwB,IAAxB,IAAwB,EAAA,KAAA,KAAA,CAAxB,GAAwB,KAAA,CAAxB,GAAwB,EAAA,CAAE,QAAxC;AACA,YAAM,IAAI,KAAJ,CAAU,QAAV,CAAN;AACD;;;4CAEuB,O,EAAO;AAC7B,UAAM,YAAY,GAAG,OAAO,CAAC,YAA7B;;AACA,UAAI,YAAY,IAAI,YAAY,CAAC,MAAjC,EAAyC;AACvC,aAAK,gBAAL,CAAsB,YAAY,CAAC,CAAD,CAAlC;AACD;AACF;;;;EA3CuC,e;;AA8C1C,eAAe,2BAAf","sourceRoot":"","sourcesContent":["import SignHandlerBase from '../SignHandlerBase';\r\nimport SignRequest from '../../SignRequest';\r\nimport SignService from '../../SignService';\r\nclass SignDocumentsProcessHandler extends SignHandlerBase {\r\n    sign(request) {\r\n        super.sign(request);\r\n        if (this.canHandle(request)) {\r\n            SignService.events.notify('startSignProcess', request);\r\n            const counter = request.counter;\r\n            const allDocumentsProcessed = counter >= request.total;\r\n            if (allDocumentsProcessed) {\r\n                this.handleSignProcessEnding(request);\r\n                SignService.events.notify('endSignProcess', request);\r\n                return this.doNextHandler(request);\r\n            }\r\n            const signProcessChain = SignService.getSignAndSendDocumentsProcessChain();\r\n            this.setNext(signProcessChain);\r\n            const nextDocumentRequest = SignRequest.clone(request);\r\n            nextDocumentRequest.incrementCounter();\r\n            nextDocumentRequest.documentToSign = request.documents[counter];\r\n            SignService.events.notify('startSignProcessIteration', nextDocumentRequest);\r\n            return this.doNextHandler(nextDocumentRequest);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        var _a;\r\n        super.canHandle(request);\r\n        return !!request.certificate && request.isGrantedToSign && ((_a = request.documents) === null || _a === void 0 ? void 0 : _a.length);\r\n    }\r\n    showSignFailures(signFailure) {\r\n        var _a, _b;\r\n        const { error } = signFailure;\r\n        const messages = (_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.messages;\r\n        throw new Error(messages);\r\n    }\r\n    handleSignProcessEnding(request) {\r\n        const signFailures = request.signFailures;\r\n        if (signFailures && signFailures.length) {\r\n            this.showSignFailures(signFailures[0]);\r\n        }\r\n    }\r\n}\r\nexport default SignDocumentsProcessHandler;\r\n//# sourceMappingURL=SignDocumentsProcessHandler.js.map"]},"metadata":{},"sourceType":"module"}