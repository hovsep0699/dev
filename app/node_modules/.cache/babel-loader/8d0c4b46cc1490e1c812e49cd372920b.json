{"ast":null,"code":"import { assert } from 'chai';\nimport HasAddressState from './state/HasAddressState';\nimport HasDetailsState from './state/HasDetailsState';\nimport HasAddressAndDetailsState from './state/HasAddressAndDetailsState';\nimport NoAddressAndDetailsState from './state/NoAddressAndDetailsState';\nimport CompanyState from './CompanyState';\nexport default (function (company) {\n  company._hasDetailsState = new HasDetailsState(company);\n  Object.defineProperty(company, 'hasDetailsState', {\n    get: function get() {\n      return company._hasDetailsState;\n    }\n  });\n  company._hasAddressState = new HasAddressState(company);\n  Object.defineProperty(company, 'hasAddressState', {\n    get: function get() {\n      return company._hasAddressState;\n    }\n  });\n  company._hasAddressAndDetailsState = new HasAddressAndDetailsState(company);\n  Object.defineProperty(company, 'hasAddressAndDetailsState', {\n    get: function get() {\n      return company._hasAddressAndDetailsState;\n    }\n  });\n  company._noAddressAndDetailsState = new NoAddressAndDetailsState(company);\n  Object.defineProperty(company, 'noAddressAndDetailsState', {\n    get: function get() {\n      return company._noAddressAndDetailsState;\n    }\n  });\n  company._state = company.noAddressAndDetailsState;\n  Object.defineProperty(company, 'state', {\n    get: function get() {\n      return company._state;\n    },\n    set: function set(value) {\n      assert.instanceOf(value, CompanyState);\n      company._state = value;\n\n      if (company.dispatch) {\n        company.dispatch('state', company._state);\n      }\n    }\n  });\n  Object.defineProperty(company, 'isComplete', {\n    get: function get() {\n      return company.state instanceof HasAddressAndDetailsState;\n    }\n  });\n  return company;\n});","map":{"version":3,"sources":["../../../../src/domain/common/company/CompanyStateDecorator.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,MAAvB;AACA,OAAO,eAAP,MAA4B,yBAA5B;AACA,OAAO,eAAP,MAA4B,yBAA5B;AACA,OAAO,yBAAP,MAAsC,mCAAtC;AACA,OAAO,wBAAP,MAAqC,kCAArC;AACA,OAAO,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,UAAC,OAAD,EAAY;AACzB,EAAA,OAAO,CAAC,gBAAR,GAA2B,IAAI,eAAJ,CAAoB,OAApB,CAA3B;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,iBAA/B,EAAkD;AAChD,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,gBAAd;AAAA;AAD2C,GAAlD;AAIA,EAAA,OAAO,CAAC,gBAAR,GAA2B,IAAI,eAAJ,CAAoB,OAApB,CAA3B;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,iBAA/B,EAAkD;AAChD,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,gBAAd;AAAA;AAD2C,GAAlD;AAIA,EAAA,OAAO,CAAC,0BAAR,GAAqC,IAAI,yBAAJ,CAA8B,OAA9B,CAArC;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,2BAA/B,EAA4D;AAC1D,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,0BAAd;AAAA;AADqD,GAA5D;AAIA,EAAA,OAAO,CAAC,yBAAR,GAAoC,IAAI,wBAAJ,CAA6B,OAA7B,CAApC;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,0BAA/B,EAA2D;AACzD,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,yBAAd;AAAA;AADoD,GAA3D;AAIA,EAAA,OAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,wBAAzB;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,OAA/B,EAAwC;AACtC,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,MAAd;AAAA,KADiC;AAEtC,IAAA,GAAG,EAAE,aAAC,KAAD,EAAU;AACb,MAAA,MAAM,CAAC,UAAP,CAAkB,KAAlB,EAAyB,YAAzB;AACA,MAAA,OAAO,CAAC,MAAR,GAAiB,KAAjB;;AACA,UAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,QAAA,OAAO,CAAC,QAAR,CAAiB,OAAjB,EAA0B,OAAO,CAAC,MAAlC;AACD;AACF;AARqC,GAAxC;AAWA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,IAAA,GAAG,EAAE;AAAA,aAAM,OAAO,CAAC,KAAR,YAAyB,yBAA/B;AAAA;AADsC,GAA7C;AAIA,SAAO,OAAP;AACD,CAtCD","sourceRoot":"","sourcesContent":["import { assert } from 'chai';\r\nimport HasAddressState from './state/HasAddressState';\r\nimport HasDetailsState from './state/HasDetailsState';\r\nimport HasAddressAndDetailsState from './state/HasAddressAndDetailsState';\r\nimport NoAddressAndDetailsState from './state/NoAddressAndDetailsState';\r\nimport CompanyState from './CompanyState';\r\nexport default (company) => {\r\n    company._hasDetailsState = new HasDetailsState(company);\r\n    Object.defineProperty(company, 'hasDetailsState', {\r\n        get: () => company._hasDetailsState\r\n    });\r\n    company._hasAddressState = new HasAddressState(company);\r\n    Object.defineProperty(company, 'hasAddressState', {\r\n        get: () => company._hasAddressState\r\n    });\r\n    company._hasAddressAndDetailsState = new HasAddressAndDetailsState(company);\r\n    Object.defineProperty(company, 'hasAddressAndDetailsState', {\r\n        get: () => company._hasAddressAndDetailsState\r\n    });\r\n    company._noAddressAndDetailsState = new NoAddressAndDetailsState(company);\r\n    Object.defineProperty(company, 'noAddressAndDetailsState', {\r\n        get: () => company._noAddressAndDetailsState\r\n    });\r\n    company._state = company.noAddressAndDetailsState;\r\n    Object.defineProperty(company, 'state', {\r\n        get: () => company._state,\r\n        set: (value) => {\r\n            assert.instanceOf(value, CompanyState);\r\n            company._state = value;\r\n            if (company.dispatch) {\r\n                company.dispatch('state', company._state);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(company, 'isComplete', {\r\n        get: () => company.state instanceof HasAddressAndDetailsState\r\n    });\r\n    return company;\r\n};\r\n//# sourceMappingURL=CompanyStateDecorator.js.map"]},"metadata":{},"sourceType":"module"}