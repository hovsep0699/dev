{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport RegisterHandlerBase from './RegisterHandlerBase';\nimport AJAX from '../../../infrastructure/AJAX';\nimport RegisterRequest from '../RegisterRequest';\n\nvar AjaxCertificateRegisterHandler = /*#__PURE__*/function (_RegisterHandlerBase) {\n  _inherits(AjaxCertificateRegisterHandler, _RegisterHandlerBase);\n\n  var _super = _createSuper(AjaxCertificateRegisterHandler);\n\n  function AjaxCertificateRegisterHandler(successCallback) {\n    var _this;\n\n    _classCallCheck(this, AjaxCertificateRegisterHandler);\n\n    _this = _super.call(this);\n    _this._successCallback = successCallback;\n    return _this;\n  }\n\n  _createClass(AjaxCertificateRegisterHandler, [{\n    key: \"register\",\n    value: function register(request) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(AjaxCertificateRegisterHandler.prototype), \"register\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var url = '/front/user/register_via_certificate';\n        var formData = new FormData();\n        formData.append('signature', request.loginStringSignedData);\n        formData.append('content', request.loginString);\n\n        var successHandler = function successHandler(res) {\n          if (res.data && res.data.success) {\n            _this2._successCallback();\n\n            var resultRequest = RegisterRequest.clone(request);\n            resultRequest.isNaturalCreated = res.data.isNaturalCreated;\n            resultRequest.isCompanyCreated = res.data.isCompanyCreated;\n            return _this2.doNextHandler(resultRequest);\n          }\n\n          var errorResultRequest = RegisterRequest.clone(request);\n          errorResultRequest.error = _get(_getPrototypeOf(AjaxCertificateRegisterHandler.prototype), \"createRegisterError\", _this2).call(_this2, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), new Error('Ошибка регистрации'), res.messages);\n          return _this2.doNextHandler(errorResultRequest);\n        };\n\n        var failHandler = function failHandler(error) {\n          var responseData = null;\n\n          if (error.response && error.response.data.messages) {\n            responseData = error.response.data.messages;\n          }\n\n          var errorRequest = RegisterRequest.clone(request);\n          errorRequest.error = _get(_getPrototypeOf(AjaxCertificateRegisterHandler.prototype), \"createRegisterError\", _this2).call(_this2, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), error, responseData);\n          return _this2.doNextHandler(errorRequest);\n        };\n\n        return AJAX.postFormData(url, formData).then(successHandler).catch(failHandler);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(AjaxCertificateRegisterHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return request.loginStringSignedData;\n    }\n  }]);\n\n  return AjaxCertificateRegisterHandler;\n}(RegisterHandlerBase);\n\nexport default AjaxCertificateRegisterHandler;","map":{"version":3,"sources":["../../../../src/application/register/handlers/AjaxCertificateRegisterHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,mBAAP,MAAgC,uBAAhC;AACA,OAAO,IAAP,MAAiB,8BAAjB;AACA,OAAO,eAAP,MAA4B,oBAA5B;;IAEM,8B;;;;;AACJ,0CAAY,eAAZ,EAA2B;AAAA;;AAAA;;AACzB;AACA,UAAK,gBAAL,GAAwB,eAAxB;AAFyB;AAG1B;;;;6BAEQ,O,EAAO;AAAA;;AACd,mGAAe,OAAf;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,GAAG,GAAG,sCAAZ;AACA,YAAM,QAAQ,GAAG,IAAI,QAAJ,EAAjB;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,WAAhB,EAA6B,OAAO,CAAC,qBAArC;AACA,QAAA,QAAQ,CAAC,MAAT,CAAgB,SAAhB,EAA2B,OAAO,CAAC,WAAnC;;AAEA,YAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,GAAD,EAAQ;AAC7B,cAAI,GAAG,CAAC,IAAJ,IAAY,GAAG,CAAC,IAAJ,CAAS,OAAzB,EAAkC;AAChC,YAAA,MAAI,CAAC,gBAAL;;AACA,gBAAM,aAAa,GAAG,eAAe,CAAC,KAAhB,CAAsB,OAAtB,CAAtB;AACA,YAAA,aAAa,CAAC,gBAAd,GAAiC,GAAG,CAAC,IAAJ,CAAS,gBAA1C;AACA,YAAA,aAAa,CAAC,gBAAd,GAAiC,GAAG,CAAC,IAAJ,CAAS,gBAA1C;AACA,mBAAO,MAAI,CAAC,aAAL,CAAmB,aAAnB,CAAP;AACD;;AACD,cAAM,kBAAkB,GAAG,eAAe,CAAC,KAAhB,CAAsB,OAAtB,CAA3B;AACA,UAAA,kBAAkB,CAAC,KAAnB,8JAA+D,GAA/D,GAAsE,IAAI,KAAJ,CAAU,oBAAV,CAAtE,EAAuG,GAAG,CAAC,QAA3G;AACA,iBAAO,MAAI,CAAC,aAAL,CAAmB,kBAAnB,CAAP;AACD,SAXD;;AAaA,YAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAU;AAC5B,cAAI,YAAY,GAAG,IAAnB;;AACA,cAAG,KAAK,CAAC,QAAN,IAAkB,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,QAAzC,EAAkD;AAChD,YAAA,YAAY,GAAG,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,QAAnC;AACD;;AACD,cAAM,YAAY,GAAG,eAAe,CAAC,KAAhB,CAAsB,OAAtB,CAArB;AAEA,UAAA,YAAY,CAAC,KAAb,8JAAyD,GAAzD,GAAgE,KAAhE,EAAuE,YAAvE;AACA,iBAAO,MAAI,CAAC,aAAL,CAAmB,YAAnB,CAAP;AACD,SATD;;AAWA,eAAO,IAAI,CAAC,YAAL,CAAkB,GAAlB,EAAuB,QAAvB,EAAiC,IAAjC,CAAsC,cAAtC,EAAsD,KAAtD,CAA4D,WAA5D,CAAP;AACD;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,oGAAgB,OAAhB;;AACA,aAAO,OAAO,CAAC,qBAAf;AACD;;;;EA9C0C,mB;;AAiD7C,eAAe,8BAAf","sourceRoot":"","sourcesContent":["import RegisterHandlerBase from './RegisterHandlerBase';\r\nimport AJAX from '../../../infrastructure/AJAX';\r\nimport RegisterRequest from '../RegisterRequest';\r\nclass AjaxCertificateRegisterHandler extends RegisterHandlerBase {\r\n    constructor(successCallback) {\r\n        super();\r\n        this._successCallback = successCallback;\r\n    }\r\n    register(request) {\r\n        super.register(request);\r\n        if (this.canHandle(request)) {\r\n            const url = '/front/user/register_via_certificate';\r\n            const formData = new FormData();\r\n            formData.append('signature', request.loginStringSignedData);\r\n            formData.append('content', request.loginString);\r\n            const successHandler = (res) => {\r\n                if (res.data && res.data.success) {\r\n                    this._successCallback();\r\n                    const resultRequest = RegisterRequest.clone(request);\r\n                    resultRequest.isNaturalCreated = res.data.isNaturalCreated;\r\n                    resultRequest.isCompanyCreated = res.data.isCompanyCreated;\r\n                    return this.doNextHandler(resultRequest);\r\n                }\r\n                const errorResultRequest = RegisterRequest.clone(request);\r\n                errorResultRequest.error = super.createRegisterError(`Запрос ${url}`, new Error('Ошибка регистрации'), res.messages);\r\n                return this.doNextHandler(errorResultRequest);\r\n            };\r\n            const failHandler = (error) => {\r\n                var responseData = null;\r\n                if (error.response && error.response.data.messages) {\r\n                    responseData = error.response.data.messages;\r\n                }\r\n                const errorRequest = RegisterRequest.clone(request);\r\n                errorRequest.error = super.createRegisterError(`Запрос ${url}`, error, responseData);\r\n                return this.doNextHandler(errorRequest);\r\n            };\r\n            return AJAX.postFormData(url, formData).then(successHandler).catch(failHandler);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        return request.loginStringSignedData;\r\n    }\r\n}\r\nexport default AjaxCertificateRegisterHandler;\r\n//# sourceMappingURL=AjaxCertificateRegisterHandler.js.map"]},"metadata":{},"sourceType":"module"}