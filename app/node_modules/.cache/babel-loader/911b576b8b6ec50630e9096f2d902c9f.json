{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,Input}from'@distate/components';import'./style.css';export var Pagination=function Pagination(props){var LIMIT=10;var _props$listLength=props.listLength,listLength=_props$listLength===void 0?0:_props$listLength,setOffset=props.setOffset,_props$limit=props.limit,limit=_props$limit===void 0?LIMIT:_props$limit;var _React$useState=React.useState(1),_React$useState2=_slicedToArray(_React$useState,2),inputValue=_React$useState2[0],setInputValue=_React$useState2[1];var _React$useState3=React.useState(1),_React$useState4=_slicedToArray(_React$useState3,2),pageCount=_React$useState4[0],setPageCount=_React$useState4[1];React.useEffect(function(){/** общее число элементов делим на максимальное кол-во элементов для страницы */var result=Math.floor(+(listLength-1)/limit);/** кол-во страниц на 1 больше чем результат полученный выше */setPageCount(result+1);},[listLength,limit]);React.useEffect(function(){/** При изменении инпута, передаем значение в верхней компонент */setOffset((inputValue-1)*limit);},[inputValue,setOffset,limit]);/** изменение значения инпута */var changeInpuHandler=function changeInpuHandler(value){setInputValue(+value);/** если введено больше чем есть страниц, то выводится последняя страница */if(+value>pageCount){setInputValue(pageCount);}/** если значение меньше 1, то выводится первая страница */if(+value<1){setInputValue(1);}};/** нажатие влево */var onLeft=function onLeft(){setInputValue(inputValue-1);};/** нажатие врпаво */var onRight=function onRight(){setInputValue(inputValue+1);};return/*#__PURE__*/React.createElement(\"div\",{className:\"pagination\"},/*#__PURE__*/React.createElement(Button,{onClick:onLeft,disabled:inputValue<=1},'<'),/*#__PURE__*/React.createElement(Input,{value:inputValue||1,width:45,onChange:function onChange(e){return changeInpuHandler(e.target.value);},contentClassName:\"pagination-input-wrapper\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"count-text\"},\"\\u0438\\u0437 \",pageCount||1),/*#__PURE__*/React.createElement(Button,{onClick:onRight,disabled:inputValue>=pageCount},'>'));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/pagination/Pagination.tsx"],"names":["React","Button","Input","Pagination","props","LIMIT","listLength","setOffset","limit","useState","inputValue","setInputValue","pageCount","setPageCount","useEffect","result","Math","floor","changeInpuHandler","value","onLeft","onRight","e","target"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,qBAA9B,CACA,MAAO,aAAP,CAUA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAkB,CAC1C,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAD0C,sBAEWD,KAFX,CAElCE,UAFkC,CAElCA,UAFkC,4BAErB,CAFqB,mBAElBC,SAFkB,CAEWH,KAFX,CAElBG,SAFkB,cAEWH,KAFX,CAEPI,KAFO,CAEPA,KAFO,uBAECH,KAFD,kCAINL,KAAK,CAACS,QAAN,CAAe,CAAf,CAJM,oDAInCC,UAJmC,qBAIvBC,aAJuB,0CAKRX,KAAK,CAACS,QAAN,CAAe,CAAf,CALQ,qDAKnCG,SALmC,qBAKxBC,YALwB,qBAO1Cb,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpB,gFACA,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAW,EAAEX,UAAU,CAAG,CAAf,EAAoBE,KAA/B,CAAf,CACA,+DACAK,YAAY,CAACE,MAAM,CAAG,CAAV,CAAZ,CACD,CALD,CAKG,CAACT,UAAD,CAAaE,KAAb,CALH,EAOAR,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpB,kEACAP,SAAS,CAAC,CAACG,UAAU,CAAG,CAAd,EAAmBF,KAApB,CAAT,CACD,CAHD,CAGG,CAACE,UAAD,CAAaH,SAAb,CAAwBC,KAAxB,CAHH,EAKA,gCACA,GAAMU,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAmB,CAC3CR,aAAa,CAAC,CAACQ,KAAF,CAAb,CACA,4EACA,GAAI,CAACA,KAAD,CAASP,SAAb,CAAwB,CACtBD,aAAa,CAACC,SAAD,CAAb,CACD,CACD,2DACA,GAAI,CAACO,KAAD,CAAS,CAAb,CAAgB,CACdR,aAAa,CAAC,CAAD,CAAb,CACD,CACF,CAVD,CAYA,oBACA,GAAMS,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBT,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACD,CAFD,CAIA,qBACA,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBV,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACD,CAFD,CAIA,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAEU,MAAjB,CAAyB,QAAQ,CAAEV,UAAU,EAAI,CAAjD,EACG,GADH,CADF,cAIE,oBAAC,KAAD,EACE,KAAK,CAAEA,UAAU,EAAI,CADvB,CAEE,KAAK,CAAE,EAFT,CAGE,QAAQ,CAAE,kBAAAY,CAAC,QAAIJ,CAAAA,iBAAiB,CAACI,CAAC,CAACC,MAAF,CAASJ,KAAV,CAArB,EAHb,CAIE,gBAAgB,CAAC,0BAJnB,EAJF,cAUE,2BAAK,SAAS,CAAC,YAAf,kBAAgCP,SAAS,EAAI,CAA7C,CAVF,cAWE,oBAAC,MAAD,EAAQ,OAAO,CAAES,OAAjB,CAA0B,QAAQ,CAAEX,UAAU,EAAIE,SAAlD,EACG,GADH,CAXF,CADF,CAiBD,CA3DM","sourcesContent":["import React from 'react';\r\nimport { Button, Input } from '@distate/components';\r\nimport './style.css';\r\n\r\ninterface Props {\r\n  /** длина списка */\r\n  listLength?: number;\r\n  /** метод установки смещение во внешнем компоненте */\r\n  setOffset: Function;\r\n  /** элементов на странице */\r\n  limit?: number;\r\n}\r\nexport const Pagination = (props: Props) => {\r\n  const LIMIT = 10;\r\n  const { listLength = 0, setOffset, limit = LIMIT } = props;\r\n\r\n  const [inputValue, setInputValue] = React.useState(1);\r\n  const [pageCount, setPageCount] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    /** общее число элементов делим на максимальное кол-во элементов для страницы */\r\n    const result = Math.floor(+(listLength - 1) / limit);\r\n    /** кол-во страниц на 1 больше чем результат полученный выше */\r\n    setPageCount(result + 1);\r\n  }, [listLength, limit]);\r\n\r\n  React.useEffect(() => {\r\n    /** При изменении инпута, передаем значение в верхней компонент */\r\n    setOffset((inputValue - 1) * limit);\r\n  }, [inputValue, setOffset, limit]);\r\n\r\n  /** изменение значения инпута */\r\n  const changeInpuHandler = (value: string) => {\r\n    setInputValue(+value);\r\n    /** если введено больше чем есть страниц, то выводится последняя страница */\r\n    if (+value > pageCount) {\r\n      setInputValue(pageCount);\r\n    }\r\n    /** если значение меньше 1, то выводится первая страница */\r\n    if (+value < 1) {\r\n      setInputValue(1);\r\n    }\r\n  };\r\n\r\n  /** нажатие влево */\r\n  const onLeft = () => {\r\n    setInputValue(inputValue - 1);\r\n  };\r\n\r\n  /** нажатие врпаво */\r\n  const onRight = () => {\r\n    setInputValue(inputValue + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <Button onClick={onLeft} disabled={inputValue <= 1}>\r\n        {'<'}\r\n      </Button>\r\n      <Input\r\n        value={inputValue || 1}\r\n        width={45}\r\n        onChange={e => changeInpuHandler(e.target.value)}\r\n        contentClassName=\"pagination-input-wrapper\"\r\n      />\r\n      <div className=\"count-text\">из {pageCount || 1}</div>\r\n      <Button onClick={onRight} disabled={inputValue >= pageCount}>\r\n        {'>'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}