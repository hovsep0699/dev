{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch}from'react-redux';import{Select,Button,ButtonKinds}from'@distate/components';import Core from'@distate/core/dist/application/Core';import CompanyGateway from'@distate/core/dist/application/company/CompanyGateway';import{createDocumentFromFile}from'../../../store/actions';import{AutocompleteRecipient}from'../../common/AutocompleteRecipient';/** Счет-фактура / УПД */export var InvoiceUtd=function InvoiceUtd(props){var id=props.id,title=props.title;var dispatch=useDispatch();var companyGateway=new CompanyGateway();var flowTypeOptions=[{label:'Счет-фактура',value:'invoice_via_utd'},{label:'Универсальный передаточный документ',value:undefined}];/** опции селекта подразделений отправителя */var _useState=useState(),_useState2=_slicedToArray(_useState,2),senderOptions=_useState2[0],setSenderOptions=_useState2[1];/** типа ДО */var _useState3=useState({label:'Счет-фактура',value:'invoice_via_utd'}),_useState4=_slicedToArray(_useState3,2),flowType=_useState4[0],setFlowType=_useState4[1];/** получатель */var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),recipient=_useState6[0],setRecipient=_useState6[1];/** подразделение отправителя */var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),sender=_useState8[0],setSender=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),senderError=_useState10[0],setSenderError=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),recipientError=_useState12[0],setRecipientError=_useState12[1];/** преобразование ответа сервера в массив для опций селекта контрагента */function contractorDataToOptions(data){return data.map(function(item){return{value:item.id,label:item.title};});}useEffect(function(){var getSender=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _Core$user,_Core$user$employee;var userId,_yield$companyGateway,_yield$companyGateway2,rows;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:userId=(_Core$user=Core.user)===null||_Core$user===void 0?void 0:(_Core$user$employee=_Core$user.employee)===null||_Core$user$employee===void 0?void 0:_Core$user$employee.id;_context.next=3;return companyGateway.getEmployeeDivision(userId,{isActive:1});case 3:_yield$companyGateway=_context.sent;_yield$companyGateway2=_yield$companyGateway.rows;rows=_yield$companyGateway2===void 0?[]:_yield$companyGateway2;setSenderOptions(contractorDataToOptions(rows));case 7:case\"end\":return _context.stop();}}},_callee);}));return function getSender(){return _ref.apply(this,arguments);};}();getSender();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);/** проверка валидации */var validation=function validation(){var isValid=true;if(!sender){setSenderError(true);isValid=false;}else{setSenderError(false);}if(!recipient){setRecipientError(true);isValid=false;}else{setRecipientError(false);}return isValid;};/** создать документ */var onCreateDocument=function onCreateDocument(){if(!validation()){return false;}var params={from:{division:sender===null||sender===void 0?void 0:sender.value},to:{division:recipient===null||recipient===void 0?void 0:recipient.value},flowType:flowType===null||flowType===void 0?void 0:flowType.value};dispatch(createDocumentFromFile({id:id,params:params}));};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"header\"},title),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0422\\u0438\\u043F \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u043E\\u0431\\u043E\\u0440\\u043E\\u0442\\u0430\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Select,{value:flowType,options:flowTypeOptions,onChange:function onChange(e){return setFlowType(e);},placeholder:\"\",width:400}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name required\"},\"\\u041F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044F\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Select,{value:sender,options:senderOptions,onChange:function onChange(e){return setSender(e);},placeholder:\"\",width:400,error:senderError,touched:senderError}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name required\"},\"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\",style:{width:400}},/*#__PURE__*/React.createElement(AutocompleteRecipient,{setItem:setRecipient,item:recipient,error:recipientError,placeholder:\"\",qParams:{isActive:1,type:'division'}})))),/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Orange,onClick:onCreateDocument},\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/create-document/components/create-from-file/forms/InvoiceUtd.tsx"],"names":["React","useState","useEffect","useDispatch","Select","Button","ButtonKinds","Core","CompanyGateway","createDocumentFromFile","AutocompleteRecipient","InvoiceUtd","props","id","title","dispatch","companyGateway","flowTypeOptions","label","value","undefined","senderOptions","setSenderOptions","flowType","setFlowType","recipient","setRecipient","sender","setSender","senderError","setSenderError","recipientError","setRecipientError","contractorDataToOptions","data","map","item","getSender","userId","user","employee","getEmployeeDivision","isActive","rows","validation","isValid","onCreateDocument","params","from","division","to","e","width","type","Orange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Select, Button, ButtonKinds } from '@distate/components';\r\nimport Core from '@distate/core/dist/application/Core';\r\nimport CompanyGateway from '@distate/core/dist/application/company/CompanyGateway';\r\nimport { createDocumentFromFile } from '../../../store/actions';\r\nimport { AutocompleteRecipient } from '../../common/AutocompleteRecipient';\r\n\r\ntype Props = {\r\n  id: string;\r\n  title?: string;\r\n};\r\n\r\n/** Счет-фактура / УПД */\r\nexport const InvoiceUtd = (props: Props) => {\r\n  const { id, title } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const companyGateway = new CompanyGateway();\r\n\r\n  const flowTypeOptions = [\r\n    { label: 'Счет-фактура', value: 'invoice_via_utd' },\r\n    { label: 'Универсальный передаточный документ', value: undefined }\r\n  ];\r\n\r\n  /** опции селекта подразделений отправителя */\r\n  const [senderOptions, setSenderOptions] = useState<any>();\r\n  /** типа ДО */\r\n  const [flowType, setFlowType] = useState({ label: 'Счет-фактура', value: 'invoice_via_utd' });\r\n  /** получатель */\r\n  const [recipient, setRecipient] = useState<any>();\r\n  /** подразделение отправителя */\r\n  const [sender, setSender] = useState<HTMLSelectElement>();\r\n  const [senderError, setSenderError] = useState<boolean>();\r\n  const [recipientError, setRecipientError] = useState<boolean>();\r\n\r\n  /** преобразование ответа сервера в массив для опций селекта контрагента */\r\n  function contractorDataToOptions(data: any[]) {\r\n    return data.map(item => {\r\n      return {\r\n        value: item.id,\r\n        label: item.title\r\n      };\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getSender = async () => {\r\n      const userId = Core.user?.employee?.id;\r\n      const { rows = [] } = await companyGateway.getEmployeeDivision(userId, {\r\n        isActive: 1\r\n      });\r\n      setSenderOptions(contractorDataToOptions(rows));\r\n    };\r\n    getSender();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  /** проверка валидации */\r\n  const validation = () => {\r\n    let isValid = true;\r\n\r\n    if (!sender) {\r\n      setSenderError(true);\r\n      isValid = false;\r\n    } else {\r\n      setSenderError(false);\r\n    }\r\n\r\n    if (!recipient) {\r\n      setRecipientError(true);\r\n      isValid = false;\r\n    } else {\r\n      setRecipientError(false);\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  /** создать документ */\r\n  const onCreateDocument = () => {\r\n    if (!validation()) {\r\n      return false;\r\n    }\r\n\r\n    const params = {\r\n      from: { division: sender?.value },\r\n      to: { division: recipient?.value },\r\n      flowType: flowType?.value\r\n    };\r\n    dispatch(createDocumentFromFile({ id, params }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"header\">{title}</h2>\r\n      <div className=\"two-columns-center\">\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Тип документооборота</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Select\r\n              value={flowType}\r\n              options={flowTypeOptions}\r\n              onChange={(e: any) => setFlowType(e)}\r\n              placeholder=\"\"\r\n              width={400}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name required\">Подразделение отправителя</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Select\r\n              value={sender}\r\n              options={senderOptions}\r\n              onChange={(e: HTMLSelectElement) => setSender(e)}\r\n              placeholder=\"\"\r\n              width={400}\r\n              error={senderError}\r\n              touched={senderError}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name required\">Получатель</div>\r\n          <div className=\"two-columns-center_value\" style={{ width: 400 }}>\r\n            <AutocompleteRecipient\r\n              setItem={setRecipient}\r\n              item={recipient}\r\n              error={recipientError}\r\n              placeholder=\"\"\r\n              qParams={{ isActive: 1, type: 'division' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Button kind={ButtonKinds.Orange} onClick={onCreateDocument}>\r\n        Создать документ\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}