{"ast":null,"code":"export default function(TargetObj){Object.defineProperty(TargetObj,'_observers',{value:[],writable:true});TargetObj.on=function(eventName,callback){TargetObj._observers.push({eventName:eventName,callback:callback});};TargetObj.off=function(eventName){TargetObj._observers=TargetObj._observers.filter(function(observer){return!(observer.eventName===eventName);});};TargetObj.dispatch=function(eventName,payload){TargetObj._observers.forEach(function(observer){if(observer.eventName===eventName){observer.callback(payload);}});};return TargetObj;}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/utils/withEvent.js"],"names":["TargetObj","Object","defineProperty","value","writable","on","eventName","callback","_observers","push","off","filter","observer","dispatch","payload","forEach"],"mappings":"AAAA,cAAe,UAASA,SAAT,CAAoB,CACjCC,MAAM,CAACC,cAAP,CAAsBF,SAAtB,CAAiC,YAAjC,CAA+C,CAC7CG,KAAK,CAAE,EADsC,CAE7CC,QAAQ,CAAE,IAFmC,CAA/C,EAIAJ,SAAS,CAACK,EAAV,CAAe,SAACC,SAAD,CAAYC,QAAZ,CAAyB,CACtCP,SAAS,CAACQ,UAAV,CAAqBC,IAArB,CAA0B,CAAEH,SAAS,CAATA,SAAF,CAAaC,QAAQ,CAARA,QAAb,CAA1B,EACD,CAFD,CAGAP,SAAS,CAACU,GAAV,CAAgB,SAAAJ,SAAS,CAAI,CAC3BN,SAAS,CAACQ,UAAV,CAAuBR,SAAS,CAACQ,UAAV,CAAqBG,MAArB,CAA4B,SAAAC,QAAQ,CAAI,CAC7D,MAAO,EAAEA,QAAQ,CAACN,SAAT,GAAuBA,SAAzB,CAAP,CACD,CAFsB,CAAvB,CAGD,CAJD,CAKAN,SAAS,CAACa,QAAV,CAAqB,SAACP,SAAD,CAAYQ,OAAZ,CAAwB,CAC3Cd,SAAS,CAACQ,UAAV,CAAqBO,OAArB,CAA6B,SAAAH,QAAQ,CAAI,CACvC,GAAIA,QAAQ,CAACN,SAAT,GAAuBA,SAA3B,CAAsC,CACpCM,QAAQ,CAACL,QAAT,CAAkBO,OAAlB,EACD,CACF,CAJD,EAKD,CAND,CAOA,MAAOd,CAAAA,SAAP,CACD","sourcesContent":["export default function(TargetObj) {\r\n  Object.defineProperty(TargetObj, '_observers', {\r\n    value: [],\r\n    writable: true\r\n  });\r\n  TargetObj.on = (eventName, callback) => {\r\n    TargetObj._observers.push({ eventName, callback });\r\n  };\r\n  TargetObj.off = eventName => {\r\n    TargetObj._observers = TargetObj._observers.filter(observer => {\r\n      return !(observer.eventName === eventName);\r\n    });\r\n  };\r\n  TargetObj.dispatch = (eventName, payload) => {\r\n    TargetObj._observers.forEach(observer => {\r\n      if (observer.eventName === eventName) {\r\n        observer.callback(payload);\r\n      }\r\n    });\r\n  };\r\n  return TargetObj;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}