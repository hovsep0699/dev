{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from'react';// import GeneralSectionOptions from \"../../SubTrust/sections/GeneralSectionOptions\";\nimport ObservableComponent from\"../../../observableComponent/observableComponent\";import{useDialog}from\"../../dashboard/modals/useDialog\";import GlobalVariadicForm from\"../../../components/forms/GlobalVariadicForm\";import ModalFormFooter from\"../../../widgets/ModlFormFooter\";import{ulAdminFields}from\"../../../constants/options/options\";import{ulAdminOptions}from\"../../../constants/initialValues/AdminFormInitialData\";import GeneralSectionOptions from\"../../Sections/page/GeneralSectionOptions\";import{serviceLocator}from\"../../../../di/app_component\";var AdminSection=function AdminSection(_ref){var admin=_ref.admin,baseWidth=_ref.baseWidth,principalManager=_ref.principalManager,presenter=_ref.presenter,principalIndex=_ref.principalIndex;// const presenter = new Presenter<object>({isSubmitting: null, status: null, handleSubmit: null, isEditMode: null});\nvar _useDialog=useDialog(),openDialog=_useDialog.openDialog,hideDialog=_useDialog.hideDialog;var handleSubmitAdmin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(index,formData,isEditMode){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isEditMode===true){principalManager.getPrincipals()[principalIndex].editAdmin(index,formData);}else{principalManager.addAdminToPrincipal(principalIndex,formData);}presenter.onEditModeChange(false);presenter.update();hideDialog();// setIsEditMode(false);\n// setSelectedAdmin(null);\ncase 4:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmitAdmin(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();var showAdminForm=function showAdminForm(e,index,defaultAdmin,isEditMode){console.log(\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",defaultAdmin,index,e);openDialog({alignment:\"center\",content:/*#__PURE__*/React.createElement(ObservableComponent,{builder:function builder(state){return/*#__PURE__*/React.createElement(GlobalVariadicForm,{isSubmitting:state.isSubmitting,onStateChange:presenter.onFormStateChange,defaultValues:defaultAdmin!==null&&defaultAdmin!==void 0?defaultAdmin:'',initialFields:ulAdminFields,formTypes:ulAdminOptions,handleSubmit:function handleSubmit(e){return handleSubmitAdmin(index,e,isEditMode);},close:hideDialog});},create:function create(){return presenter;}}),position:\"fixed\",maxHeight:\"90%\",maxWidth:\"704px\",footer:/*#__PURE__*/React.createElement(ModalFormFooter,{state:presenter.getState()}),title:'Поиск по МЧД'},e);};var handleEditClick=function handleEditClick(admin){// manager.getPrincipals()[principalIndex].editAdmin(adminIndex, admin);\n// principalPresenter.update();\n// setSelectedAdmin(admin);\n// setIsEditMode(true);\n};// Function to handle removing an admin\nvar handleRemoveAdmin=function handleRemoveAdmin(index){principalManager.getPrincipals()[principalIndex].removeAdmin(index);presenter.update();// const updatedAdmin = [...admin];\n// updatedAdmin.splice(index, 1);\n//console.log(updatedAdmin);\n// setAdmin(updatedAdmin);\n};return/*#__PURE__*/React.createElement(ObservableComponent,{builder:function builder(state){return/*#__PURE__*/React.createElement(GeneralSectionOptions,{presenter:serviceLocator.get(\"SectionPresenter\"),sectionData:admin,baseWidth:baseWidth,onShowForm:function onShowForm(e,index){return showAdminForm(e,index,principalIndex,false);},onRemove:handleRemoveAdmin,getInn:function getInn(section){if(section.getFields().hasOwnProperty(\"inn\")){var _section$getFields$se;return(_section$getFields$se=section.getFields()[section.getFields()[\"inn\"]])!==null&&_section$getFields$se!==void 0?_section$getFields$se:\"\";}return\"\";},onEdit:function onEdit(e,index){showAdminForm(e,index,state.principals[principalIndex].getAdmin(index).getFields(),true);// presenter.setState({...state, isEditMode: true});\npresenter.onEditModeChange(true);},isRequired:true,sectionTitle:\"Руководитель Организации\"});},create:function create(){return presenter;}});};export default AdminSection;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/pages/SubTrust/sections/AdminSection.tsx"],"names":["React","ObservableComponent","useDialog","GlobalVariadicForm","ModalFormFooter","ulAdminFields","ulAdminOptions","GeneralSectionOptions","serviceLocator","AdminSection","admin","baseWidth","principalManager","presenter","principalIndex","openDialog","hideDialog","handleSubmitAdmin","index","formData","isEditMode","getPrincipals","editAdmin","addAdminToPrincipal","onEditModeChange","update","showAdminForm","e","defaultAdmin","console","log","alignment","content","state","isSubmitting","onFormStateChange","position","maxHeight","maxWidth","footer","getState","title","handleEditClick","handleRemoveAdmin","removeAdmin","get","section","getFields","hasOwnProperty","principals","getAdmin"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import GeneralSectionOptions from \"../../SubTrust/sections/GeneralSectionOptions\";\r\nimport ObservableComponent from \"../../../observableComponent/observableComponent\";\r\nimport {useDialog} from \"../../dashboard/modals/useDialog\";\r\nimport GlobalVariadicForm from \"../../../components/forms/GlobalVariadicForm\";\r\nimport ModalFormFooter from \"../../../widgets/ModlFormFooter\";\r\nimport {SubTrustPresenter} from \"../presenter/SubTrustPresenter\";\r\nimport {PrincipalManager} from \"../../../../core/PrincipalManager\";\r\nimport {SubTrustPresenterState} from \"../presenter/SubTrustPresenterState\";\r\nimport {ulAdminFields} from \"../../../constants/options/options\";\r\nimport {ulAdminOptions} from \"../../../constants/initialValues/AdminFormInitialData\";\r\nimport GeneralSectionOptions from \"../../Sections/page/GeneralSectionOptions\";\r\nimport {serviceLocator} from \"../../../../di/app_component\";\r\nimport {SectionPresenter} from \"../../Sections/presenter/SectionPresenter\";\r\nimport {SubTrustPresenterViewModel} from \"../presenter/SubTrustPresenterViewModel\";\r\n\r\ninterface AdminSectionProps {\r\n    admin: any;\r\n    baseWidth?: string;\r\n    presenter: SubTrustPresenter;\r\n    principalManager: PrincipalManager;\r\n    principalIndex: number;\r\n}\r\n\r\nconst AdminSection: React.FC<AdminSectionProps> = ({ admin, baseWidth, principalManager, presenter, principalIndex }: AdminSectionProps) => {\r\n\r\n    // const presenter = new Presenter<object>({isSubmitting: null, status: null, handleSubmit: null, isEditMode: null});\r\n    const {openDialog, hideDialog} = useDialog();\r\n\r\n\r\n    const handleSubmitAdmin =async (index: number, formData: any, isEditMode: boolean | null) => {\r\n        if (isEditMode === true) {\r\n            principalManager.getPrincipals()[principalIndex].editAdmin(index,formData);\r\n        }\r\n        else {\r\n            principalManager.addAdminToPrincipal(principalIndex,formData);\r\n        }\r\n        presenter.onEditModeChange(false);\r\n\r\n        presenter.update();\r\n        hideDialog();\r\n        // setIsEditMode(false);\r\n        // setSelectedAdmin(null);\r\n    };\r\n\r\n\r\n    const showAdminForm = (e: any, index: number, defaultAdmin: any, isEditMode: boolean | null) => {\r\n        console.log(\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\",defaultAdmin, index, e)\r\n        openDialog({\r\n            alignment: \"center\",\r\n            content:\r\n\r\n                <ObservableComponent<SubTrustPresenterViewModel, SubTrustPresenterState, SubTrustPresenter>\r\n                    builder={(state)=> (\r\n                        <GlobalVariadicForm\r\n                            isSubmitting={state.isSubmitting}\r\n                            onStateChange={presenter.onFormStateChange}\r\n                            defaultValues={defaultAdmin ?? ''}\r\n                            initialFields={ulAdminFields}\r\n                            formTypes={ulAdminOptions}\r\n                            handleSubmit={(e: any)=>handleSubmitAdmin(index, e, isEditMode)}\r\n                            close={hideDialog}\r\n                        />\r\n                    )}\r\n                    create={()=>presenter}\r\n                />,\r\n            position: \"fixed\",\r\n            maxHeight: \"90%\",\r\n            maxWidth: \"704px\",\r\n            footer: <ModalFormFooter state={presenter.getState()} />,\r\n            title: 'Поиск по МЧД',\r\n        }, e)\r\n    }\r\n  \r\n    const handleEditClick = ( admin: any) => {\r\n        // manager.getPrincipals()[principalIndex].editAdmin(adminIndex, admin);\r\n        // principalPresenter.update();\r\n      // setSelectedAdmin(admin);\r\n      // setIsEditMode(true);\r\n      \r\n    };\r\n  \r\n\r\n  // Function to handle removing an admin\r\n  const handleRemoveAdmin = (index: number) => {\r\n      principalManager.getPrincipals()[principalIndex].removeAdmin(index);\r\n      presenter.update();\r\n    // const updatedAdmin = [...admin];\r\n    // updatedAdmin.splice(index, 1);\r\n    //console.log(updatedAdmin);\r\n    // setAdmin(updatedAdmin);\r\n  };\r\n\r\n  return (\r\n      <ObservableComponent<SubTrustPresenterViewModel, SubTrustPresenterState, SubTrustPresenter> builder={(state: SubTrustPresenterState) => (\r\n          <GeneralSectionOptions\r\n              presenter={serviceLocator.get<SectionPresenter>(\"SectionPresenter\")}\r\n              sectionData={admin}\r\n              baseWidth={baseWidth}\r\n              onShowForm={(e: any, index: number)=>showAdminForm(e, index, principalIndex, false)}\r\n              onRemove={handleRemoveAdmin}\r\n              getInn={(section) => {\r\n                  if (section.getFields().hasOwnProperty(\"inn\")) {\r\n                      return section.getFields()[section.getFields()[\"inn\"]] ?? \"\";\r\n                  }\r\n                  return \"\"\r\n              }}\r\n              onEdit={(e: any, index: number)=> {\r\n                  showAdminForm(e, index, state.principals[principalIndex].getAdmin(index).getFields(), true)\r\n                  // presenter.setState({...state, isEditMode: true});\r\n                  presenter.onEditModeChange(true);\r\n              }}\r\n              isRequired={true}\r\n              sectionTitle={\"Руководитель Организации\"}\r\n          />\r\n      )} create={() => presenter} />\r\n\r\n  );\r\n}\r\n\r\nexport default AdminSection;\r\n"]},"metadata":{},"sourceType":"module"}