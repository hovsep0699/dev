{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport FieldError from '../FieldError';\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\nimport CheckBox from '../../CheckBox';\n\nvar CheckboxField = function CheckboxField(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      _ref$hideErrors = _ref.hideErrors,\n      hideErrors = _ref$hideErrors === void 0 ? false : _ref$hideErrors,\n      _ref$dark = _ref.dark,\n      dark = _ref$dark === void 0 ? false : _ref$dark;\n\n  var _useField = useField({\n    name: name,\n    type: 'checkbox'\n  }),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var touched = meta.touched,\n      error = meta.error;\n  return React.createElement(StyledFormField, null, React.createElement(FieldWrapper, null, React.createElement(CheckBox, Object.assign({\n    label: label\n  }, field, {\n    dark: dark\n  }))), !hideErrors && touched && error ? React.createElement(FieldError, null, error) : null);\n};\n\nexport default CheckboxField;","map":{"version":3,"sources":["../../../src/Form/fields/CheckboxField.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,QAAT,QAAyB,QAAzB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,SAAS,eAAT,EAA0B,YAA1B,QAA8C,gBAA9C;AACA,OAAO,QAAP,MAAqB,gBAArB;;AASA,IAAM,aAAa,GAAG,SAAhB,aAAgB,OAA0E;AAAA,MAAvE,IAAuE,QAAvE,IAAuE;AAAA,MAAjE,KAAiE,QAAjE,KAAiE;AAAA,6BAA1D,UAA0D;AAAA,MAA1D,UAA0D,gCAA7C,KAA6C;AAAA,uBAAtC,IAAsC;AAAA,MAAtC,IAAsC,0BAA/B,KAA+B;;AAAA,kBACxE,QAAQ,CAAC;AAAE,IAAA,IAAI,EAAJ,IAAF;AAAQ,IAAA,IAAI,EAAE;AAAd,GAAD,CADgE;AAAA;AAAA,MACvF,KADuF;AAAA,MAChF,IADgF;;AAAA,MAEtF,OAFsF,GAEnE,IAFmE,CAEtF,OAFsF;AAAA,MAE7E,KAF6E,GAEnE,IAFmE,CAE7E,KAF6E;AAI9F,SACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAR,GAAA,EAAmB,KAAnB,EAAwB;AAAE,IAAA,IAAI,EAAE;AAAR,GAAxB,CAAT,CADF,CADF,EAKG,CAAC,UAAD,IAAe,OAAf,IAA0B,KAA1B,GAAkC,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,EAAa,KAAb,CAAlC,GAAqE,IALxE,CADF;AASD,CAbD;;AAeA,eAAe,aAAf","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\nimport FieldError from '../FieldError';\r\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\r\nimport CheckBox from '../../CheckBox';\r\nconst CheckboxField = ({ name, label, hideErrors = false, dark = false }) => {\r\n    const [field, meta] = useField({ name, type: 'checkbox' });\r\n    const { touched, error } = meta;\r\n    return (React.createElement(StyledFormField, null,\r\n        React.createElement(FieldWrapper, null,\r\n            React.createElement(CheckBox, Object.assign({ label: label }, field, { dark: dark }))),\r\n        !hideErrors && touched && error ? React.createElement(FieldError, null, error) : null));\r\n};\r\nexport default CheckboxField;\r\n//# sourceMappingURL=CheckboxField.js.map"]},"metadata":{},"sourceType":"module"}