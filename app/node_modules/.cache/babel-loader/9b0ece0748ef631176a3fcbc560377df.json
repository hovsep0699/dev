{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{Button,ButtonKinds,Icons,Input}from'@distate/components';import{createStaffRole}from'../../store/actions';/** форма создания роли */export var CreateRoleForm=function CreateRoleForm(props){var setIsOpenCreateForm=props.setIsOpenCreateForm;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var dispatch=useDispatch();var onSave=function onSave(){dispatch(createStaffRole({title:title}));setIsOpenCreateForm(false);};var onReset=function onReset(){setIsOpenCreateForm(false);};return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(Input,{width:500,value:title,onChange:function onChange(e){setTitle(e.target.value);}}),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconCheck,{fill:\"currentColor\"}),onClick:onSave},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconTrash,{fill:\"currentColor\"}),kind:ButtonKinds.Danger,onClick:onReset},\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/roles/CreateRoleForm.tsx"],"names":["React","useState","useDispatch","Button","ButtonKinds","Icons","Input","createStaffRole","CreateRoleForm","props","setIsOpenCreateForm","title","setTitle","dispatch","onSave","onReset","display","e","target","value","Danger"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,KAA9B,CAAqCC,KAArC,KAAkD,qBAAlD,CACA,OAASC,eAAT,KAAgC,qBAAhC,CAKA,0BACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAkB,IACtCC,CAAAA,mBADsC,CACdD,KADc,CACtCC,mBADsC,eAEpBT,QAAQ,CAAC,EAAD,CAFY,wCAEvCU,KAFuC,eAEhCC,QAFgC,eAI9C,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,GAAMY,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBD,QAAQ,CAACN,eAAe,CAAC,CAAEI,KAAK,CAALA,KAAF,CAAD,CAAhB,CAAR,CACAD,mBAAmB,CAAC,KAAD,CAAnB,CACD,CAHD,CAKA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBL,mBAAmB,CAAC,KAAD,CAAnB,CACD,CAFD,CAIA,mBACE,2CACE,2BAAK,KAAK,CAAE,CAACM,OAAO,CAAE,MAAV,CAAZ,eACE,oBAAC,KAAD,EACE,KAAK,CAAE,GADT,CAEE,KAAK,CAAEL,KAFT,CAGE,QAAQ,CAAE,kBAACM,CAAD,CAAO,CAACL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAAyB,CAH7C,EADF,cAKE,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,EAAiB,IAAI,CAAC,cAAtB,EADR,CAEE,OAAO,CAAEL,MAFX,2DALF,cAWE,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,EAAiB,IAAI,CAAC,cAAtB,EADR,CAEE,IAAI,CAAEV,WAAW,CAACgB,MAFpB,CAGE,OAAO,CAAEL,OAHX,+CAXF,CADF,CADF,CAuBD,CAtCM","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, ButtonKinds, Icons, Input } from '@distate/components';\r\nimport { createStaffRole } from '../../store/actions';\r\n\r\ntype Props = {\r\n  setIsOpenCreateForm: Function;\r\n}\r\n/** форма создания роли */\r\nexport const CreateRoleForm = (props: Props) => {\r\n  const { setIsOpenCreateForm } = props;\r\n  const [title, setTitle] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSave = () => {\r\n    dispatch(createStaffRole({ title }));\r\n    setIsOpenCreateForm(false);\r\n  }\r\n\r\n  const onReset = () => {\r\n    setIsOpenCreateForm(false);\r\n  }\r\n\r\n  return (\r\n    <td>\r\n      <div style={{display: 'flex'}}>\r\n        <Input\r\n          width={500}\r\n          value={title}\r\n          onChange={(e) => {setTitle(e.target.value)}} />\r\n        <Button\r\n          icon={<Icons.IconCheck fill=\"currentColor\" />}\r\n          onClick={onSave}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n        <Button\r\n          icon={<Icons.IconTrash fill=\"currentColor\" />}\r\n          kind={ButtonKinds.Danger}\r\n          onClick={onReset}\r\n        >\r\n          Удалить\r\n        </Button>\r\n      </div>\r\n    </td>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}