{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{IconPlus,IconCheck}from'@distate/components/dist/icons';import set from'lodash.set';import{HTMLContainer,HTMLBody,HTMLTitle}from'../../styles/body';import{HTMLHeader,HTMLCell as HTMLHeaderCell}from'../../styles/header';import{HTMLFooter,HTMLButtonAppend}from'../../styles/footer';import{HTMLTable,HTMLRow,HTMLCell}from'../../styles/table';import{HTMLButtonTrue}from'../../styles/form';import{NumbersRow}from'./numbers.row';export var Numbers=function Numbers(_ref){var _ref$rows=_ref.rows,rows=_ref$rows===void 0?[]:_ref$rows,onSubmit=_ref.onSubmit;var _useState=useState(rows),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var onChange=function onChange(index,name,value){var data=formData[index];set(data,name,value);setFormData(_toConsumableArray(formData));};var onRemove=function onRemove(index){delete formData[index];var data=formData.filter(Boolean);setFormData(data);};var onAppend=function onAppend(){var newFormData=_toConsumableArray(formData);newFormData.push({});setFormData(newFormData);};var handleOnSubmit=function handleOnSubmit(){return onSubmit(formData);};return/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(HTMLTitle,null,\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"),/*#__PURE__*/React.createElement(HTMLTable,null,/*#__PURE__*/React.createElement(\"colgroup\",null,/*#__PURE__*/React.createElement(\"col\",{width:\"25%\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"20%\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"25%\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"25%\"}),/*#__PURE__*/React.createElement(\"col\",{width:\"5%\"})),/*#__PURE__*/React.createElement(HTMLHeader,null,/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLHeaderCell,{colSpan:2},\"\\u0423\\u043D\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440\"),/*#__PURE__*/React.createElement(HTMLHeaderCell,null,\"\\u0422\\u0438\\u043F \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440\\u0430\"),/*#__PURE__*/React.createElement(HTMLHeaderCell,null,\"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"),/*#__PURE__*/React.createElement(HTMLHeaderCell,null))),/*#__PURE__*/React.createElement(HTMLBody,null,formData.map(function(row,i){return/*#__PURE__*/React.createElement(NumbersRow,{key:i,index:i,data:row,onChange:onChange,onRemove:onRemove});})),/*#__PURE__*/React.createElement(HTMLFooter,null,/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,{colSpan:5,rowSpan:2,plain:true},/*#__PURE__*/React.createElement(HTMLButtonAppend,{icon:/*#__PURE__*/React.createElement(IconPlus,null),onClick:onAppend},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"))))),/*#__PURE__*/React.createElement(HTMLButtonTrue,{onClick:handleOnSubmit},/*#__PURE__*/React.createElement(IconCheck,{style:{fill:'currentcolor'}}),\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/TableUniversalCorrection/components/numbers/numbers.tsx"],"names":["React","useState","IconPlus","IconCheck","set","HTMLContainer","HTMLBody","HTMLTitle","HTMLHeader","HTMLCell","HTMLHeaderCell","HTMLFooter","HTMLButtonAppend","HTMLTable","HTMLRow","HTMLButtonTrue","NumbersRow","Numbers","rows","onSubmit","formData","setFormData","onChange","index","name","value","data","onRemove","filter","Boolean","onAppend","newFormData","push","handleOnSubmit","map","row","i","fill"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { IconPlus, IconCheck } from '@distate/components/dist/icons';\r\nimport set from 'lodash.set';\r\n\r\nimport { HTMLContainer, HTMLBody, HTMLTitle } from '../../styles/body';\r\nimport { HTMLHeader, HTMLCell as HTMLHeaderCell } from '../../styles/header';\r\nimport { HTMLFooter, HTMLButtonAppend } from '../../styles/footer';\r\nimport { HTMLTable, HTMLRow, HTMLCell } from '../../styles/table';\r\nimport { HTMLButtonTrue } from '../../styles/form';\r\nimport { NumbersRow } from './numbers.row';\r\n\r\ntype SelectData = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport type NumberData = {\r\n  packageIdentifier?: { before: string; after: string };\r\n  type?: { before: SelectData; after: SelectData };\r\n  packNumbers?: { before: string[]; after: string[] };\r\n  idetificationNumbers?: { before: string[]; after: string[] };\r\n};\r\n\r\nexport interface NumbersProps {\r\n  onSubmit: (data: any) => void;\r\n  rows: NumberData[];\r\n}\r\n\r\nexport const Numbers: FC<NumbersProps> = ({ rows = [], onSubmit }) => {\r\n  const [formData, setFormData] = useState(rows);\r\n\r\n  const onChange = (index: number, name: string, value: unknown) => {\r\n    const data = formData[index];\r\n    set(data, name, value);\r\n    setFormData([...formData]);\r\n  };\r\n\r\n  const onRemove = (index: number) => {\r\n    delete formData[index];\r\n    const data = formData.filter(Boolean);\r\n    setFormData(data);\r\n  };\r\n\r\n  const onAppend = () => {\r\n    const newFormData = [...formData];\r\n    newFormData.push({});\r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const handleOnSubmit = () => onSubmit(formData);\r\n\r\n  return (\r\n    <HTMLContainer>\r\n      <HTMLTitle>Номер средств идентификации товаров</HTMLTitle>\r\n      <HTMLTable>\r\n        <colgroup>\r\n          <col width=\"25%\" />\r\n          <col width=\"20%\" />\r\n          <col width=\"25%\" />\r\n          <col width=\"25%\" />\r\n          <col width=\"5%\" />\r\n        </colgroup>\r\n        <HTMLHeader>\r\n          <HTMLRow>\r\n            <HTMLHeaderCell colSpan={2}>Уникальный идентификатор</HTMLHeaderCell>\r\n            <HTMLHeaderCell>Тип идентификатора</HTMLHeaderCell>\r\n            <HTMLHeaderCell>Значение</HTMLHeaderCell>\r\n            <HTMLHeaderCell />\r\n          </HTMLRow>\r\n        </HTMLHeader>\r\n        <HTMLBody>\r\n          {formData.map((row, i) => (\r\n            <NumbersRow key={i} index={i} data={row} onChange={onChange} onRemove={onRemove} />\r\n          ))}\r\n        </HTMLBody>\r\n        <HTMLFooter>\r\n          <HTMLRow>\r\n            <HTMLCell colSpan={5} rowSpan={2} plain>\r\n              <HTMLButtonAppend icon={<IconPlus />} onClick={onAppend}>\r\n                Добавить запись\r\n              </HTMLButtonAppend>\r\n            </HTMLCell>\r\n          </HTMLRow>\r\n        </HTMLFooter>\r\n      </HTMLTable>\r\n      <HTMLButtonTrue onClick={handleOnSubmit}>\r\n        <IconCheck style={{ fill: 'currentcolor' }} />\r\n        Сохранить\r\n      </HTMLButtonTrue>\r\n    </HTMLContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}