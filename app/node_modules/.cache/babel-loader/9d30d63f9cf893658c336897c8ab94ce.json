{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import DatePicker from'react-datepicker';import ru from'date-fns/locale/ru';import'./DateInput.module.css';import{ddmmyyyy,ddmmyyyyToDate}from'../../../utils/DateUtil';import styles from'../../../pages/upd/forms/ArrayGroup.module.css';import FieldWrap from'./FieldWrap';import MaskedInput from'react-maskedinput';import classNames from'classnames';var DateInputNew=function DateInputNew(_ref){var DomainVO=_ref.DomainVO,initialValue=_ref.initialValue,onValueChange=_ref.onValueChange,labelAlign=_ref.labelAlign,hasLabel=_ref.hasLabel,isRequired=_ref.isRequired,errorMsg=_ref.errorMsg,wrapperClasses=_ref.wrapperClasses,restProps=_objectWithoutProperties(_ref,[\"DomainVO\",\"initialValue\",\"onValueChange\",\"labelAlign\",\"hasLabel\",\"isRequired\",\"errorMsg\",\"wrapperClasses\"]);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dateState=_useState2[0],setDateState=_useState2[1];var selectedDate=initialValue?ddmmyyyyToDate(initialValue,'dd.MM.yyyy',new Date()):dateState;var handleFocus=function handleFocus(){if(!dateState&&dateState!==''){setDateState(new Date());onValueChange(ddmmyyyy(new Date().toString()));}};var handleDateChange=function handleDateChange(value){if(value instanceof Date){setDateState(value);onValueChange(ddmmyyyy(value.toString()));}else{setDateState('');onValueChange('');}};var errorClasses=classNames({error:errorMsg});return/*#__PURE__*/React.createElement(FieldWrap,{label:DomainVO.name,labelAlign:labelAlign,hasLabel:hasLabel,isRequired:isRequired,errorMsg:errorMsg,customClasses:wrapperClasses},/*#__PURE__*/React.createElement(DatePicker,Object.assign({selected:selectedDate,onFocus:handleFocus,onChange:handleDateChange,className:\"ds-input date \".concat(styles.input,\" \").concat(errorClasses),title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 dd.mm.yyyy\",locale:ru,dateFormat:\"dd.MM.yyyy\",placeholderText:\"\\u0414\\u0430\\u0442\\u0430\",popperPlacement:\"bottom-start\",popperModifiers:{flip:{behavior:['bottom']},preventOverflow:{enabled:false},hide:{enabled:false}},labelAlign:labelAlign},restProps,{customInput:/*#__PURE__*/React.createElement(MaskedInput,{mask:\"11.11.1111\",size:null})})));};export default DateInputNew;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/form/components/DateInputNew.js"],"names":["React","useState","DatePicker","ru","ddmmyyyy","ddmmyyyyToDate","styles","FieldWrap","MaskedInput","classNames","DateInputNew","DomainVO","initialValue","onValueChange","labelAlign","hasLabel","isRequired","errorMsg","wrapperClasses","restProps","dateState","setDateState","selectedDate","Date","handleFocus","toString","handleDateChange","value","errorClasses","error","name","input","flip","behavior","preventOverflow","enabled","hide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport ru from 'date-fns/locale/ru';\r\nimport './DateInput.module.css';\r\nimport { ddmmyyyy, ddmmyyyyToDate } from '../../../utils/DateUtil';\r\nimport styles from '../../../pages/upd/forms/ArrayGroup.module.css';\r\nimport FieldWrap from './FieldWrap';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-maskedinput';\r\nimport classNames from 'classnames';\r\n\r\nconst DateInputNew = ({\r\n  DomainVO,\r\n  initialValue,\r\n  onValueChange,\r\n  labelAlign,\r\n  hasLabel,\r\n  isRequired,\r\n  errorMsg,\r\n  wrapperClasses,\r\n  ...restProps\r\n}) => {\r\n  const [dateState, setDateState] = useState(null);\r\n  const selectedDate = initialValue\r\n    ? ddmmyyyyToDate(initialValue, 'dd.MM.yyyy', new Date())\r\n    : dateState;\r\n\r\n  const handleFocus = () => {\r\n    if (!dateState && dateState !== '') {\r\n      setDateState(new Date());\r\n      onValueChange(ddmmyyyy(new Date().toString()));\r\n    }\r\n  };\r\n\r\n  const handleDateChange = value => {\r\n    if (value instanceof Date) {\r\n      setDateState(value);\r\n      onValueChange(ddmmyyyy(value.toString()));\r\n    } else {\r\n      setDateState('');\r\n      onValueChange('');\r\n    }\r\n  };\r\n\r\n  const errorClasses = classNames({\r\n    error: errorMsg\r\n  });\r\n\r\n  return (\r\n    <FieldWrap\r\n      label={DomainVO.name}\r\n      labelAlign={labelAlign}\r\n      hasLabel={hasLabel}\r\n      isRequired={isRequired}\r\n      errorMsg={errorMsg}\r\n      customClasses={wrapperClasses}\r\n    >\r\n      <DatePicker\r\n        selected={selectedDate}\r\n        onFocus={handleFocus}\r\n        onChange={handleDateChange}\r\n        className={`ds-input date ${styles.input} ${errorClasses}`}\r\n        title=\"Введите дату в формате dd.mm.yyyy\"\r\n        locale={ru}\r\n        dateFormat=\"dd.MM.yyyy\"\r\n        placeholderText=\"Дата\"\r\n        popperPlacement=\"bottom-start\"\r\n        popperModifiers={{\r\n          flip: {\r\n            behavior: ['bottom']\r\n          },\r\n          preventOverflow: {\r\n            enabled: false\r\n          },\r\n          hide: {\r\n            enabled: false\r\n          }\r\n        }}\r\n        labelAlign={labelAlign}\r\n        {...restProps}\r\n        customInput={<MaskedInput mask=\"11.11.1111\" size={null} />}\r\n      />\r\n    </FieldWrap>\r\n  );\r\n};\r\n\r\nDateInputNew.propTypes = {\r\n  DomainVO: PropTypes.object,\r\n  initialValue: PropTypes.string,\r\n  onValueChange: PropTypes.func,\r\n  labelAlign: PropTypes.string,\r\n  hasLabel: PropTypes.string\r\n};\r\n\r\nexport default DateInputNew;\r\n"]},"metadata":{},"sourceType":"module"}