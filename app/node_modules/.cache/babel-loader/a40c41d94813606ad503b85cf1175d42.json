{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  СуммаПРД (Сумма платежно-расчетного документа)\r\n  XML:\r\n  <СвПРД СуммаПРД=\"9999\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n*/\nvar Sum = /*#__PURE__*/function () {\n  _createClass(Sum, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return value && !Sum.REG_EXP.test(value) ? 'Неверный формат суммы' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Sum.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      if (!value && value !== 0) return false;\n      return \"\".concat(value).replace(/[^\\d.]/g, '').replace(/^([^.]*[.])|[.]/g, '$1');\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9]+([.][0-9]{1,2})?$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Сумма';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите сумму';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Сумма';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'cost';\n    }\n  }]);\n\n  function Sum(sum) {\n    _classCallCheck(this, Sum);\n\n    if (!Sum.isValid(\"\".concat(sum))) {\n      this._error = new Error('Невозможно создать СуммаПРД (Сумма платежно-расчетного документа). Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(sum);\n  }\n\n  _createClass(Sum, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Sum(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return Sum;\n}();\n\nexport default Sum;","map":{"version":3,"sources":["../../../../../../../src/domain/documents/invoice/vo/invoice/payment_document/Sum.js"],"names":[],"mappings":";;;AAAA;;;;;IAKM,G;;;6BAKY,K,EAAK;AACnB,aAAO,KAAK,IAAI,CAAC,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAAiB,KAAjB,CAAV,GAAoC,uBAApC,GAA8D,SAArE;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAR;AACD;;;yBAEW,K,EAAK;AACf,UAAI,CAAC,KAAD,IAAU,KAAK,KAAK,CAAxB,EAA2B,OAAO,KAAP;AAC3B,aAAO,UAAG,KAAH,EAAW,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,EACJ,OADI,CACI,kBADJ,EACwB,IADxB,CAAP;AAED;;;wBAhBiB;AAChB,aAAO,IAAI,MAAJ,CAAW,0BAAX,CAAP;AACD;;;wBAgBqB;AACpB,aAAO,OAAP;AACD;;;wBAEc;AACb,aAAO,eAAP;AACD;;;wBAEc;AACb,aAAO,OAAP;AACD;;;wBAEe;AACd,aAAO,MAAP;AACD;;;AAED,eAAY,GAAZ,EAAe;AAAA;;AACb,QAAI,CAAC,GAAG,CAAC,OAAJ,WAAe,GAAf,EAAL,EAA4B;AAC1B,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,qFAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,GAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,GAAJ,CAAQ,KAAK,KAAb,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,GAAf","sourceRoot":"","sourcesContent":["/*\r\n  СуммаПРД (Сумма платежно-расчетного документа)\r\n  XML:\r\n  <СвПРД СуммаПРД=\"9999\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n*/\r\nclass Sum {\r\n    static get REG_EXP() {\r\n        return new RegExp('^[0-9]+([.][0-9]{1,2})?$');\r\n    }\r\n    static validate(value) {\r\n        return value && !Sum.REG_EXP.test(value) ? 'Неверный формат суммы' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Sum.validate(value);\r\n    }\r\n    static mask(value) {\r\n        if (!value && value !== 0)\r\n            return false;\r\n        return `${value}`.replace(/[^\\d.]/g, '')\r\n            .replace(/^([^.]*[.])|[.]/g, '$1');\r\n    }\r\n    static get placeholder() {\r\n        return 'Сумма';\r\n    }\r\n    static get hint() {\r\n        return 'Введите сумму';\r\n    }\r\n    static get name() {\r\n        return 'Сумма';\r\n    }\r\n    static get field() {\r\n        return 'cost';\r\n    }\r\n    constructor(sum) {\r\n        if (!Sum.isValid(`${sum}`)) {\r\n            this._error = new Error('Невозможно создать СуммаПРД (Сумма платежно-расчетного документа). Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${sum}`;\r\n    }\r\n    clone() {\r\n        return new Sum(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default Sum;\r\n//# sourceMappingURL=Sum.js.map"]},"metadata":{},"sourceType":"module"}