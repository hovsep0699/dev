{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport OKPOUL from './UL/OKPO';\nimport INNUL from './UL/INN';\nimport Name from './UL/Name';\nimport KPPUL from './UL/KPP';\n\nvar UL = /*#__PURE__*/function () {\n  function UL() {\n    _classCallCheck(this, UL);\n  }\n\n  _createClass(UL, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      var errorMsgs = [];\n      UL.VOs.forEach(function (DomainVO) {\n        var msg = DomainVO.validate(value && value[DomainVO.field]);\n\n        if (msg !== undefined) {\n          errorMsgs.push(msg);\n        }\n      });\n      return errorMsgs.length > 0 ? 'Данные юридического лица заполнены неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !UL.validate(value);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Юридическое лицо';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'legalEntity';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [Name, OKPOUL, INNUL, KPPUL];\n    }\n  }]);\n\n  return UL;\n}();\n\nexport default UL;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/standard_element/participant/UL.js"],"names":[],"mappings":";;AAAA,OAAO,MAAP,MAAmB,WAAnB;AACA,OAAO,KAAP,MAAkB,UAAlB;AACA,OAAO,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAP,MAAkB,UAAlB;;IAEM,E;;;;;;;6BACY,K,EAAK;AACnB,UAAM,SAAS,GAAG,EAAlB;AACA,MAAA,EAAE,CAAC,GAAH,CAAO,OAAP,CAAe,UAAC,QAAD,EAAa;AAC1B,YAAM,GAAG,GAAG,QAAQ,CAAC,QAAT,CAAkB,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAV,CAAhC,CAAZ;;AACA,YAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,UAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACD;AACF,OALD;AAMA,aAAQ,SAAS,CAAC,MAAV,GAAmB,CAApB,GAAyB,4CAAzB,GAAwE,SAA/E;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,EAAE,CAAC,QAAH,CAAY,KAAZ,CAAR;AACD;;;wBAEc;AACb,aAAO,kBAAP;AACD;;;wBAEe;AACd,aAAO,aAAP;AACD;;;wBAEa;AACZ,aAAO,CAAC,IAAD,EAAO,MAAP,EAAe,KAAf,EAAsB,KAAtB,CAAP;AACD;;;;;;AAGH,eAAe,EAAf","sourceRoot":"","sourcesContent":["import OKPOUL from './UL/OKPO';\r\nimport INNUL from './UL/INN';\r\nimport Name from './UL/Name';\r\nimport KPPUL from './UL/KPP';\r\nclass UL {\r\n    static validate(value) {\r\n        const errorMsgs = [];\r\n        UL.VOs.forEach((DomainVO) => {\r\n            const msg = DomainVO.validate(value && value[DomainVO.field]);\r\n            if (msg !== undefined) {\r\n                errorMsgs.push(msg);\r\n            }\r\n        });\r\n        return (errorMsgs.length > 0) ? 'Данные юридического лица заполнены неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !UL.validate(value);\r\n    }\r\n    static get name() {\r\n        return 'Юридическое лицо';\r\n    }\r\n    static get field() {\r\n        return 'legalEntity';\r\n    }\r\n    static get VOs() {\r\n        return [Name, OKPOUL, INNUL, KPPUL];\r\n    }\r\n}\r\nexport default UL;\r\n//# sourceMappingURL=UL.js.map"]},"metadata":{},"sourceType":"module"}