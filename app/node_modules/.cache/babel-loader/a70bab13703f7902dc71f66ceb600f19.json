{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport CryptoProLib from './CryptoProLib';\nimport { INIT, LIST_CERTS, CERT_IDS, CERT_INFO, CERT_INFO_ALL } from '../application/certificate/get/Steps';\n\nvar CryptoPro = /*#__PURE__*/function () {\n  function CryptoPro() {\n    _classCallCheck(this, CryptoPro);\n\n    this.cryptopro = new CryptoProLib();\n  }\n\n  _createClass(CryptoPro, [{\n    key: \"signData\",\n    value: function signData(dataBase64, thumbprint) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.cryptopro.init();\n\n              case 3:\n                return _context.abrupt(\"return\", this.cryptopro.signData(dataBase64, thumbprint));\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                throw new Error(_context.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      var _this = this;\n\n      var currentStep = INIT;\n\n      var listCerts = function listCerts() {\n        currentStep = LIST_CERTS;\n        return _this.cryptopro.listCertificates();\n      };\n\n      var getCertIds = function getCertIds(certificates) {\n        currentStep = CERT_IDS;\n        return certificates.map(function (cert) {\n          return cert.id;\n        });\n      };\n\n      var getCertInfo = function getCertInfo(thumbprints) {\n        currentStep = CERT_INFO;\n        return thumbprints.map(function (thumbprint) {\n          return _this.cryptopro.certificateInfo(thumbprint);\n        });\n      };\n\n      var getCertInfoAll = function getCertInfoAll(certInfoPromises) {\n        currentStep = CERT_INFO_ALL;\n        return Promise.all(certInfoPromises);\n      };\n\n      return this.cryptopro.init().then(listCerts).then(getCertIds).then(getCertInfo).then(getCertInfoAll).catch(function (e) {\n        throw {\n          message: e.message,\n          step: currentStep\n        };\n      });\n    }\n  }]);\n\n  return CryptoPro;\n}();\n\nvar instance = new CryptoPro();\nexport default instance;","map":{"version":3,"sources":["../../src/infrastructure/CryptoPro.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,YAAP,MAAyB,gBAAzB;AACA,SACE,IADF,EACQ,UADR,EACoB,QADpB,EAC8B,SAD9B,EACyC,aADzC,QAEO,sCAFP;;IAIM,S;AACJ,uBAAA;AAAA;;AACE,SAAK,SAAL,GAAiB,IAAI,YAAJ,EAAjB;AACD;;;;6BAEe,U,EAAY,U,EAAU;;;;;;;;AAElC,uBAAM,KAAK,SAAL,CAAe,IAAf,EAAN;;;iDACO,KAAK,SAAL,CAAe,QAAf,CAAwB,UAAxB,EAAoC,UAApC,C;;;;;sBAGD,IAAI,KAAJ,CAAU,YAAE,OAAZ,C;;;;;;;;;AAET;;;0BAGE;AAAA;;AACD,UAAI,WAAW,GAAG,IAAlB;;AACA,UAAM,SAAS,GAAG,SAAZ,SAAY,GAAK;AACrB,QAAA,WAAW,GAAG,UAAd;AACA,eAAO,KAAI,CAAC,SAAL,CAAe,gBAAf,EAAP;AACD,OAHD;;AAIA,UAAM,UAAU,GAAG,SAAb,UAAa,CAAC,YAAD,EAAiB;AAClC,QAAA,WAAW,GAAG,QAAd;AACA,eAAO,YAAY,CAAC,GAAb,CAAiB,UAAA,IAAI;AAAA,iBAAI,IAAI,CAAC,EAAT;AAAA,SAArB,CAAP;AACD,OAHD;;AAIA,UAAM,WAAW,GAAG,SAAd,WAAc,CAAC,WAAD,EAAgB;AAClC,QAAA,WAAW,GAAG,SAAd;AACA,eAAO,WAAW,CAAC,GAAZ,CAAgB,UAAA,UAAU;AAAA,iBAAI,KAAI,CAAC,SAAL,CAAe,eAAf,CAA+B,UAA/B,CAAJ;AAAA,SAA1B,CAAP;AACD,OAHD;;AAIA,UAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,gBAAD,EAAqB;AAC1C,QAAA,WAAW,GAAG,aAAd;AACA,eAAO,OAAO,CAAC,GAAR,CAAY,gBAAZ,CAAP;AACD,OAHD;;AAIA,aAAO,KAAK,SAAL,CAAe,IAAf,GACJ,IADI,CACC,SADD,EAEJ,IAFI,CAEC,UAFD,EAGJ,IAHI,CAGC,WAHD,EAIJ,IAJI,CAIC,cAJD,EAKJ,KALI,CAKE,UAAC,CAAD,EAAM;AACX,cAAM;AAAE,UAAA,OAAO,EAAE,CAAC,CAAC,OAAb;AAAsB,UAAA,IAAI,EAAE;AAA5B,SAAN;AACD,OAPI,CAAP;AAQD;;;;;;AAGH,IAAM,QAAQ,GAAG,IAAI,SAAJ,EAAjB;AACA,eAAe,QAAf","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport CryptoProLib from './CryptoProLib';\r\nimport { INIT, LIST_CERTS, CERT_IDS, CERT_INFO, CERT_INFO_ALL } from '../application/certificate/get/Steps';\r\nclass CryptoPro {\r\n    constructor() {\r\n        this.cryptopro = new CryptoProLib();\r\n    }\r\n    signData(dataBase64, thumbprint) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                yield this.cryptopro.init();\r\n                return this.cryptopro.signData(dataBase64, thumbprint);\r\n            }\r\n            catch (e) {\r\n                throw new Error(e.message);\r\n            }\r\n        });\r\n    }\r\n    get() {\r\n        let currentStep = INIT;\r\n        const listCerts = () => {\r\n            currentStep = LIST_CERTS;\r\n            return this.cryptopro.listCertificates();\r\n        };\r\n        const getCertIds = (certificates) => {\r\n            currentStep = CERT_IDS;\r\n            return certificates.map(cert => cert.id);\r\n        };\r\n        const getCertInfo = (thumbprints) => {\r\n            currentStep = CERT_INFO;\r\n            return thumbprints.map(thumbprint => this.cryptopro.certificateInfo(thumbprint));\r\n        };\r\n        const getCertInfoAll = (certInfoPromises) => {\r\n            currentStep = CERT_INFO_ALL;\r\n            return Promise.all(certInfoPromises);\r\n        };\r\n        return this.cryptopro.init()\r\n            .then(listCerts)\r\n            .then(getCertIds)\r\n            .then(getCertInfo)\r\n            .then(getCertInfoAll)\r\n            .catch((e) => {\r\n            throw { message: e.message, step: currentStep };\r\n        });\r\n    }\r\n}\r\nconst instance = new CryptoPro();\r\nexport default instance;\r\n//# sourceMappingURL=CryptoPro.js.map"]},"metadata":{},"sourceType":"module"}