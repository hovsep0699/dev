{"ast":null,"code":"import React from 'react';\nimport set from 'lodash.set';\nimport { Context } from '../context';\nimport { Input } from '../../Input';\nvar TextWidget = React.memo(function (_ref) {\n  var required = _ref.required,\n      name = _ref.name,\n      formValue = _ref.formValue,\n      formDefaultValue = _ref.formDefaultValue,\n      label = _ref.label,\n      schemaPath = _ref.schemaPath,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? [] : _ref$error,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema;\n\n  var _React$useContext = React.useContext(Context),\n      onChange = _React$useContext.onChange,\n      formData = _React$useContext.formData;\n\n  var placeholder = uiSchema.placeholder,\n      width = uiSchema.width,\n      disabled = uiSchema.disabled;\n\n  var handleOnChange = function handleOnChange(_ref2) {\n    var value = _ref2.target.value;\n    var data = set(formData, schemaPath, value);\n    onChange(Object.assign({}, data));\n  };\n\n  return React.createElement(Input, {\n    disabled: disabled,\n    border: !disabled,\n    name: name,\n    error: Boolean(error.length),\n    errors: error,\n    width: width,\n    label: label,\n    placeholder: placeholder,\n    value: typeof formValue === 'undefined' ? formDefaultValue : formValue,\n    required: required,\n    onChange: handleOnChange\n  });\n});\nexport { TextWidget };","map":{"version":3,"sources":["../../../src/FormSchema/widgets/text.widget.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP,MAAgB,YAAhB;AAEA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,KAAT,QAAsB,aAAtB;AAEA,IAAM,UAAU,GAAkB,KAAK,CAAC,IAAN,CAChC,gBASK;AAAA,MARH,QAQG,QARH,QAQG;AAAA,MAPH,IAOG,QAPH,IAOG;AAAA,MANH,SAMG,QANH,SAMG;AAAA,MALH,gBAKG,QALH,gBAKG;AAAA,MAJH,KAIG,QAJH,KAIG;AAAA,MAHH,UAGG,QAHH,UAGG;AAAA,wBAFH,KAEG;AAAA,MAFH,KAEG,2BAFK,EAEL;AAAA,2BADH,QACG;AAAA,MADH,QACG,8BADQ,EACR;;AAAA,0BAC4B,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAD5B;AAAA,MACK,QADL,qBACK,QADL;AAAA,MACe,QADf,qBACe,QADf;;AAAA,MAEK,WAFL,GAEsC,QAFtC,CAEK,WAFL;AAAA,MAEkB,KAFlB,GAEsC,QAFtC,CAEkB,KAFlB;AAAA,MAEyB,QAFzB,GAEsC,QAFtC,CAEyB,QAFzB;;AAIH,MAAM,cAAc,GAAG,SAAjB,cAAiB,QAA+D;AAAA,QAAlD,KAAkD,SAA5D,MAA4D,CAAlD,KAAkD;AACpF,QAAM,IAAI,GAAG,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,KAAvB,CAAhB;AACA,IAAA,QAAQ,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAN,CAAA,CAAR;AACD,GAHD;;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AACJ,IAAA,QAAQ,EAAE,QADN;AAEJ,IAAA,MAAM,EAAE,CAAC,QAFL;AAGJ,IAAA,IAAI,EAAE,IAHF;AAIJ,IAAA,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAP,CAJV;AAKJ,IAAA,MAAM,EAAE,KALJ;AAMJ,IAAA,KAAK,EAAE,KANH;AAOJ,IAAA,KAAK,EAAE,KAPH;AAQJ,IAAA,WAAW,EAAE,WART;AASJ,IAAA,KAAK,EAAE,OAAO,SAAP,KAAqB,WAArB,GAAmC,gBAAnC,GAAsD,SATzD;AAUJ,IAAA,QAAQ,EAAE,QAVN;AAWJ,IAAA,QAAQ,EAAE;AAXN,GAAN,CADF;AAeD,CAlC+B,CAAlC;AAqCA,SAAS,UAAT","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport set from 'lodash.set';\r\nimport { Context } from '../context';\r\nimport { Input } from '../../Input';\r\nconst TextWidget = React.memo(({ required, name, formValue, formDefaultValue, label, schemaPath, error = [], uiSchema = {} }) => {\r\n    const { onChange, formData } = React.useContext(Context);\r\n    const { placeholder, width, disabled } = uiSchema;\r\n    const handleOnChange = ({ target: { value } }) => {\r\n        const data = set(formData, schemaPath, value);\r\n        onChange(Object.assign({}, data));\r\n    };\r\n    return (React.createElement(Input, { disabled: disabled, border: !disabled, name: name, error: Boolean(error.length), errors: error, width: width, label: label, placeholder: placeholder, value: typeof formValue === 'undefined' ? formDefaultValue : formValue, required: required, onChange: handleOnChange }));\r\n});\r\nexport { TextWidget };\r\n//# sourceMappingURL=text.widget.js.map"]},"metadata":{},"sourceType":"module"}