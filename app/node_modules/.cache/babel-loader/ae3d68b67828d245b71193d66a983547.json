{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Отчество A(атрибут) текст(1-60)\r\n */\nvar Patronymic = /*#__PURE__*/function () {\n  _createClass(Patronymic, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      return value && !Patronymic.REG_EXP.test(value) ? 'Введите строку длиной 1-60 знаков' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Patronymic.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      return value && value.slice(0, 60);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^.{1,60}$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите отчество';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите строку длиной до 60 знаков';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Отчество';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'patronymic';\n    }\n  }]);\n\n  function Patronymic(value) {\n    _classCallCheck(this, Patronymic);\n\n    if (!Patronymic.isValid(\"\".concat(value))) {\n      this._error = new Error('Невозможно создать Имя. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(value);\n  }\n\n  _createClass(Patronymic, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Patronymic(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return Patronymic;\n}();\n\nexport default Patronymic;","map":{"version":3,"sources":["../../../../../../src/domain/documents/invoice/standard_element/fio/Patronymic.js"],"names":[],"mappings":";;;AAAA;;;IAGM,U;;;6BAKY,K,EAAK;AACnB,aAAO,KAAK,IAAI,CAAC,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAwB,KAAxB,CAAV,GAA2C,mCAA3C,GAAiF,SAAxF;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,UAAU,CAAC,QAAX,CAAoB,KAApB,CAAR;AACD;;;yBAEW,K,EAAK;AACf,aAAO,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAhB;AACD;;;wBAdiB;AAChB,aAAO,IAAI,MAAJ,CAAW,WAAX,CAAP;AACD;;;wBAcqB;AACpB,aAAO,kBAAP;AACD;;;wBAEc;AACb,aAAO,oCAAP;AACD;;;wBAEc;AACb,aAAO,UAAP;AACD;;;wBAEe;AACd,aAAO,YAAP;AACD;;;AAED,sBAAY,KAAZ,EAAiB;AAAA;;AACf,QAAI,CAAC,UAAU,CAAC,OAAX,WAAsB,KAAtB,EAAL,EAAqC;AACnC,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,0CAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,KAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,UAAJ,CAAe,KAAK,KAApB,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,UAAf","sourceRoot":"","sourcesContent":["/*\r\n  Отчество A(атрибут) текст(1-60)\r\n */\r\nclass Patronymic {\r\n    static get REG_EXP() {\r\n        return new RegExp('^.{1,60}$');\r\n    }\r\n    static validate(value) {\r\n        return value && !Patronymic.REG_EXP.test(value) ? 'Введите строку длиной 1-60 знаков' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Patronymic.validate(value);\r\n    }\r\n    static mask(value) {\r\n        return value && value.slice(0, 60);\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите отчество';\r\n    }\r\n    static get hint() {\r\n        return 'Введите строку длиной до 60 знаков';\r\n    }\r\n    static get name() {\r\n        return 'Отчество';\r\n    }\r\n    static get field() {\r\n        return 'patronymic';\r\n    }\r\n    constructor(value) {\r\n        if (!Patronymic.isValid(`${value}`)) {\r\n            this._error = new Error('Невозможно создать Имя. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${value}`;\r\n    }\r\n    clone() {\r\n        return new Patronymic(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default Patronymic;\r\n//# sourceMappingURL=Patronymic.js.map"]},"metadata":{},"sourceType":"module"}