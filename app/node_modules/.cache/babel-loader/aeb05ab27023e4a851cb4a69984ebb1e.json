{"ast":null,"code":"import React from 'react';\nimport set from 'lodash.set';\nimport { Context } from '../context';\nimport { CheckBox } from '../../CheckBox';\nimport { HTMLContainer } from './checkbox.style';\n\nvar CheckboxWidget = function CheckboxWidget(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      options = _ref.options,\n      schemaName = _ref.schemaName;\n  var enumOptions = options.enumOptions;\n\n  var _React$useContext = React.useContext(Context),\n      onChange = _React$useContext.onChange,\n      formData = _React$useContext.formData;\n\n  var handleOnChange = function handleOnChange(_ref2) {\n    var checked = _ref2.target.checked;\n    var index = checked ? 0 : 1;\n\n    var _ref3 = enumOptions[index] || {\n      value: checked\n    },\n        value = _ref3.value;\n\n    var path = [schemaName.replace('root', ''), name].filter(Boolean).join('.');\n    var data = set(formData, path, value);\n    onChange(Object.assign({}, data));\n  };\n\n  return React.createElement(HTMLContainer, null, React.createElement(CheckBox, {\n    label: label,\n    onChange: handleOnChange\n  }));\n};\n\nexport { CheckboxWidget };","map":{"version":3,"sources":["../../../src/FormSchema/widgets/checkbox.widget.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP,MAAgB,YAAhB;AAGA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,aAAT,QAA8B,kBAA9B;;AAaA,IAAM,cAAc,GAAkC,SAAhD,cAAgD,OAAyC;AAAA,MAAtC,IAAsC,QAAtC,IAAsC;AAAA,MAAhC,KAAgC,QAAhC,KAAgC;AAAA,MAAzB,OAAyB,QAAzB,OAAyB;AAAA,MAAhB,UAAgB,QAAhB,UAAgB;AAAA,MACrF,WADqF,GACrE,OADqE,CACrF,WADqF;;AAAA,0BAE9D,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAF8D;AAAA,MAErF,QAFqF,qBAErF,QAFqF;AAAA,MAE3E,QAF2E,qBAE3E,QAF2E;;AAI7F,MAAM,cAAc,GAAG,SAAjB,cAAiB,QAAiE;AAAA,QAApD,OAAoD,SAA9D,MAA8D,CAApD,OAAoD;AACtF,QAAM,KAAK,GAAG,OAAO,GAAG,CAAH,GAAO,CAA5B;;AADsF,gBAEpE,WAAW,CAAC,KAAD,CAAX,IAAsB;AAAE,MAAA,KAAK,EAAE;AAAT,KAF8C;AAAA,QAE9E,KAF8E,SAE9E,KAF8E;;AAItF,QAAM,IAAI,GAAG,CAAC,UAAU,CAAC,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAD,EAAiC,IAAjC,EAAuC,MAAvC,CAA8C,OAA9C,EAAuD,IAAvD,CAA4D,GAA5D,CAAb;AACA,QAAM,IAAI,GAAG,GAAG,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,CAAhB;AACA,IAAA,QAAQ,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAN,CAAA,CAAR;AACD,GAPD;;AASA,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,KAAK,EAAE,KAAR;AAAe,IAAA,QAAQ,EAAE;AAAzB,GAAT,CADF,CADF;AAKD,CAlBD;;AAoBA,SAAS,cAAT","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport set from 'lodash.set';\r\nimport { Context } from '../context';\r\nimport { CheckBox } from '../../CheckBox';\r\nimport { HTMLContainer } from './checkbox.style';\r\nconst CheckboxWidget = ({ name, label, options, schemaName }) => {\r\n    const { enumOptions } = options;\r\n    const { onChange, formData } = React.useContext(Context);\r\n    const handleOnChange = ({ target: { checked } }) => {\r\n        const index = checked ? 0 : 1;\r\n        const { value } = enumOptions[index] || { value: checked };\r\n        const path = [schemaName.replace('root', ''), name].filter(Boolean).join('.');\r\n        const data = set(formData, path, value);\r\n        onChange(Object.assign({}, data));\r\n    };\r\n    return (React.createElement(HTMLContainer, null,\r\n        React.createElement(CheckBox, { label: label, onChange: handleOnChange })));\r\n};\r\nexport { CheckboxWidget };\r\n//# sourceMappingURL=checkbox.widget.js.map"]},"metadata":{},"sourceType":"module"}