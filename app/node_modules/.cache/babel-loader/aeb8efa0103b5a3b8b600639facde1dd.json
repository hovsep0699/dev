{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(ducumentArchive),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(sagaArchive);import{takeLatest,put,select,call}from'redux-saga/effects';import{actionArchive,actionArchiveFailure,actionArchiveRequest,actionArchiveSuccess,actionDocumentRequest}from'../actions';import{Flash}from'../../../../common/flash/Flash';import{isArchivable}from'../../helpers/documnets.helpers';import{selectList,selectSelected}from'../selects';import{DocumentsApiServices}from'../../services/documents.api';export function ducumentArchive(){return _regeneratorRuntime.wrap(function ducumentArchive$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionArchive,sagaArchive);case 2:case\"end\":return _context.stop();}}},_marked);}function sagaArchive(){var list,selected,archivable,_iterator,_step,_step$value,packageId,packageState,message;return _regeneratorRuntime.wrap(function sagaArchive$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return put(actionArchiveRequest());case 2:_context2.next=4;return select(selectList);case 4:list=_context2.sent;_context2.next=7;return select(selectSelected);case 7:selected=_context2.sent;archivable=[];_iterator=_createForOfIteratorHelper(list);try{for(_iterator.s();!(_step=_iterator.n()).done;){_step$value=_step.value,packageId=_step$value.packageId,packageState=_step$value.packageState;if(selected.includes(packageId)&&isArchivable(packageState)){archivable.push(packageId);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}_context2.prev=11;_context2.next=14;return call(DocumentsApiServices.archive,archivable);case 14:_context2.next=16;return put(actionDocumentRequest({}));case 16:_context2.next=18;return put(actionArchiveSuccess());case 18:_context2.next=27;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](11);message=_context2.t0.message;_context2.next=25;return put(actionArchiveFailure());case 25:_context2.next=27;return Flash.error(message||'Возникла ошибка');case 27:case\"end\":return _context2.stop();}}},_marked2,null,[[11,20]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/store/sagas/archive.effect.ts"],"names":["ducumentArchive","sagaArchive","takeLatest","put","select","call","actionArchive","actionArchiveFailure","actionArchiveRequest","actionArchiveSuccess","actionDocumentRequest","Flash","isArchivable","selectList","selectSelected","DocumentsApiServices","list","selected","archivable","packageId","packageState","includes","push","archive","message","error"],"mappings":"uZAeiBA,e,iDAIPC,W,EAnBV,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,MAA1B,CAAkCC,IAAlC,KAA8C,oBAA9C,CAEA,OACEC,aADF,CAEEC,oBAFF,CAGEC,oBAHF,CAIEC,oBAJF,CAKEC,qBALF,KAMO,YANP,CAOA,OAASC,KAAT,KAAsB,gCAAtB,CAEA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,YAA3C,CACA,OAASC,oBAAT,KAAqC,8BAArC,CAEA,MAAO,SAAUf,CAAAA,eAAV,2IACL,MAAME,CAAAA,UAAU,CAACI,aAAD,CAAgBL,WAAhB,CAAhB,CADK,sDAIP,QAAUA,CAAAA,WAAV,mOACE,MAAME,CAAAA,GAAG,CAACK,oBAAoB,EAArB,CAAT,CADF,wBAG+B,MAAMJ,CAAAA,MAAM,CAACS,UAAD,CAAZ,CAH/B,OAGQG,IAHR,iCAI6B,MAAMZ,CAAAA,MAAM,CAACU,cAAD,CAAZ,CAJ7B,OAIQG,QAJR,gBAMQC,UANR,CAM+B,EAN/B,sCAO4CF,IAP5C,MAOE,+CAAgD,yBAAnCG,SAAmC,aAAnCA,SAAmC,CAAxBC,YAAwB,aAAxBA,YAAwB,CAC9C,GAAIH,QAAQ,CAACI,QAAT,CAAkBF,SAAlB,GAAgCP,YAAY,CAACQ,YAAD,CAAhD,CAAgE,CAC9DF,UAAU,CAACI,IAAX,CAAgBH,SAAhB,EACD,CACF,CAXH,yFAaI,MAAMd,CAAAA,IAAI,CAACU,oBAAoB,CAACQ,OAAtB,CAA+BL,UAA/B,CAAV,CAbJ,0BAeI,MAAMf,CAAAA,GAAG,CAACO,qBAAqB,CAAC,EAAD,CAAtB,CAAT,CAfJ,0BAgBI,MAAMP,CAAAA,GAAG,CAACM,oBAAoB,EAArB,CAAT,CAhBJ,8FAiBae,OAjBb,cAiBaA,OAjBb,mBAkBI,MAAMrB,CAAAA,GAAG,CAACI,oBAAoB,EAArB,CAAT,CAlBJ,0BAmBI,MAAMI,CAAAA,KAAK,CAACc,KAAN,CAAYD,OAAO,EAAI,iBAAvB,CAAN,CAnBJ","sourcesContent":["import { takeLatest, put, select, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n  actionArchive,\r\n  actionArchiveFailure,\r\n  actionArchiveRequest,\r\n  actionArchiveSuccess,\r\n  actionDocumentRequest\r\n} from '../actions';\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { DocumentType } from '../../helpers/documents.typings';\r\nimport { isArchivable } from '../../helpers/documnets.helpers';\r\nimport { selectList, selectSelected } from '../selects';\r\nimport { DocumentsApiServices } from '../../services/documents.api';\r\n\r\nexport function* ducumentArchive() {\r\n  yield takeLatest(actionArchive, sagaArchive);\r\n}\r\n\r\nfunction* sagaArchive() {\r\n  yield put(actionArchiveRequest());\r\n\r\n  const list: DocumentType[] = yield select(selectList);\r\n  const selected: string[] = yield select(selectSelected);\r\n\r\n  const archivable: string[] = [];\r\n  for (const { packageId, packageState } of list) {\r\n    if (selected.includes(packageId) && isArchivable(packageState)) {\r\n      archivable.push(packageId);\r\n    }\r\n  }\r\n  try {\r\n    yield call(DocumentsApiServices.archive, archivable);\r\n\r\n    yield put(actionDocumentRequest({}));\r\n    yield put(actionArchiveSuccess());\r\n  } catch ({ message }) {\r\n    yield put(actionArchiveFailure());\r\n    yield Flash.error(message || 'Возникла ошибка');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}