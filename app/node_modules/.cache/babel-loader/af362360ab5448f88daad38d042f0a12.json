{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from'react';import{IconDelete}from'@distate/components/dist/icons';import Gateway from'@distate/core/dist/application/autocomplete/AutocompleteGateway';import{HTMLText}from'../../styles/body';import{HTMLCell,HTMLRow}from'../../styles/table';import{HTMLButton,HTMLInput,HTMLAutocomplete}from'../../styles/form';import{dataToSelect}from'./utils';var gateway=new Gateway();export var TrackingRow=function TrackingRow(_ref){var _row$measurementValue,_row$measurementValue2,_row$measurementValue3,_row$measurementValue4;var index=_ref.index,row=_ref.row,onBlur=_ref.onBlur,onRemove=_ref.onRemove,onChange=_ref.onChange;var disabled=Boolean(row.measurementValueChange);// fetch\n// ------------------\nvar measurementLoad=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(raw,callback){var _yield$gateway$getMea,_yield$gateway$getMea2,rows;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return gateway.getMeasurementByTitle(raw);case 2:_yield$gateway$getMea=_context.sent;_yield$gateway$getMea2=_yield$gateway$getMea.rows;rows=_yield$gateway$getMea2===void 0?[]:_yield$gateway$getMea2;callback(dataToSelect(rows));case 6:case\"end\":return _context.stop();}}},_callee);}));return function measurementLoad(_x,_x2){return _ref2.apply(this,arguments);};}();// the end: fetch\nvar inputOnChange=function inputOnChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;onChange(index,name,value);};var selectOnChange=function selectOnChange(_ref3){var value=_ref3.value,label=_ref3.label;onChange(index,'measurementCode',value);onChange(index,'measurementTitle',label);};var inputOnBlur=function inputOnBlur(e){onBlur(e.target.name);};var handleOnRemove=function handleOnRemove(){return onRemove(index);};var renderMeasurement=function renderMeasurement(name){if(!disabled){var defaultOption={label:row===null||row===void 0?void 0:row.measurementTitle,value:row===null||row===void 0?void 0:row.measurementCode};return/*#__PURE__*/React.createElement(HTMLAutocomplete,{simple:true,name:'measurementCode',value:defaultOption,onChange:selectOnChange,loadOptions:measurementLoad});}return/*#__PURE__*/React.createElement(HTMLInput,{name:\"measurementTitle\",value:row===null||row===void 0?void 0:row.measurementTitle,disabled:disabled,onChange:inputOnChange,onBlur:inputOnBlur});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,{rowSpan:4,plain:true},/*#__PURE__*/React.createElement(HTMLInput,{name:\"additionalIndicator\",value:row===null||row===void 0?void 0:row.additionalIndicator,disabled:disabled,onChange:inputOnChange,onBlur:inputOnBlur})),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0434\\u043E \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\")),/*#__PURE__*/React.createElement(HTMLCell,null,renderMeasurement()),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{name:\"number\",value:row===null||row===void 0?void 0:row.number,disabled:disabled,onChange:inputOnChange,onBlur:inputOnBlur})),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,name:\"measurementValueChange.before\",value:row===null||row===void 0?void 0:(_row$measurementValue=row.measurementValueChange)===null||_row$measurementValue===void 0?void 0:_row$measurementValue.before,disabled:disabled,onChange:inputOnChange,onBlur:inputOnBlur})),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLButton,{solid:true,onClick:handleOnRemove,icon:/*#__PURE__*/React.createElement(IconDelete,null)}))),/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u043F\\u043E\\u0441\\u043B\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\")),/*#__PURE__*/React.createElement(HTMLCell,{colSpan:2,rowSpan:3,plain:true}),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,name:\"measurementValueChange.after\",value:row===null||row===void 0?void 0:(_row$measurementValue2=row.measurementValueChange)===null||_row$measurementValue2===void 0?void 0:_row$measurementValue2.after,onChange:inputOnChange,onBlur:inputOnBlur})),/*#__PURE__*/React.createElement(HTMLCell,{rowSpan:3,plain:true})),/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0443\\u0432\\u0435\\u043B\\u0438\\u0447\\u0435\\u043D\\u0438\\u0435\")),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,name:\"measurementValueChange.increase\",value:row===null||row===void 0?void 0:(_row$measurementValue3=row.measurementValueChange)===null||_row$measurementValue3===void 0?void 0:_row$measurementValue3.increase,onChange:inputOnChange,onBlur:inputOnBlur,disabled:true}))),/*#__PURE__*/React.createElement(HTMLRow,null,/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLText,null,\"\\u0443\\u043C\\u0435\\u043D\\u044C\\u0448\\u0435\\u043D\\u0438\\u0435\")),/*#__PURE__*/React.createElement(HTMLCell,null,/*#__PURE__*/React.createElement(HTMLInput,{float:2,name:\"measurementValueChange.decrease\",value:row===null||row===void 0?void 0:(_row$measurementValue4=row.measurementValueChange)===null||_row$measurementValue4===void 0?void 0:_row$measurementValue4.decrease,onChange:inputOnChange,onBlur:inputOnBlur,disabled:true}))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/TableUniversalCorrection/components/tracking/tracking.row.tsx"],"names":["React","IconDelete","Gateway","HTMLText","HTMLCell","HTMLRow","HTMLButton","HTMLInput","HTMLAutocomplete","dataToSelect","gateway","TrackingRow","index","row","onBlur","onRemove","onChange","disabled","Boolean","measurementValueChange","measurementLoad","raw","callback","getMeasurementByTitle","rows","inputOnChange","e","target","name","value","selectOnChange","label","inputOnBlur","handleOnRemove","renderMeasurement","defaultOption","measurementTitle","measurementCode","additionalIndicator","number","before","after","increase","decrease"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\r\nimport { IconDelete } from '@distate/components/dist/icons';\r\nimport Gateway from '@distate/core/dist/application/autocomplete/AutocompleteGateway';\r\n\r\nimport { TrackingData } from './tracking';\r\nimport { HTMLText } from '../../styles/body';\r\nimport { HTMLCell, HTMLRow } from '../../styles/table';\r\nimport { HTMLButton, HTMLInput, HTMLAutocomplete } from '../../styles/form';\r\nimport { dataToSelect } from './utils';\r\n\r\nconst gateway = new Gateway();\r\n\r\nexport interface TrackingRowProps {\r\n  index: number;\r\n  row: TrackingData;\r\n  onBlur: (name: string) => void;\r\n  onRemove: (index: number) => void;\r\n  onChange: (index: number, name: string, value: unknown) => void;\r\n}\r\n\r\nexport const TrackingRow: FC<TrackingRowProps> = ({ index, row, onBlur, onRemove, onChange }) => {\r\n  const disabled = Boolean(row.measurementValueChange);\r\n\r\n  // fetch\r\n  // ------------------\r\n  const measurementLoad = async (raw: string, callback: any) => {\r\n    const { rows = [] } = await gateway.getMeasurementByTitle(raw);\r\n    callback(dataToSelect(rows));\r\n  };\r\n  // the end: fetch\r\n\r\n  const inputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    onChange(index, name, value);\r\n  };\r\n\r\n  const selectOnChange = ({ value, label }: Record<string, string>) => {\r\n    onChange(index, 'measurementCode', value);\r\n    onChange(index, 'measurementTitle', label);\r\n  };\r\n\r\n  const inputOnBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    onBlur(e.target.name);\r\n  };\r\n\r\n  const handleOnRemove = () => onRemove(index);\r\n\r\n  const renderMeasurement = (name?: string) => {\r\n    if (!disabled) {\r\n      const defaultOption = { label: row?.measurementTitle, value: row?.measurementCode };\r\n      return (\r\n        <HTMLAutocomplete\r\n          simple\r\n          name={'measurementCode'}\r\n          value={defaultOption}\r\n          onChange={selectOnChange}\r\n          loadOptions={measurementLoad}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <HTMLInput\r\n        name=\"measurementTitle\"\r\n        value={row?.measurementTitle}\r\n        disabled={disabled}\r\n        onChange={inputOnChange}\r\n        onBlur={inputOnBlur}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HTMLRow>\r\n        <HTMLCell rowSpan={4} plain>\r\n          <HTMLInput\r\n            name=\"additionalIndicator\"\r\n            value={row?.additionalIndicator}\r\n            disabled={disabled}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n          />\r\n        </HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLText>до изменения</HTMLText>\r\n        </HTMLCell>\r\n        <HTMLCell>{renderMeasurement()}</HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLInput\r\n            name=\"number\"\r\n            value={row?.number}\r\n            disabled={disabled}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n          />\r\n        </HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLInput\r\n            float={2}\r\n            name=\"measurementValueChange.before\"\r\n            value={row?.measurementValueChange?.before}\r\n            disabled={disabled}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n          />\r\n        </HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLButton solid onClick={handleOnRemove} icon={<IconDelete />} />\r\n        </HTMLCell>\r\n      </HTMLRow>\r\n\r\n      <HTMLRow>\r\n        <HTMLCell>\r\n          <HTMLText>после изменения</HTMLText>\r\n        </HTMLCell>\r\n        <HTMLCell colSpan={2} rowSpan={3} plain></HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLInput\r\n            float={2}\r\n            name=\"measurementValueChange.after\"\r\n            value={row?.measurementValueChange?.after}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n          />\r\n        </HTMLCell>\r\n        <HTMLCell rowSpan={3} plain></HTMLCell>\r\n      </HTMLRow>\r\n\r\n      <HTMLRow>\r\n        <HTMLCell>\r\n          <HTMLText>увеличение</HTMLText>\r\n        </HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLInput\r\n            float={2}\r\n            name=\"measurementValueChange.increase\"\r\n            value={row?.measurementValueChange?.increase}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n            disabled\r\n          />\r\n        </HTMLCell>\r\n      </HTMLRow>\r\n\r\n      <HTMLRow>\r\n        <HTMLCell>\r\n          <HTMLText>уменьшение</HTMLText>\r\n        </HTMLCell>\r\n        <HTMLCell>\r\n          <HTMLInput\r\n            float={2}\r\n            name=\"measurementValueChange.decrease\"\r\n            value={row?.measurementValueChange?.decrease}\r\n            onChange={inputOnChange}\r\n            onBlur={inputOnBlur}\r\n            disabled\r\n          />\r\n        </HTMLCell>\r\n      </HTMLRow>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}