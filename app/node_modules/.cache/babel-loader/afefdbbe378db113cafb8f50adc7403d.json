{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(ducumentTools),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(sagaDocumentTools);import{takeLatest,select,put}from'redux-saga/effects';import{isArchivable}from'../../helpers/documnets.helpers';import{actionDocumentTools,actionDocumentSetTools,actionDocumentSuccess}from'../actions';import{selectSelected,selectTools,selectMode,selectList}from'../selects';import Core from'@distate/core/dist/application/Core';export function ducumentTools(){return _regeneratorRuntime.wrap(function ducumentTools$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionDocumentSuccess,sagaDocumentTools);case 2:_context.next=4;return takeLatest(actionDocumentTools,sagaDocumentTools);case 4:case\"end\":return _context.stop();}}},_marked);}function sagaDocumentTools(){var mode,list,tools,selected,isSelected,archivable,_iterator,_step,_step$value,packageId,packageState,newTools;return _regeneratorRuntime.wrap(function sagaDocumentTools$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(selectMode);case 2:mode=_context2.sent;_context2.next=5;return select(selectList);case 5:list=_context2.sent;_context2.next=8;return select(selectTools);case 8:tools=_context2.sent;_context2.next=11;return select(selectSelected);case 11:selected=_context2.sent;isSelected=!!selected.length;archivable=0;_iterator=_createForOfIteratorHelper(list);try{for(_iterator.s();!(_step=_iterator.n()).done;){_step$value=_step.value,packageId=_step$value.packageId,packageState=_step$value.packageState;if(selected.includes(packageId)&&isArchivable(packageState)){archivable+=1;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}newTools=_objectSpread({},tools);newTools.isBtnDownload=isSelected;newTools.isBtnFolder=isSelected;newTools.isBtnSign=mode==='draft'&&isSelected;newTools.isBtnDelete=mode==='draft'&&isSelected;newTools.isBtnSignContainer=!!(Core.company&&mode==='draft'&&selected.length>=2);newTools.isBtnArchive=!!(!['archive','draft'].includes(mode)&&archivable);_context2.next=25;return put(actionDocumentSetTools({tools:newTools}));case 25:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/store/sagas/tools.effect.ts"],"names":["ducumentTools","sagaDocumentTools","takeLatest","select","put","isArchivable","actionDocumentTools","actionDocumentSetTools","actionDocumentSuccess","selectSelected","selectTools","selectMode","selectList","Core","mode","list","tools","selected","isSelected","length","archivable","packageId","packageState","includes","newTools","isBtnDownload","isBtnFolder","isBtnSign","isBtnDelete","isBtnSignContainer","company","isBtnArchive"],"mappings":"ikBAQiBA,a,iDAQPC,iB,EAhBV,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,GAA7B,KAAwC,oBAAxC,CAEA,OAASC,YAAT,KAA6B,iCAA7B,CAEA,OAASC,mBAAT,CAA8BC,sBAA9B,CAAsDC,qBAAtD,KAAmF,YAAnF,CACA,OAASC,cAAT,CAAyBC,WAAzB,CAAsCC,UAAtC,CAAkDC,UAAlD,KAAoE,YAApE,CACA,MAAOC,CAAAA,IAAP,KAAiB,qCAAjB,CAEA,MAAO,SAAUb,CAAAA,aAAV,yIACL,MAAME,CAAAA,UAAU,CAACM,qBAAD,CAAwBP,iBAAxB,CAAhB,CADK,uBAEL,MAAMC,CAAAA,UAAU,CAACI,mBAAD,CAAsBL,iBAAtB,CAAhB,CAFK,sDAQP,QAAUA,CAAAA,iBAAV,gQACuB,MAAME,CAAAA,MAAM,CAACQ,UAAD,CAAZ,CADvB,OACQG,IADR,iCAE+B,MAAMX,CAAAA,MAAM,CAACS,UAAD,CAAZ,CAF/B,OAEQG,IAFR,iCAGuB,MAAMZ,CAAAA,MAAM,CAACO,WAAD,CAAZ,CAHvB,OAGQM,KAHR,kCAI6B,MAAMb,CAAAA,MAAM,CAACM,cAAD,CAAZ,CAJ7B,QAIQQ,QAJR,gBAMQC,UANR,CAMqB,CAAC,CAACD,QAAQ,CAACE,MANhC,CAQMC,UARN,CAQmB,CARnB,sCAS4CL,IAT5C,MASE,+CAAgD,yBAAnCM,SAAmC,aAAnCA,SAAmC,CAAxBC,YAAwB,aAAxBA,YAAwB,CAC9C,GAAIL,QAAQ,CAACM,QAAT,CAAkBF,SAAlB,GAAgChB,YAAY,CAACiB,YAAD,CAAhD,CAAgE,CAC9DF,UAAU,EAAI,CAAd,CACD,CACF,CAbH,qDAeQI,QAfR,kBAewBR,KAfxB,EAiBEQ,QAAQ,CAACC,aAAT,CAAyBP,UAAzB,CACAM,QAAQ,CAACE,WAAT,CAAuBR,UAAvB,CACAM,QAAQ,CAACG,SAAT,CAAqBb,IAAI,GAAK,OAAT,EAAoBI,UAAzC,CACAM,QAAQ,CAACI,WAAT,CAAuBd,IAAI,GAAK,OAAT,EAAoBI,UAA3C,CACAM,QAAQ,CAACK,kBAAT,CAA8B,CAAC,EAAEhB,IAAI,CAACiB,OAAL,EAAgBhB,IAAI,GAAK,OAAzB,EAAoCG,QAAQ,CAACE,MAAT,EAAmB,CAAzD,CAA/B,CACAK,QAAQ,CAACO,YAAT,CAAwB,CAAC,EAAE,CAAC,CAAC,SAAD,CAAY,OAAZ,EAAqBR,QAArB,CAA8BT,IAA9B,CAAD,EAAwCM,UAA1C,CAAzB,CAtBF,kBAwBE,MAAMhB,CAAAA,GAAG,CAACG,sBAAsB,CAAC,CAAES,KAAK,CAAEQ,QAAT,CAAD,CAAvB,CAAT,CAxBF","sourcesContent":["import { takeLatest, select, put } from 'redux-saga/effects';\r\n\r\nimport { isArchivable } from '../../helpers/documnets.helpers';\r\nimport { DefaultState, DocumentType } from '../../helpers/documents.typings';\r\nimport { actionDocumentTools, actionDocumentSetTools, actionDocumentSuccess } from '../actions';\r\nimport { selectSelected, selectTools, selectMode, selectList } from '../selects';\r\nimport Core from '@distate/core/dist/application/Core';\r\n\r\nexport function* ducumentTools() {\r\n  yield takeLatest(actionDocumentSuccess, sagaDocumentTools);\r\n  yield takeLatest(actionDocumentTools, sagaDocumentTools);\r\n}\r\n\r\ntype Tools = Pick<DefaultState, 'tools'>['tools'];\r\ntype Selected = Pick<DefaultState, 'selected'>['selected'];\r\n\r\nfunction* sagaDocumentTools() {\r\n  const mode: string = yield select(selectMode);\r\n  const list: DocumentType[] = yield select(selectList);\r\n  const tools: Tools = yield select(selectTools);\r\n  const selected: Selected = yield select(selectSelected);\r\n\r\n  const isSelected = !!selected.length;\r\n\r\n  let archivable = 0;\r\n  for (const { packageId, packageState } of list) {\r\n    if (selected.includes(packageId) && isArchivable(packageState)) {\r\n      archivable += 1;\r\n    }\r\n  }\r\n\r\n  const newTools = { ...tools };\r\n\r\n  newTools.isBtnDownload = isSelected;\r\n  newTools.isBtnFolder = isSelected;\r\n  newTools.isBtnSign = mode === 'draft' && isSelected;\r\n  newTools.isBtnDelete = mode === 'draft' && isSelected;\r\n  newTools.isBtnSignContainer = !!(Core.company && mode === 'draft' && selected.length >= 2);\r\n  newTools.isBtnArchive = !!(!['archive', 'draft'].includes(mode) && archivable);\r\n\r\n  yield put(actionDocumentSetTools({ tools: newTools }));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}