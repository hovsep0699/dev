{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Button,ButtonKinds,Icons,Input,Autocomplete}from'@distate/components';import AutocompleteGateway from'@distate/core/dist/application/autocomplete/AutocompleteGateway';import{setAddress,clearErrors,getCompanyDetails}from'../../store/actions';import{selectPostalCodeErrors,selectRegionErrors,selectDistrictErrors,selectCityErrors,selectSettlementErrors,selectStreetErrors,selectHouseErrors,selectBuildingErrors,selectRoomErrors,selectPostalCode,selectRegionId,selectRegionTitle,selectDistrict,selectCity,selectSettlement,selectStreet,selectHouse,selectBuilding,selectRoom}from'../../store/selectors';/** # Юридический адрес */export var Address=function Address(){var autocompleteGateway=new AutocompleteGateway();var dispatch=useDispatch();var postalCodeSelector=useSelector(selectPostalCode);var regionIdSelector=useSelector(selectRegionId);var regionTitleSelector=useSelector(selectRegionTitle);var settlementSelector=useSelector(selectSettlement);var districtSelector=useSelector(selectDistrict);var citySelector=useSelector(selectCity);var streetSelector=useSelector(selectStreet);var houseSelector=useSelector(selectHouse);var buildingSelector=useSelector(selectBuilding);var roomSelector=useSelector(selectRoom);/** Индекс */var _useState=useState(),_useState2=_slicedToArray(_useState,2),postalCode=_useState2[0],setPostalCode=_useState2[1];/** Район */var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),district=_useState4[0],setDistrict=_useState4[1];/** Город */var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];/** Населенный пункт */var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),settlement=_useState8[0],setSettlement=_useState8[1];/** Улица */var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),street=_useState10[0],setStreet=_useState10[1];/** Дом */var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),house=_useState12[0],setHouse=_useState12[1];/** Корпус */var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),building=_useState14[0],setBuilding=_useState14[1];/** Офис/квартира */var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),room=_useState16[0],setRoom=_useState16[1];/** Регион */var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),region=_useState18[0],setRegion=_useState18[1];/** ошибки поля Индекс */var postalCodeErrors=useSelector(selectPostalCodeErrors);/** ошибки поля Регион */var regionErrors=useSelector(selectRegionErrors);/** ошибки поля Район */var districtErrors=useSelector(selectDistrictErrors);/** ошибки поля Город */var cityErrors=useSelector(selectCityErrors);/** ошибки поля Населенный пункт */var settlementErrors=useSelector(selectSettlementErrors);/** ошибки поля Улица */var streetErrors=useSelector(selectStreetErrors);/** ошибки поля Дом */var houseErrors=useSelector(selectHouseErrors);/** ошибки поля Корпус */var buildingErrors=useSelector(selectBuildingErrors);/** ошибки поля Офис\\квартира */var roomErrors=useSelector(selectRoomErrors);useEffect(function(){postalCodeSelector&&setPostalCode(postalCodeSelector);regionTitleSelector&&regionIdSelector&&setRegion({label:regionTitleSelector,value:regionIdSelector});districtSelector&&setDistrict(districtSelector);citySelector&&setCity(citySelector);settlementSelector&&setSettlement(settlementSelector);streetSelector&&setStreet(streetSelector);houseSelector&&setHouse(houseSelector);buildingSelector&&setBuilding(buildingSelector);roomSelector&&setRoom(roomSelector);},[postalCodeSelector,regionTitleSelector,regionIdSelector,districtSelector,citySelector,settlementSelector,streetSelector,houseSelector,buildingSelector,roomSelector]);useEffect(function(){dispatch(getCompanyDetails());/** очистка старых ошибок при первом входе */dispatch(clearErrors());},[dispatch]);/** загрузка подходящих регионов в автокомплите */var regionLoad=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(regionStr,callback){var _yield$autocompleteGa,_yield$autocompleteGa2,rows,dataToOptions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return autocompleteGateway.getRegionByTitle(regionStr);case 2:_yield$autocompleteGa=_context.sent;_yield$autocompleteGa2=_yield$autocompleteGa.rows;rows=_yield$autocompleteGa2===void 0?[]:_yield$autocompleteGa2;dataToOptions=rows.map(function(item){return{value:item.id,label:item.title};});callback(dataToOptions);case 7:case\"end\":return _context.stop();}}},_callee);}));return function regionLoad(_x,_x2){return _ref.apply(this,arguments);};}();/** Отправка формы */var sendFormHandler=function sendFormHandler(){var formData={postalCode:postalCode,region:region,district:district,city:city,settlement:settlement,street:street,house:house,building:building,room:room};dispatch(setAddress(formData));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0418\\u043D\\u0434\\u0435\\u043A\\u0441\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{value:postalCode,name:\"postalCode\",width:320,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 6-\\u0437\\u043D\\u0430\\u0447\\u043D\\u044B\\u0439 \\u043A\\u043E\\u0434\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",onChange:function onChange(e){return setPostalCode(e.target.value);},error:!!postalCodeErrors,errors:postalCodeErrors,maxLength:6}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D *\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Autocomplete,{name:\"region\",width:320,value:region,loadOptions:regionLoad,onChange:function onChange(e){return setRegion(e);},error:!!regionErrors,errors:regionErrors,required:true,title:\"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\\u0430 \\u0438 \\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u0438\\u0437 \\u0432\\u044B\\u043F\\u0430\\u0434\\u0430\\u044E\\u0449\\u0435\\u0433\\u043E \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0420\\u0430\\u0439\\u043E\\u043D\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"district\",value:district,error:!!districtErrors,errors:districtErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0439\\u043E\\u043D\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0439\\u043E\\u043D\",onChange:function onChange(e){return setDistrict(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0413\\u043E\\u0440\\u043E\\u0434\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"city\",value:city,error:!!cityErrors,errors:cityErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",onChange:function onChange(e){return setCity(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0451\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"settlement\",value:settlement,error:!!settlementErrors,errors:settlementErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0441\\u0435\\u043B\\u0451\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0441\\u0435\\u043B\\u0451\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",onChange:function onChange(e){return setSettlement(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0423\\u043B\\u0438\\u0446\\u0430\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"street\",value:street,error:!!streetErrors,errors:streetErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0443\\u043B\\u0438\\u0446\\u0443\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0443\\u043B\\u0438\\u0446\\u0443\",onChange:function onChange(e){return setStreet(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0414\\u043E\\u043C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"house\",value:house,error:!!houseErrors,errors:houseErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u043C\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u043C\",onChange:function onChange(e){return setHouse(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041A\\u043E\\u0440\\u043F\\u0443\\u0441\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"building\",value:building,error:!!buildingErrors,errors:buildingErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u043F\\u0443\\u0441\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u043F\\u0443\\u0441\",onChange:function onChange(e){return setBuilding(e.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041E\\u0444\\u0438\\u0441/\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:320,name:\"room\",value:room,placeholder:\"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440\",error:!!roomErrors,errors:roomErrors,title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0444\\u0438\\u0441/\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0443\",onChange:function onChange(e){return setRoom(e.target.value);}})))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconCheck,{fill:\"currentColor\"}),kind:ButtonKinds.Orange,onClick:sendFormHandler},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u044E\\u0440\\u0438\\u0434\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/address/Address.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Button","ButtonKinds","Icons","Input","Autocomplete","AutocompleteGateway","setAddress","clearErrors","getCompanyDetails","selectPostalCodeErrors","selectRegionErrors","selectDistrictErrors","selectCityErrors","selectSettlementErrors","selectStreetErrors","selectHouseErrors","selectBuildingErrors","selectRoomErrors","selectPostalCode","selectRegionId","selectRegionTitle","selectDistrict","selectCity","selectSettlement","selectStreet","selectHouse","selectBuilding","selectRoom","Address","autocompleteGateway","dispatch","postalCodeSelector","regionIdSelector","regionTitleSelector","settlementSelector","districtSelector","citySelector","streetSelector","houseSelector","buildingSelector","roomSelector","postalCode","setPostalCode","district","setDistrict","city","setCity","settlement","setSettlement","street","setStreet","house","setHouse","building","setBuilding","room","setRoom","region","setRegion","postalCodeErrors","regionErrors","districtErrors","cityErrors","settlementErrors","streetErrors","houseErrors","buildingErrors","roomErrors","label","value","regionLoad","regionStr","callback","getRegionByTitle","rows","dataToOptions","map","item","id","title","sendFormHandler","formData","e","target","Orange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, ButtonKinds, Icons, Input, Autocomplete } from '@distate/components';\r\nimport AutocompleteGateway from '@distate/core/dist/application/autocomplete/AutocompleteGateway';\r\nimport { setAddress, clearErrors, getCompanyDetails } from '../../store/actions';\r\nimport {\r\n  selectPostalCodeErrors,\r\n  selectRegionErrors,\r\n  selectDistrictErrors,\r\n  selectCityErrors,\r\n  selectSettlementErrors,\r\n  selectStreetErrors,\r\n  selectHouseErrors,\r\n  selectBuildingErrors,\r\n  selectRoomErrors,\r\n  selectPostalCode,\r\n  selectRegionId,\r\n  selectRegionTitle,\r\n  selectDistrict,\r\n  selectCity,\r\n  selectSettlement,\r\n  selectStreet,\r\n  selectHouse,\r\n  selectBuilding,\r\n  selectRoom\r\n} from '../../store/selectors';\r\n\r\ntype AutocompleteItem = {\r\n  label?: string;\r\n  value?: string;\r\n};\r\n\r\n/** # Юридический адрес */\r\nexport const Address = () => {\r\n  const autocompleteGateway = new AutocompleteGateway();\r\n  const dispatch = useDispatch();\r\n\r\n  const postalCodeSelector = useSelector(selectPostalCode);\r\n  const regionIdSelector = useSelector(selectRegionId);\r\n  const regionTitleSelector = useSelector(selectRegionTitle);\r\n  const settlementSelector = useSelector(selectSettlement);\r\n  const districtSelector = useSelector(selectDistrict);\r\n  const citySelector = useSelector(selectCity);\r\n  const streetSelector = useSelector(selectStreet);\r\n  const houseSelector = useSelector(selectHouse);\r\n  const buildingSelector = useSelector(selectBuilding);\r\n  const roomSelector = useSelector(selectRoom);\r\n\r\n  /** Индекс */\r\n  const [postalCode, setPostalCode] = useState<string>();\r\n  /** Район */\r\n  const [district, setDistrict] = useState<any>();\r\n  /** Город */\r\n  const [city, setCity] = useState<string>();\r\n  /** Населенный пункт */\r\n  const [settlement, setSettlement] = useState<string>();\r\n  /** Улица */\r\n  const [street, setStreet] = useState<string>();\r\n  /** Дом */\r\n  const [house, setHouse] = useState<string>();\r\n  /** Корпус */\r\n  const [building, setBuilding] = useState<string>();\r\n  /** Офис/квартира */\r\n  const [room, setRoom] = useState<string>();\r\n  /** Регион */\r\n  const [region, setRegion] = useState<AutocompleteItem>();\r\n\r\n  /** ошибки поля Индекс */\r\n  const postalCodeErrors = useSelector(selectPostalCodeErrors);\r\n  /** ошибки поля Регион */\r\n  const regionErrors = useSelector(selectRegionErrors);\r\n  /** ошибки поля Район */\r\n  const districtErrors = useSelector(selectDistrictErrors);\r\n  /** ошибки поля Город */\r\n  const cityErrors = useSelector(selectCityErrors);\r\n  /** ошибки поля Населенный пункт */\r\n  const settlementErrors = useSelector(selectSettlementErrors);\r\n  /** ошибки поля Улица */\r\n  const streetErrors = useSelector(selectStreetErrors);\r\n  /** ошибки поля Дом */\r\n  const houseErrors = useSelector(selectHouseErrors);\r\n  /** ошибки поля Корпус */\r\n  const buildingErrors = useSelector(selectBuildingErrors);\r\n  /** ошибки поля Офис\\квартира */\r\n  const roomErrors = useSelector(selectRoomErrors);\r\n\r\n  useEffect(() => {\r\n    postalCodeSelector && setPostalCode(postalCodeSelector);\r\n    regionTitleSelector &&\r\n      regionIdSelector &&\r\n      setRegion({\r\n        label: regionTitleSelector,\r\n        value: regionIdSelector\r\n      });\r\n    districtSelector && setDistrict(districtSelector);\r\n    citySelector && setCity(citySelector);\r\n    settlementSelector && setSettlement(settlementSelector);\r\n    streetSelector && setStreet(streetSelector);\r\n    houseSelector && setHouse(houseSelector);\r\n    buildingSelector && setBuilding(buildingSelector);\r\n    roomSelector && setRoom(roomSelector);\r\n  }, [\r\n    postalCodeSelector,\r\n    regionTitleSelector,\r\n    regionIdSelector,\r\n    districtSelector,\r\n    citySelector,\r\n    settlementSelector,\r\n    streetSelector,\r\n    houseSelector,\r\n    buildingSelector,\r\n    roomSelector\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCompanyDetails());\r\n    /** очистка старых ошибок при первом входе */\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  /** загрузка подходящих регионов в автокомплите */\r\n  const regionLoad = async (regionStr: string, callback: any) => {\r\n    const { rows = [] } = await autocompleteGateway.getRegionByTitle(regionStr);\r\n    const dataToOptions = rows.map((item: any) => {\r\n      return {\r\n        value: item.id,\r\n        label: item.title\r\n      };\r\n    });\r\n    callback(dataToOptions);\r\n  };\r\n\r\n  /** Отправка формы */\r\n  const sendFormHandler = () => {\r\n    const formData = {\r\n      postalCode,\r\n      region,\r\n      district,\r\n      city,\r\n      settlement,\r\n      street,\r\n      house,\r\n      building,\r\n      room\r\n    };\r\n    dispatch(setAddress(formData));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"two-columns-center\">\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Индекс</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              value={postalCode}\r\n              name=\"postalCode\"\r\n              width={320}\r\n              title=\"Введите 6-значный код\"\r\n              placeholder=\"Введите индекс\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPostalCode(e.target.value)}\r\n              error={!!postalCodeErrors}\r\n              errors={postalCodeErrors}\r\n              maxLength={6}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Регион *</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Autocomplete\r\n              name=\"region\"\r\n              width={320}\r\n              value={region}\r\n              loadOptions={regionLoad}\r\n              onChange={(e: HTMLSelectElement) => setRegion(e)}\r\n              error={!!regionErrors}\r\n              errors={regionErrors}\r\n              required\r\n              title=\"Начните вводить название региона и выберите его из выпадающего списка\"\r\n              placeholder=\"Введите регион\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Район</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"district\"\r\n              value={district}\r\n              error={!!districtErrors}\r\n              errors={districtErrors}\r\n              title=\"Введите район\"\r\n              placeholder=\"Введите район\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDistrict(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Город</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"city\"\r\n              value={city}\r\n              error={!!cityErrors}\r\n              errors={cityErrors}\r\n              title=\"Введите город\"\r\n              placeholder=\"Введите город\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCity(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Населённый пункт</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"settlement\"\r\n              value={settlement}\r\n              error={!!settlementErrors}\r\n              errors={settlementErrors}\r\n              title=\"Введите населённый пункт\"\r\n              placeholder=\"Введите населённый пункт\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSettlement(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Улица</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"street\"\r\n              value={street}\r\n              error={!!streetErrors}\r\n              errors={streetErrors}\r\n              title=\"Введите улицу\"\r\n              placeholder=\"Введите улицу\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setStreet(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Дом</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"house\"\r\n              value={house}\r\n              error={!!houseErrors}\r\n              errors={houseErrors}\r\n              title=\"Введите дом\"\r\n              placeholder=\"Введите дом\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setHouse(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Корпус</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"building\"\r\n              value={building}\r\n              error={!!buildingErrors}\r\n              errors={buildingErrors}\r\n              title=\"Введите корпус\"\r\n              placeholder=\"Введите корпус\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBuilding(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Офис/квартира</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={320}\r\n              name=\"room\"\r\n              value={room}\r\n              placeholder=\"Укажите номер\"\r\n              error={!!roomErrors}\r\n              errors={roomErrors}\r\n              title=\"Введите офис/квартиру\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setRoom(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Button\r\n        icon={<Icons.IconCheck fill=\"currentColor\" />}\r\n        kind={ButtonKinds.Orange}\r\n        onClick={sendFormHandler}\r\n      >\r\n        Сохранить юридический адрес\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}