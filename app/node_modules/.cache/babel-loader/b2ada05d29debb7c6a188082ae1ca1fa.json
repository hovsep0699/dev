{"ast":null,"code":"import{routeEdit}from'./documents.routes';export var switchCheckDocuments=function switchCheckDocuments(check,items,values){return items.map(function(item){if(values.includes(item.packageId)){item.checked=check;}return item;});};export var parseValue=function parseValue(value){if(Array.isArray(value)){return value.map(function(val){return parseValue(val);});}if(typeof value==='object'&&value.hasOwnProperty('value')){return value.value;}return value;};export var getEditUrl=function getEditUrl(id,flowType,flowGroup){var type=flowGroup;if(flowType==='invoice_utd'||flowType==='invoice_correction_ucd'){type=flowType;}if(!routeEdit.hasOwnProperty(type)){return;}return routeEdit[type].replace(':id',id);};export var isArchivable=function isArchivable(status){return['complete','iaktprm_has_been_declined','receiving_has_not_been_confirmed','sending_has_not_been_confirmed','annulled','declined','receiving_notification_has_not_been_confirmed','dp_tovtorgpr_has_been_declined','otorg12_has_been_declined'].includes(status);};/** принимает массив, возвращает одну строку из не пустых значений массива в скобках.\r\n * если все значения undefined, то вернется пусая строка\r\n */export var getContractorType=function getContractorType(args){var noEmptyArr=args.filter(function(item){return item!==undefined;});var str=noEmptyArr.join(' ');if(str.trim().length<1){return'';}return\" (\".concat(str,\")\");};/** возвращает строку из не пустых значений*/export var getNoEmptyString=function getNoEmptyString(args){var noEmptyArr=args.filter(function(item){return item!==undefined;});var str=noEmptyArr.join(' ');if(str.length<1){return'';}return\"\".concat(str);};/** Возвращает имя типа контрагента по его коду */export var getExtTypeName=function getExtTypeName(code){if(code==='roaming'){return'Роуминг';}if(code==='LoaclRoaming'){return'Внутренний роуминг';}if(code==='taxcom'){return'1С-ЭДО';}if(code==='connector'){return'Коннектор';}return'Локальный';};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/helpers/documnets.helpers.tsx"],"names":["routeEdit","switchCheckDocuments","check","items","values","map","item","includes","packageId","checked","parseValue","value","Array","isArray","val","hasOwnProperty","getEditUrl","id","flowType","flowGroup","type","replace","isArchivable","status","getContractorType","args","noEmptyArr","filter","undefined","str","join","trim","length","getNoEmptyString","getExtTypeName","code"],"mappings":"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","sourcesContent":["import { routeEdit } from './documents.routes';\r\nimport { DocumentType, DefaultState } from './documents.typings';\r\n\r\nexport const switchCheckDocuments = (\r\n  check: boolean,\r\n  items: DocumentType[],\r\n  values: Pick<DefaultState, 'selected'>['selected']\r\n) => {\r\n  return items.map(\r\n    (item: DocumentType): DocumentType => {\r\n      if (values.includes(item.packageId)) {\r\n        item.checked = check;\r\n      }\r\n\r\n      return item;\r\n    }\r\n  );\r\n};\r\n\r\nexport const parseValue = (value: any): any => {\r\n  if (Array.isArray(value)) {\r\n    return value.map(val => parseValue(val));\r\n  }\r\n\r\n  if (typeof value === 'object' && value.hasOwnProperty('value')) {\r\n    return value.value;\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nexport const getEditUrl = (id: string, flowType: string, flowGroup: string): string | undefined => {\r\n  let type: string = flowGroup;\r\n\r\n  if (flowType === 'invoice_utd' || flowType === 'invoice_correction_ucd') {\r\n    type = flowType;\r\n  }\r\n\r\n  if (!routeEdit.hasOwnProperty(type)) {\r\n    return;\r\n  }\r\n\r\n  return routeEdit[type].replace(':id', id);\r\n};\r\n\r\nexport const isArchivable = (status: string) => {\r\n  return [\r\n    'complete',\r\n    'iaktprm_has_been_declined',\r\n    'receiving_has_not_been_confirmed',\r\n    'sending_has_not_been_confirmed',\r\n    'annulled',\r\n    'declined',\r\n    'receiving_notification_has_not_been_confirmed',\r\n    'dp_tovtorgpr_has_been_declined',\r\n    'otorg12_has_been_declined'\r\n  ].includes(status);\r\n};\r\n\r\n/** принимает массив, возвращает одну строку из не пустых значений массива в скобках.\r\n * если все значения undefined, то вернется пусая строка\r\n */\r\nexport const getContractorType = (args: any[]) => {\r\n  const noEmptyArr = args.filter(item => item !== undefined);\r\n  const str = noEmptyArr.join(' ');\r\n  if (str.trim().length < 1) {\r\n    return '';\r\n  }\r\n  return ` (${str})`;\r\n};\r\n\r\n/** возвращает строку из не пустых значений*/\r\nexport const getNoEmptyString = (args: any[]) => {\r\n  const noEmptyArr = args.filter(item => item !== undefined);\r\n  const str = noEmptyArr.join(' ');\r\n  if (str.length < 1) {\r\n    return '';\r\n  }\r\n  return `${str}`;\r\n};\r\n\r\n/** Возвращает имя типа контрагента по его коду */\r\nexport const getExtTypeName = (code?: string) => {\r\n  if (code === 'roaming') {\r\n    return 'Роуминг';\r\n  }\r\n  if (code === 'LoaclRoaming') {\r\n    return 'Внутренний роуминг';\r\n  }\r\n  if (code === 'taxcom') {\r\n    return '1С-ЭДО';\r\n  }\r\n  if (code === 'connector') {\r\n    return 'Коннектор';\r\n  }\r\n\r\n  return 'Локальный';\r\n};\r\n"]},"metadata":{},"sourceType":"module"}