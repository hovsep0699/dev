{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Employee from './Employee';\nimport INN from './vo/INN';\nimport OGRNIP from './vo/OGRNIP';\nimport OKPO from './vo/OKPO';\nimport errFactory from '../../application/error/ErrorFactory';\nimport { CHANGE_COMPANY } from '../../application/error/Error';\nimport IFNS from '../ifns/IFNS';\nimport BankDetails from '../bank/BankDetails';\nimport LegalAddress from '../common/LegalAddress';\n\nvar Company = /*#__PURE__*/function () {\n  function Company(localId, id, inn, ogrnip, name) {\n    _classCallCheck(this, Company);\n\n    this._localId = localId; // ID компании в базе данных\n\n    this._id = id; // Идентификатор участника KSR201811140012b8b58b0cb004d61beb1aa315cd86001\n\n    this._inn = new INN(inn);\n    this._ogrnip = new OGRNIP(ogrnip);\n    this._name = name;\n    this._bankDetails = null;\n    this._ifns = null;\n    this._employees = new Map();\n    this._internalDepartments = new Map();\n    this._mainDepartment = null;\n  }\n\n  _createClass(Company, [{\n    key: \"setDetails\",\n    value: function setDetails(okpo, ifns, bankDetails) {\n      if (!(okpo instanceof OKPO)) {// throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса OKPO');\n      }\n\n      if (!(ifns instanceof IFNS)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса IFNS');\n      }\n\n      if (!(bankDetails instanceof BankDetails)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса BankDetails');\n      }\n\n      this.okpo = okpo;\n      this.ifns = ifns;\n      this.bankDetails = bankDetails;\n      this.state.setDetails();\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(legalAddress) {\n      if (!(legalAddress instanceof LegalAddress)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса LegalAddress(для юридической компании)');\n      }\n\n      this._legalAddress = legalAddress;\n      this.state.setAddress();\n    }\n  }, {\n    key: \"addEmployee\",\n    value: function addEmployee(employee) {\n      if (!(employee instanceof Employee)) {\n        throw new Error('Параметр должен быть экземпляром класса Employee');\n      }\n\n      this._employees.set(employee.id, employee);\n    }\n  }, {\n    key: \"mainDepartment\",\n    set: function set(value) {\n      this._mainDepartment = value;\n    },\n    get: function get() {\n      return this._mainDepartment;\n    }\n  }, {\n    key: \"internalDepartments\",\n    get: function get() {\n      return this._internalDepartments;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"localId\",\n    get: function get() {\n      return this._localId;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"ogrnip\",\n    get: function get() {\n      return this._ogrnip;\n    }\n  }, {\n    key: \"inn\",\n    get: function get() {\n      return this._inn;\n    }\n  }, {\n    key: \"okpo\",\n    get: function get() {\n      return this._okpo;\n    },\n    set: function set(value) {\n      this._okpo = value;\n    }\n  }, {\n    key: \"ifns\",\n    get: function get() {\n      return this._ifns;\n    },\n    set: function set(value) {\n      this._ifns = value;\n    }\n  }, {\n    key: \"bankDetails\",\n    get: function get() {\n      return this._bankDetails;\n    },\n    set: function set(value) {\n      this._bankDetails = value;\n    }\n  }, {\n    key: \"legalAddress\",\n    set: function set(value) {\n      this._legalAddress = value;\n    },\n    get: function get() {\n      return this._legalAddress;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'IP';\n    }\n  }]);\n\n  return Company;\n}();\n\nexport { Company as default };","map":{"version":3,"sources":["../../../src/domain/individual_entrepreneur/Company.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Employee from './Employee';\r\nimport INN from './vo/INN';\r\nimport OGRNIP from './vo/OGRNIP';\r\nimport OKPO from './vo/OKPO';\r\nimport errFactory from '../../application/error/ErrorFactory';\r\nimport { CHANGE_COMPANY } from '../../application/error/Error';\r\nimport IFNS from '../ifns/IFNS';\r\nimport BankDetails from '../bank/BankDetails';\r\nimport LegalAddress from '../common/LegalAddress';\r\nexport default class Company {\r\n    constructor(localId, id, inn, ogrnip, name) {\r\n        this._localId = localId; // ID компании в базе данных\r\n        this._id = id; // Идентификатор участника KSR201811140012b8b58b0cb004d61beb1aa315cd86001\r\n        this._inn = new INN(inn);\r\n        this._ogrnip = new OGRNIP(ogrnip);\r\n        this._name = name;\r\n        this._bankDetails = null;\r\n        this._ifns = null;\r\n        this._employees = new Map();\r\n        this._internalDepartments = new Map();\r\n        this._mainDepartment = null;\r\n    }\r\n    setDetails(okpo, ifns, bankDetails) {\r\n        if (!(okpo instanceof OKPO)) {\r\n            // throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса OKPO');\r\n        }\r\n        if (!(ifns instanceof IFNS)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса IFNS');\r\n        }\r\n        if (!(bankDetails instanceof BankDetails)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса BankDetails');\r\n        }\r\n        this.okpo = okpo;\r\n        this.ifns = ifns;\r\n        this.bankDetails = bankDetails;\r\n        this.state.setDetails();\r\n    }\r\n    setAddress(legalAddress) {\r\n        if (!(legalAddress instanceof LegalAddress)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса LegalAddress(для юридической компании)');\r\n        }\r\n        this._legalAddress = legalAddress;\r\n        this.state.setAddress();\r\n    }\r\n    addEmployee(employee) {\r\n        if (!(employee instanceof Employee)) {\r\n            throw new Error('Параметр должен быть экземпляром класса Employee');\r\n        }\r\n        this._employees.set(employee.id, employee);\r\n    }\r\n    set mainDepartment(value) {\r\n        this._mainDepartment = value;\r\n    }\r\n    get mainDepartment() {\r\n        return this._mainDepartment;\r\n    }\r\n    get internalDepartments() {\r\n        return this._internalDepartments;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get localId() {\r\n        return this._localId;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get ogrnip() {\r\n        return this._ogrnip;\r\n    }\r\n    get inn() {\r\n        return this._inn;\r\n    }\r\n    get okpo() {\r\n        return this._okpo;\r\n    }\r\n    set okpo(value) {\r\n        this._okpo = value;\r\n    }\r\n    get ifns() {\r\n        return this._ifns;\r\n    }\r\n    set ifns(value) {\r\n        this._ifns = value;\r\n    }\r\n    get bankDetails() {\r\n        return this._bankDetails;\r\n    }\r\n    set bankDetails(value) {\r\n        this._bankDetails = value;\r\n    }\r\n    set legalAddress(value) {\r\n        this._legalAddress = value;\r\n    }\r\n    get legalAddress() {\r\n        return this._legalAddress;\r\n    }\r\n    get type() {\r\n        return 'IP';\r\n    }\r\n}\r\n//# sourceMappingURL=Company.js.map"]},"metadata":{},"sourceType":"module"}