{"ast":null,"code":"import React from'react';import StyledButton,{Inner,IconWrapper,Reload}from'./Button.styles';import{IconReload}from'../../assets/icons';export var ButtonKinds;(function(ButtonKinds){ButtonKinds[\"Default\"]=\"default\";ButtonKinds[\"Primary\"]=\"primary\";ButtonKinds[\"Orange\"]=\"orange\";ButtonKinds[\"Secondary\"]=\"secondary\";ButtonKinds[\"Danger\"]=\"danger\";ButtonKinds[\"LightGreen\"]=\"lightGreen\";ButtonKinds[\"Dark\"]=\"dark\";})(ButtonKinds||(ButtonKinds={}));export var ButtonSizes;(function(ButtonSizes){ButtonSizes[\"Default\"]=\"default\";ButtonSizes[\"Small\"]=\"small\";ButtonSizes[\"Large\"]=\"large\";})(ButtonSizes||(ButtonSizes={}));var Button=function Button(_ref){var children=_ref.children,_ref$kind=_ref.kind,kind=_ref$kind===void 0?ButtonKinds.Default:_ref$kind,_ref$size=_ref.size,size=_ref$size===void 0?ButtonSizes.Default:_ref$size,icon=_ref.icon,disabled=_ref.disabled,onClick=_ref.onClick,busy=_ref.busy,_ref$type=_ref.type,type=_ref$type===void 0?'button':_ref$type,fullWidth=_ref.fullWidth,solid=_ref.solid,className=_ref.className,toogleTheme=_ref.toogleTheme,style=_ref.style;var hasChildren=!!children;var hasIcon=!!icon;var handleOnClick=function handleOnClick(e){if(busy)return;if(onClick)onClick(e);};return/*#__PURE__*/React.createElement(StyledButton,{type:type,onClick:handleOnClick,kind:kind,size:size,disabled:disabled,hasChildren:hasChildren,hasIcon:hasIcon,busy:busy,fullWidth:fullWidth,solid:solid,className:className,toogleTheme:Boolean(toogleTheme),style:style},!solid&&icon&&/*#__PURE__*/React.createElement(IconWrapper,{busy:busy,size:size},/*#__PURE__*/React.createElement(IconReload,{fill:\"currentColor\"})),/*#__PURE__*/React.createElement(Inner,{busy:busy},solid&&busy?/*#__PURE__*/React.createElement(Reload,{fill:\"currentColor\"}):icon,children));};export default Button;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/Button/Button.tsx"],"names":["React","StyledButton","Inner","IconWrapper","Reload","IconReload","ButtonKinds","ButtonSizes","Button","children","kind","Default","size","icon","disabled","onClick","busy","type","fullWidth","solid","className","toogleTheme","style","hasChildren","hasIcon","handleOnClick","e","Boolean"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,EAAuBC,KAAvB,CAA8BC,WAA9B,CAA2CC,MAA3C,KAAyD,iBAAzD,CACA,OAASC,UAAT,KAA2B,oBAA3B,CAEA,UAAYC,CAAAA,WAAZ,C,UAAYA,W,EAAAA,W,sBAAAA,W,sBAAAA,W,oBAAAA,W,0BAAAA,W,oBAAAA,W,4BAAAA,W,mBAAAA,W,GAAAA,W,MAUZ,UAAYC,CAAAA,WAAZ,C,UAAYA,W,EAAAA,W,sBAAAA,W,kBAAAA,W,qBAAAA,W,GAAAA,W,MAsBZ,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAeA,IAdbC,CAAAA,QAca,MAdbA,QAca,gBAbbC,IAaa,CAbbA,IAaa,oBAbNJ,WAAW,CAACK,OAaN,0BAZbC,IAYa,CAZbA,IAYa,oBAZNL,WAAW,CAACI,OAYN,WAXbE,IAWa,MAXbA,IAWa,CAVbC,QAUa,MAVbA,QAUa,CATbC,OASa,MATbA,OASa,CARbC,IAQa,MARbA,IAQa,gBAPbC,IAOa,CAPbA,IAOa,oBAPN,QAOM,WANbC,SAMa,MANbA,SAMa,CALbC,KAKa,MALbA,KAKa,CAJbC,SAIa,MAJbA,SAIa,CAHbC,WAGa,MAHbA,WAGa,CAFbC,KAEa,MAFbA,KAEa,CACb,GAAMC,CAAAA,WAAW,CAAG,CAAC,CAACd,QAAtB,CACA,GAAMe,CAAAA,OAAO,CAAG,CAAC,CAACX,IAAlB,CAEA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAA6B,CACjD,GAAIV,IAAJ,CAAU,OACV,GAAID,OAAJ,CAAaA,OAAO,CAACW,CAAD,CAAP,CACd,CAHD,CAKA,mBACE,oBAAC,YAAD,EACE,IAAI,CAAET,IADR,CAEE,OAAO,CAAEQ,aAFX,CAGE,IAAI,CAAEf,IAHR,CAIE,IAAI,CAAEE,IAJR,CAKE,QAAQ,CAAEE,QALZ,CAME,WAAW,CAAES,WANf,CAOE,OAAO,CAAEC,OAPX,CAQE,IAAI,CAAER,IARR,CASE,SAAS,CAAEE,SATb,CAUE,KAAK,CAAEC,KAVT,CAWE,SAAS,CAAEC,SAXb,CAYE,WAAW,CAAEO,OAAO,CAACN,WAAD,CAZtB,CAaE,KAAK,CAAEC,KAbT,EAeG,CAACH,KAAD,EAAUN,IAAV,eACC,oBAAC,WAAD,EAAa,IAAI,CAAEG,IAAnB,CAAyB,IAAI,CAAEJ,IAA/B,eACE,oBAAC,UAAD,EAAY,IAAI,CAAC,cAAjB,EADF,CAhBJ,cAoBE,oBAAC,KAAD,EAAO,IAAI,CAAEI,IAAb,EACGG,KAAK,EAAIH,IAAT,cAAgB,oBAAC,MAAD,EAAQ,IAAI,CAAC,cAAb,EAAhB,CAAiDH,IADpD,CAEGJ,QAFH,CApBF,CADF,CA4BD,CApDD,CAsDA,cAAeD,CAAAA,MAAf","sourcesContent":["import React from 'react';\r\nimport StyledButton, { Inner, IconWrapper, Reload } from './Button.styles';\r\nimport { IconReload } from '../../assets/icons';\r\n\r\nexport enum ButtonKinds {\r\n  Default = 'default',\r\n  Primary = 'primary',\r\n  Orange = 'orange',\r\n  Secondary = 'secondary',\r\n  Danger = 'danger',\r\n  LightGreen = 'lightGreen',\r\n  Dark = 'dark'\r\n}\r\n\r\nexport enum ButtonSizes {\r\n  Default = 'default',\r\n  Small = 'small',\r\n  Large = 'large'\r\n}\r\n\r\nexport interface IButton {\r\n  onClick?: (e: React.SyntheticEvent) => void;\r\n  children?: React.ReactNode;\r\n  kind?: ButtonKinds;\r\n  size?: ButtonSizes;\r\n  disabled?: boolean;\r\n  icon?: JSX.Element;\r\n  busy?: boolean;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  fullWidth?: boolean;\r\n  solid?: boolean;\r\n  className?: string;\r\n  toogleTheme?: boolean;\r\n  style?: Object;\r\n}\r\n\r\nconst Button = ({\r\n  children,\r\n  kind = ButtonKinds.Default,\r\n  size = ButtonSizes.Default,\r\n  icon,\r\n  disabled,\r\n  onClick,\r\n  busy,\r\n  type = 'button',\r\n  fullWidth,\r\n  solid,\r\n  className,\r\n  toogleTheme,\r\n  style,\r\n  \r\n}: IButton) => {\r\n  const hasChildren = !!children;\r\n  const hasIcon = !!icon;\r\n\r\n  const handleOnClick = (e: React.SyntheticEvent) => {\r\n    if (busy) return;\r\n    if (onClick) onClick(e);\r\n  };\r\n\r\n  return (\r\n    <StyledButton\r\n      type={type}\r\n      onClick={handleOnClick}\r\n      kind={kind}\r\n      size={size}\r\n      disabled={disabled}\r\n      hasChildren={hasChildren}\r\n      hasIcon={hasIcon}\r\n      busy={busy}\r\n      fullWidth={fullWidth}\r\n      solid={solid}\r\n      className={className}\r\n      toogleTheme={Boolean(toogleTheme)}\r\n      style={style}\r\n    >\r\n      {!solid && icon && (\r\n        <IconWrapper busy={busy} size={size}>\r\n          <IconReload fill=\"currentColor\" />\r\n        </IconWrapper>\r\n      )}\r\n      <Inner busy={busy}>\r\n        {solid && busy ? <Reload fill=\"currentColor\" /> : icon}\r\n        {children}\r\n      </Inner>\r\n      \r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}