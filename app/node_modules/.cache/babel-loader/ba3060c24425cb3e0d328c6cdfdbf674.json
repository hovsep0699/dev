{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport TextInput from '../elements/TextInput';\nimport FieldLabel from '../FieldLabel';\nimport FieldError from '../FieldError';\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\n\nvar InputField = function InputField(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      placeholder = _ref.placeholder,\n      mask = _ref.mask,\n      _ref$hideErrors = _ref.hideErrors,\n      hideErrors = _ref$hideErrors === void 0 ? false : _ref$hideErrors;\n\n  var _useField = useField({\n    name: name,\n    type: type\n  }),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  var touched = meta.touched,\n      error = meta.error;\n  var setValue = helpers.setValue;\n  return React.createElement(StyledFormField, null, label && React.createElement(FieldLabel, {\n    name: name\n  }, label), React.createElement(FieldWrapper, null, React.createElement(TextInput, Object.assign({\n    type: type,\n    touched: touched,\n    error: !!error,\n    placeholder: placeholder,\n    hideErrors: hideErrors,\n    setValue: setValue,\n    mask: mask\n  }, field))), !hideErrors && touched && error ? React.createElement(FieldError, null, error) : null);\n};\n\nexport default InputField;","map":{"version":3,"sources":["../../../src/Form/fields/InputField.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,QAAT,QAAyB,QAAzB;AACA,OAAO,SAAP,MAAsB,uBAAtB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,SAAS,eAAT,EAA0B,YAA1B,QAA8C,gBAA9C;;AAYA,IAAM,UAAU,GAAG,SAAb,UAAa,OAOG;AAAA,MANpB,IAMoB,QANpB,IAMoB;AAAA,MALpB,KAKoB,QALpB,KAKoB;AAAA,uBAJpB,IAIoB;AAAA,MAJpB,IAIoB,0BAJb,MAIa;AAAA,MAHpB,WAGoB,QAHpB,WAGoB;AAAA,MAFpB,IAEoB,QAFpB,IAEoB;AAAA,6BADpB,UACoB;AAAA,MADpB,UACoB,gCADP,KACO;;AAAA,kBACW,QAAQ,CAAC;AAAE,IAAA,IAAI,EAAJ,IAAF;AAAQ,IAAA,IAAI,EAAJ;AAAR,GAAD,CADnB;AAAA;AAAA,MACb,KADa;AAAA,MACN,IADM;AAAA,MACA,OADA;;AAAA,MAEZ,OAFY,GAEO,IAFP,CAEZ,OAFY;AAAA,MAEH,KAFG,GAEO,IAFP,CAEH,KAFG;AAAA,MAGZ,QAHY,GAGC,OAHD,CAGZ,QAHY;AAKpB,SACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EACG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,IAAI,EAAE;AAAP,GAAX,EAAyB,KAAzB,CADZ,EAGE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,IAAA,IAAI,EAAE,IADE;AAER,IAAA,OAAO,EAAE,OAFD;AAGR,IAAA,KAAK,EAAE,CAAC,CAAC,KAHD;AAIR,IAAA,WAAW,EAAE,WAJL;AAKR,IAAA,UAAU,EAAE,UALJ;AAMR,IAAA,QAAQ,EAAE,QANF;AAOR,IAAA,IAAI,EAAE;AAPE,GAAA,EAQJ,KARI,CAAV,CADF,CAHF,EAgBG,CAAC,UAAD,IAAe,OAAf,IAA0B,KAA1B,GAAkC,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,EAAa,KAAb,CAAlC,GAAqE,IAhBxE,CADF;AAoBD,CAhCD;;AAkCA,eAAe,UAAf","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport { useField } from 'formik';\r\nimport TextInput from '../elements/TextInput';\r\nimport FieldLabel from '../FieldLabel';\r\nimport FieldError from '../FieldError';\r\nimport { StyledFormField, FieldWrapper } from '../Form.styles';\r\nconst InputField = ({ name, label, type = 'text', placeholder, mask, hideErrors = false }) => {\r\n    const [field, meta, helpers] = useField({ name, type });\r\n    const { touched, error } = meta;\r\n    const { setValue } = helpers;\r\n    return (React.createElement(StyledFormField, null,\r\n        label && React.createElement(FieldLabel, { name: name }, label),\r\n        React.createElement(FieldWrapper, null,\r\n            React.createElement(TextInput, Object.assign({ type: type, touched: touched, error: !!error, placeholder: placeholder, hideErrors: hideErrors, setValue: setValue, mask: mask }, field))),\r\n        !hideErrors && touched && error ? React.createElement(FieldError, null, error) : null));\r\n};\r\nexport default InputField;\r\n//# sourceMappingURL=InputField.js.map"]},"metadata":{},"sourceType":"module"}