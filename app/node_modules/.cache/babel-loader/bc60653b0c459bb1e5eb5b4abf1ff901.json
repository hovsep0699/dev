{"ast":null,"code":"import React from'react';import{Button,ButtonKinds}from'@distate/components';var locksSetting=[{id:1,title:'блокировать'},{id:2,title:'переводить на другой тариф'}];/** Переключатель действия при достижения порога отключения */export var LocksSettingsSwitcher=function LocksSettingsSwitcher(props){var onChange=props.onChange,tariffTypeId=props.tariffTypeId;return/*#__PURE__*/React.createElement(React.Fragment,null,locksSetting===null||locksSetting===void 0?void 0:locksSetting.map(function(item){var id=item.id,title=item.title;return/*#__PURE__*/React.createElement(Button,{key:id,kind:tariffTypeId===id?ButtonKinds.Dark:ButtonKinds.Default,onClick:function onClick(){return onChange(id);}},title);}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/tariff/components/tariff-card/LocksSettingsSwitcher.tsx"],"names":["React","Button","ButtonKinds","locksSetting","id","title","LocksSettingsSwitcher","props","onChange","tariffTypeId","map","item","Dark","Default"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,qBAApC,CAYA,GAAMC,CAAAA,YAAiC,CAAG,CACxC,CACEC,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,aAFT,CADwC,CAKxC,CACED,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,4BAFT,CALwC,CAA1C,CAWA,8DACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAkB,IAC7CC,CAAAA,QAD6C,CAClBD,KADkB,CAC7CC,QAD6C,CACnCC,YADmC,CAClBF,KADkB,CACnCE,YADmC,CAGrD,mBACE,wCACGN,YADH,SACGA,YADH,iBACGA,YAAY,CAAEO,GAAd,CAAkB,SAACC,IAAD,CAA6B,IACtCP,CAAAA,EADsC,CACxBO,IADwB,CACtCP,EADsC,CAClCC,KADkC,CACxBM,IADwB,CAClCN,KADkC,CAG9C,mBACE,oBAAC,MAAD,EACE,GAAG,CAAED,EADP,CAEE,IAAI,CAAEK,YAAY,GAAKL,EAAjB,CAAsBF,WAAW,CAACU,IAAlC,CAAyCV,WAAW,CAACW,OAF7D,CAGE,OAAO,CAAE,yBAAML,CAAAA,QAAQ,CAACJ,EAAD,CAAd,EAHX,EAKGC,KALH,CADF,CASD,CAZA,CADH,CADF,CAiBD,CApBM","sourcesContent":["import React from 'react';\r\nimport { Button, ButtonKinds } from '@distate/components';\r\n\r\ntype Props = {\r\n  tariffTypeId: number;\r\n  onChange: Function;\r\n};\r\n\r\ntype LocksSettingsItem = {\r\n  id: number;\r\n  title: string;\r\n};\r\n\r\nconst locksSetting: LocksSettingsItem[] = [\r\n  {\r\n    id: 1,\r\n    title: 'блокировать'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'переводить на другой тариф'\r\n  }\r\n];\r\n\r\n/** Переключатель действия при достижения порога отключения */\r\nexport const LocksSettingsSwitcher = (props: Props) => {\r\n  const { onChange, tariffTypeId } = props;\r\n\r\n  return (\r\n    <>\r\n      {locksSetting?.map((item: LocksSettingsItem) => {\r\n        const { id, title } = item;\r\n\r\n        return (\r\n          <Button\r\n            key={id}\r\n            kind={tariffTypeId === id ? ButtonKinds.Dark : ButtonKinds.Default}\r\n            onClick={() => onChange(id)}\r\n          >\r\n            {title}\r\n          </Button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}