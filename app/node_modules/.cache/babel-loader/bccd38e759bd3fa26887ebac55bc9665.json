{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Box}from'grommet';import{CheckBox}from'@distate/components';/** Чекбокс для документооборота */export var FlowCheckBox=function FlowCheckBox(props){var title=props.title,enabled=props.enabled,id=props.id,checked=props.checked,setChecked=props.setChecked;var _useState=useState(enabled),_useState2=_slicedToArray(_useState,2),currentChecked=_useState2[0],setCurrentChecked=_useState2[1];useEffect(function(){setCurrentChecked(enabled);},[enabled]);var onCheckBoxChange=function onCheckBoxChange(id){if(currentChecked){var clearedArr=checked===null||checked===void 0?void 0:checked.filter(function(item){return item!==id;});setChecked(clearedArr);setCurrentChecked(!currentChecked);}else{var extendedArr=[].concat(_toConsumableArray(checked),[id]);setChecked(extendedArr);setCurrentChecked(!currentChecked);}};return/*#__PURE__*/React.createElement(Box,{pad:\"xxsmall\",key:title,style:{marginBottom:3}},/*#__PURE__*/React.createElement(CheckBox,{label:title,checked:currentChecked,onChange:function onChange(){return onCheckBoxChange(id);}}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/roles/modal-role-card/FlowCheckBox.tsx"],"names":["React","useState","useEffect","Box","CheckBox","FlowCheckBox","props","title","enabled","id","checked","setChecked","currentChecked","setCurrentChecked","onCheckBoxChange","clearedArr","filter","item","extendedArr","marginBottom"],"mappings":"8VAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,GAAT,KAAoB,SAApB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAUA,mCACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAkB,IACpCC,CAAAA,KADoC,CACQD,KADR,CACpCC,KADoC,CAC7BC,OAD6B,CACQF,KADR,CAC7BE,OAD6B,CACpBC,EADoB,CACQH,KADR,CACpBG,EADoB,CAChBC,OADgB,CACQJ,KADR,CAChBI,OADgB,CACPC,UADO,CACQL,KADR,CACPK,UADO,eAEAV,QAAQ,CAACO,OAAD,CAFR,wCAErCI,cAFqC,eAErBC,iBAFqB,eAG5CX,SAAS,CAAC,UAAM,CACdW,iBAAiB,CAACL,OAAD,CAAjB,CACD,CAFQ,CAEN,CAACA,OAAD,CAFM,CAAT,CAIA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,EAAD,CAAgB,CACvC,GAAIG,cAAJ,CAAoB,CAClB,GAAMG,CAAAA,UAAU,CAAGL,OAAH,SAAGA,OAAH,iBAAGA,OAAO,CAAEM,MAAT,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAKR,EAAb,EAApB,CAAnB,CACAE,UAAU,CAACI,UAAD,CAAV,CACAF,iBAAiB,CAAC,CAACD,cAAF,CAAjB,CACD,CAJD,IAIO,CACL,GAAMM,CAAAA,WAAW,8BAAOR,OAAP,GAAgBD,EAAhB,EAAjB,CACAE,UAAU,CAACO,WAAD,CAAV,CACAL,iBAAiB,CAAC,CAACD,cAAF,CAAjB,CACD,CACF,CAVD,CAYA,mBACE,oBAAC,GAAD,EAAK,GAAG,CAAC,SAAT,CAAmB,GAAG,CAAEL,KAAxB,CAA+B,KAAK,CAAE,CAAEY,YAAY,CAAE,CAAhB,CAAtC,eACE,oBAAC,QAAD,EAAU,KAAK,CAAEZ,KAAjB,CAAwB,OAAO,CAAEK,cAAjC,CAAiD,QAAQ,CAAE,0BAAME,CAAAA,gBAAgB,CAACL,EAAD,CAAtB,EAA3D,EADF,CADF,CAKD,CAxBM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { Box } from 'grommet';\r\nimport { CheckBox } from '@distate/components';\r\n\r\ntype Props = {\r\n  title: string;\r\n  enabled: boolean;\r\n  id: number;\r\n  checked: number[];\r\n  setChecked: Function;\r\n};\r\n\r\n/** Чекбокс для документооборота */\r\nexport const FlowCheckBox = (props: Props) => {\r\n  const { title, enabled, id, checked, setChecked } = props;\r\n  const [currentChecked, setCurrentChecked] = useState(enabled);\r\n  useEffect(() => {\r\n    setCurrentChecked(enabled);\r\n  }, [enabled]);\r\n\r\n  const onCheckBoxChange = (id: number) => {\r\n    if (currentChecked) {\r\n      const clearedArr = checked?.filter(item => item !== id);\r\n      setChecked(clearedArr);\r\n      setCurrentChecked(!currentChecked);\r\n    } else {\r\n      const extendedArr = [...checked, id];\r\n      setChecked(extendedArr);\r\n      setCurrentChecked(!currentChecked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box pad=\"xxsmall\" key={title} style={{ marginBottom: 3 }}>\r\n      <CheckBox label={title} checked={currentChecked} onChange={() => onCheckBoxChange(id)} />\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}