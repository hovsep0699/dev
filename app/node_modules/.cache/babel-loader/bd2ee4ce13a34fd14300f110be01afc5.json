{"ast":null,"code":"import React from'react';import{useRouteMatch}from'react-router-dom';import{Icons}from'@distate/components';import{HTMLItem,HTMLLink,HTMLButton,HTMLItemTitle,HTMLItemTools,HTMLItemToolsItem}from'./folders.style';export var FoldersItem=React.memo(function(_ref){var link=_ref.link,_ref$item=_ref.item,id=_ref$item.id,title=_ref$item.title,onEdit=_ref.onEdit,onClick=_ref.onClick,onRemove=_ref.onRemove,children=_ref.children;var path=link.replace(':id',id);var match=useRouteMatch({path:path});var handleOnClick=function handleOnClick(){if(onClick)onClick(id);};var handleOnEdit=function handleOnEdit(){if(onEdit)onEdit(id);};var handleOnRemove=function handleOnRemove(){if(onRemove)onRemove(id);};return/*#__PURE__*/React.createElement(HTMLItem,{$active:!!match},/*#__PURE__*/React.createElement(HTMLLink,{to:path,exact:true},/*#__PURE__*/React.createElement(HTMLItemTitle,{onClick:handleOnClick},title)),/*#__PURE__*/React.createElement(HTMLItemTools,null,/*#__PURE__*/React.createElement(HTMLItemToolsItem,null,/*#__PURE__*/React.createElement(HTMLButton,{solid:true,icon:/*#__PURE__*/React.createElement(Icons.IconPencil,null),onClick:handleOnEdit})),/*#__PURE__*/React.createElement(HTMLItemToolsItem,null,/*#__PURE__*/React.createElement(HTMLButton,{solid:true,icon:/*#__PURE__*/React.createElement(Icons.IconClose,null),onClick:handleOnRemove}))),children);});","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/components/folders/folders.item.tsx"],"names":["React","useRouteMatch","Icons","HTMLItem","HTMLLink","HTMLButton","HTMLItemTitle","HTMLItemTools","HTMLItemToolsItem","FoldersItem","memo","link","item","id","title","onEdit","onClick","onRemove","children","path","replace","match","handleOnClick","handleOnEdit","handleOnRemove"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,KAAT,KAAsB,qBAAtB,CAGA,OACEC,QADF,CAEEC,QAFF,CAGEC,UAHF,CAIEC,aAJF,CAKEC,aALF,CAMEC,iBANF,KAOO,iBAPP,CAkBA,MAAO,IAAMC,CAAAA,WAAmC,CAAGT,KAAK,CAACU,IAAN,CACjD,cAAwE,IAArEC,CAAAA,IAAqE,MAArEA,IAAqE,gBAA/DC,IAA+D,CAAvDC,EAAuD,WAAvDA,EAAuD,CAAnDC,KAAmD,WAAnDA,KAAmD,CAA1CC,MAA0C,MAA1CA,MAA0C,CAAlCC,OAAkC,MAAlCA,OAAkC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAfC,QAAe,MAAfA,QAAe,CACtE,GAAMC,CAAAA,IAAI,CAAGR,IAAI,CAACS,OAAL,CAAa,KAAb,CAAoBP,EAApB,CAAb,CACA,GAAMQ,CAAAA,KAAK,CAAGpB,aAAa,CAAC,CAAEkB,IAAI,CAAJA,IAAF,CAAD,CAA3B,CAEA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIN,OAAJ,CAAaA,OAAO,CAACH,EAAD,CAAP,CACd,CAFD,CAIA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIR,MAAJ,CAAYA,MAAM,CAACF,EAAD,CAAN,CACb,CAFD,CAIA,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAIP,QAAJ,CAAcA,QAAQ,CAACJ,EAAD,CAAR,CACf,CAFD,CAIA,mBACE,oBAAC,QAAD,EAAU,OAAO,CAAE,CAAC,CAACQ,KAArB,eACE,oBAAC,QAAD,EAAU,EAAE,CAAEF,IAAd,CAAoB,KAAK,KAAzB,eACE,oBAAC,aAAD,EAAe,OAAO,CAAEG,aAAxB,EAAwCR,KAAxC,CADF,CADF,cAIE,oBAAC,aAAD,mBACE,oBAAC,iBAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,KAAjB,CAAkB,IAAI,cAAE,oBAAC,KAAD,CAAO,UAAP,MAAxB,CAA8C,OAAO,CAAES,YAAvD,EADF,CADF,cAIE,oBAAC,iBAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,KAAjB,CAAkB,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,MAAxB,CAA6C,OAAO,CAAEC,cAAtD,EADF,CAJF,CAJF,CAYGN,QAZH,CADF,CAgBD,CAjCgD,CAA5C","sourcesContent":["import React from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Icons } from '@distate/components';\r\n\r\nimport { Folder } from '../../helpers/folder.typings';\r\nimport {\r\n  HTMLItem,\r\n  HTMLLink,\r\n  HTMLButton,\r\n  HTMLItemTitle,\r\n  HTMLItemTools,\r\n  HTMLItemToolsItem\r\n} from './folders.style';\r\n\r\nexport interface IFoldersItem {\r\n  link: string;\r\n  item: Folder;\r\n  onEdit?: (id: string) => void;\r\n  onClick?: (id: string) => void;\r\n  onRemove?: (id: string) => void;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const FoldersItem: React.FC<IFoldersItem> = React.memo(\r\n  ({ link, item: { id, title }, onEdit, onClick, onRemove, children }) => {\r\n    const path = link.replace(':id', id);\r\n    const match = useRouteMatch({ path });\r\n\r\n    const handleOnClick = () => {\r\n      if (onClick) onClick(id);\r\n    };\r\n\r\n    const handleOnEdit = () => {\r\n      if (onEdit) onEdit(id);\r\n    };\r\n\r\n    const handleOnRemove = () => {\r\n      if (onRemove) onRemove(id);\r\n    };\r\n\r\n    return (\r\n      <HTMLItem $active={!!match}>\r\n        <HTMLLink to={path} exact>\r\n          <HTMLItemTitle onClick={handleOnClick}>{title}</HTMLItemTitle>\r\n        </HTMLLink>\r\n        <HTMLItemTools>\r\n          <HTMLItemToolsItem>\r\n            <HTMLButton solid icon={<Icons.IconPencil />} onClick={handleOnEdit} />\r\n          </HTMLItemToolsItem>\r\n          <HTMLItemToolsItem>\r\n            <HTMLButton solid icon={<Icons.IconClose />} onClick={handleOnRemove} />\r\n          </HTMLItemToolsItem>\r\n        </HTMLItemTools>\r\n        {children}\r\n      </HTMLItem>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}