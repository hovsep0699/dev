{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport isEqual from 'react-fast-compare';\nimport { IconCheck, IconNa } from '@distate/components/dist/icons';\nimport { HTMLContainer, HTMLFooter, HTMLButtonTrue, HTMLButtonClear } from './form-schema.style';\nimport { SchemaDefinition } from './schema';\nimport { Provider } from './context';\n/**\r\n * Understanding JSON Schema\r\n * http://json-schema.org/understanding-json-schema/index.html\r\n */\n\nvar FormSchema = React.memo(function (_ref) {\n  var _ref$name = _ref.name,\n      name = _ref$name === void 0 ? 'root' : _ref$name,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,\n      _ref$formData = _ref.formData,\n      formData = _ref$formData === void 0 ? {} : _ref$formData,\n      _ref$renderTable = _ref.renderTable,\n      renderTable = _ref$renderTable === void 0 ? null : _ref$renderTable,\n      schema = _ref.schema,\n      children = _ref.children,\n      className = _ref.className,\n      errorSchema = _ref.errorSchema,\n      isCenterFooter = _ref.isCenterFooter,\n      onClear = _ref.onClear,\n      onSubmit = _ref.onSubmit,\n      onChange = _ref.onChange;\n\n  var _React$useState = React.useState(formData),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var _React$useState3 = React.useState(errorSchema),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setErrors = _React$useState4[1];\n\n  var handleOnBlur = function handleOnBlur() {};\n\n  var handleOnFocus = function handleOnFocus() {};\n\n  var handleOnChange = function handleOnChange(newFormData) {\n    setValues(newFormData);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newFormData);\n  };\n\n  var handleOnClear = function handleOnClear() {\n    setValues({});\n    if (onClear) onClear();\n  };\n\n  var handleOnSubmit = function handleOnSubmit() {\n    if (onSubmit) onSubmit(values);\n  };\n\n  var renderChildren = function renderChildren() {\n    if (typeof children === 'function') {\n      return children({\n        onClear: handleOnClear,\n        onSumbit: handleOnSubmit\n      });\n    }\n\n    return React.createElement(HTMLFooter, {\n      \"$center\": isCenterFooter\n    }, children);\n  };\n\n  var schemaError = errorSchema !== undefined ? errorSchema : errors;\n  return React.createElement(Provider, {\n    value: {\n      formName: name,\n      formData: values,\n      rootUiSchema: uiSchema,\n      rootSchema: schema,\n      rootErrors: schemaError,\n      setErrors: setErrors,\n      onBlur: handleOnBlur,\n      onFocus: handleOnFocus,\n      onChange: handleOnChange\n    }\n  }, React.createElement(HTMLContainer, null, React.createElement(SchemaDefinition, {\n    className: className,\n    schema: schema,\n    errorSchema: schemaError,\n    uiSchema: uiSchema,\n    formData: values\n  }), renderTable, typeof children !== 'undefined' ? renderChildren() : React.createElement(HTMLFooter, {\n    \"$center\": isCenterFooter\n  }, React.createElement(HTMLButtonTrue, {\n    onClick: handleOnSubmit\n  }, React.createElement(IconCheck, {\n    style: {\n      fill: 'currentcolor'\n    }\n  }), \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), React.createElement(HTMLButtonClear, {\n    onClick: handleOnClear\n  }, React.createElement(IconNa, null), \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"))));\n}, isEqual);\nexport { FormSchema };","map":{"version":3,"sources":["../../src/FormSchema/form-schema.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport isEqual from 'react-fast-compare';\r\nimport { IconCheck, IconNa } from '@distate/components/dist/icons';\r\nimport { HTMLContainer, HTMLFooter, HTMLButtonTrue, HTMLButtonClear } from './form-schema.style';\r\nimport { SchemaDefinition } from './schema';\r\nimport { Provider } from './context';\r\n/**\r\n * Understanding JSON Schema\r\n * http://json-schema.org/understanding-json-schema/index.html\r\n */\r\nconst FormSchema = React.memo(({ name = 'root', uiSchema = {}, formData = {}, renderTable = null, schema, children, className, errorSchema, isCenterFooter, onClear, onSubmit, onChange }) => {\r\n    const [values, setValues] = React.useState(formData);\r\n    const [errors, setErrors] = React.useState(errorSchema);\r\n    const handleOnBlur = () => { };\r\n    const handleOnFocus = () => { };\r\n    const handleOnChange = (newFormData) => {\r\n        setValues(newFormData);\r\n        onChange === null || onChange === void 0 ? void 0 : onChange(newFormData);\r\n    };\r\n    const handleOnClear = () => {\r\n        setValues({});\r\n        if (onClear)\r\n            onClear();\r\n    };\r\n    const handleOnSubmit = () => {\r\n        if (onSubmit)\r\n            onSubmit(values);\r\n    };\r\n    const renderChildren = () => {\r\n        if (typeof children === 'function') {\r\n            return children({\r\n                onClear: handleOnClear,\r\n                onSumbit: handleOnSubmit\r\n            });\r\n        }\r\n        return React.createElement(HTMLFooter, { \"$center\": isCenterFooter }, children);\r\n    };\r\n    const schemaError = errorSchema !== undefined ? errorSchema : errors;\r\n    return (React.createElement(Provider, { value: {\r\n            formName: name,\r\n            formData: values,\r\n            rootUiSchema: uiSchema,\r\n            rootSchema: schema,\r\n            rootErrors: schemaError,\r\n            setErrors,\r\n            onBlur: handleOnBlur,\r\n            onFocus: handleOnFocus,\r\n            onChange: handleOnChange\r\n        } },\r\n        React.createElement(HTMLContainer, null,\r\n            React.createElement(SchemaDefinition, { className: className, schema: schema, errorSchema: schemaError, uiSchema: uiSchema, formData: values }),\r\n            renderTable,\r\n            typeof children !== 'undefined' ? (renderChildren()) : (React.createElement(HTMLFooter, { \"$center\": isCenterFooter },\r\n                React.createElement(HTMLButtonTrue, { onClick: handleOnSubmit },\r\n                    React.createElement(IconCheck, { style: { fill: 'currentcolor' } }),\r\n                    \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"),\r\n                React.createElement(HTMLButtonClear, { onClick: handleOnClear },\r\n                    React.createElement(IconNa, null),\r\n                    \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"))))));\r\n}, isEqual);\r\nexport { FormSchema };\r\n//# sourceMappingURL=form-schema.js.map"]},"metadata":{},"sourceType":"module"}