{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Input}from'@distate/components';/** элемент списка документооборота в карточке тарифа */export var DocumentFlowItem=function DocumentFlowItem(props){var cost=props.cost,flowId=props.flowId,tariffId=props.tariffId,setEditedFlow=props.setEditedFlow;var _useState=useState((cost/100).toFixed(2)),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var onChange=function onChange(e){setInputValue(e.target.value);};var _onBlur=function onBlur(value){setEditedFlow(function(oldValue){var findValue=oldValue===null||oldValue===void 0?void 0:oldValue.find(function(item){return item.flowId===flowId;});if(findValue){findValue.cost=Number(value);return _toConsumableArray(oldValue);}setInputValue(function(oldInput){return Number(oldInput).toFixed(2);});return[].concat(_toConsumableArray(oldValue),[{tariffId:tariffId,flowId:flowId,cost:Number(value)*100}]);});};return/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:10}},/*#__PURE__*/React.createElement(Input,{value:inputValue,width:80,onChange:onChange,onBlur:function onBlur(e){return _onBlur(e.target.value);},type:\"number\"}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/tariff/components/tariff-card/DocumentFlowItem.tsx"],"names":["React","useState","Input","DocumentFlowItem","props","cost","flowId","tariffId","setEditedFlow","toFixed","inputValue","setInputValue","onChange","e","target","value","onBlur","oldValue","findValue","find","item","Number","oldInput","marginLeft"],"mappings":"8VAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA6C,OAA7C,CACA,OAASC,KAAT,KAAsB,qBAAtB,CAUA,wDACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAkB,IACxCC,CAAAA,IADwC,CACED,KADF,CACxCC,IADwC,CAClCC,MADkC,CACEF,KADF,CAClCE,MADkC,CAC1BC,QAD0B,CACEH,KADF,CAC1BG,QAD0B,CAChBC,aADgB,CACEJ,KADF,CAChBI,aADgB,eAGZP,QAAQ,CAAC,CAACI,IAAI,CAAG,GAAR,EAAaI,OAAb,CAAqB,CAArB,CAAD,CAHI,wCAGzCC,UAHyC,eAG7BC,aAH6B,eAKhD,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAsC,CACrDF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CACD,CAFD,CAIA,GAAMC,CAAAA,OAAM,CAAG,QAATA,CAAAA,MAAS,CAACD,KAAD,CAAmB,CAChCP,aAAa,CAAC,SAACS,QAAD,CAAgC,CAC5C,GAAMC,CAAAA,SAAS,CAAGD,QAAH,SAAGA,QAAH,iBAAGA,QAAQ,CAAEE,IAAV,CAAe,SAACC,IAAD,QAA2BA,CAAAA,IAAI,CAACd,MAAL,GAAgBA,MAA3C,EAAf,CAAlB,CACA,GAAIY,SAAJ,CAAe,CACbA,SAAS,CAACb,IAAV,CAAiBgB,MAAM,CAACN,KAAD,CAAvB,CACA,0BAAWE,QAAX,EACD,CACDN,aAAa,CAAC,SAAAW,QAAQ,QAAID,CAAAA,MAAM,CAACC,QAAD,CAAN,CAAiBb,OAAjB,CAAyB,CAAzB,CAAJ,EAAT,CAAb,CAEA,mCAAWQ,QAAX,GAAqB,CAACV,QAAQ,CAARA,QAAD,CAAWD,MAAM,CAANA,MAAX,CAAmBD,IAAI,CAAEgB,MAAM,CAACN,KAAD,CAAN,CAAgB,GAAzC,CAArB,GACD,CATY,CAAb,CAUD,CAXD,CAaA,mBACE,2BAAK,KAAK,CAAE,CAAEQ,UAAU,CAAE,EAAd,CAAZ,eACE,oBAAC,KAAD,EAAO,KAAK,CAAEb,UAAd,CAA0B,KAAK,CAAE,EAAjC,CAAqC,QAAQ,CAAEE,QAA/C,CAAyD,MAAM,CAAE,gBAACC,CAAD,QAAOG,CAAAA,OAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,EAAjE,CAAgG,IAAI,CAAC,QAArG,EADF,CADF,CAKD,CA3BM","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport { Input } from '@distate/components';\r\nimport type { EditedFlowItem } from './DocumentFlow';\r\n\r\ntype Props = {\r\n  cost: number;\r\n  flowId: number;\r\n  tariffId: number;\r\n  setEditedFlow: Function;\r\n};\r\n\r\n/** элемент списка документооборота в карточке тарифа */\r\nexport const DocumentFlowItem = (props: Props) => {\r\n  const { cost, flowId, tariffId, setEditedFlow } = props;\r\n\r\n  const [inputValue, setInputValue] = useState((cost / 100).toFixed(2));\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const onBlur = (value: string) => {\r\n    setEditedFlow((oldValue: EditedFlowItem[]) => {\r\n      const findValue = oldValue?.find((item: EditedFlowItem) => (item.flowId === flowId))\r\n      if (findValue) {\r\n        findValue.cost = Number(value)\r\n        return [...oldValue]\r\n      }\r\n      setInputValue(oldInput => Number(oldInput).toFixed(2))\r\n\r\n      return [...oldValue, {tariffId, flowId, cost: Number(value) * 100}]\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: 10 }}>\r\n      <Input value={inputValue} width={80} onChange={onChange} onBlur={(e) => onBlur(e.target.value)} type='number' />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}