{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport RegisterHandlerBase from './RegisterHandlerBase';\nimport RegisterRequest from '../RegisterRequest';\n\nvar ValidateRegisterHandler = /*#__PURE__*/function (_RegisterHandlerBase) {\n  _inherits(ValidateRegisterHandler, _RegisterHandlerBase);\n\n  var _super = _createSuper(ValidateRegisterHandler);\n\n  function ValidateRegisterHandler() {\n    _classCallCheck(this, ValidateRegisterHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ValidateRegisterHandler, [{\n    key: \"register\",\n    value: function register(request) {\n      _get(_getPrototypeOf(ValidateRegisterHandler.prototype), \"register\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var requiredFields = ['ogrn', 'email', 'position', 'surname', 'name', 'password', 'captcha'];\n        var isInvalid = requiredFields.some(function (field) {\n          return !request[field];\n        });\n\n        if (isInvalid) {\n          var errorRequest = RegisterRequest.clone(request);\n          var error = new Error('Нельзя отправлять запрос на регистрацию, т.к. нет необходимых полей');\n          var msgForDeveloper = 'Валидация на стороне клиента прошла(хотя не должна была).';\n          errorRequest.error = _get(_getPrototypeOf(ValidateRegisterHandler.prototype), \"createRegisterError\", this).call(this, msgForDeveloper, error);\n          return this.doNextHandler(errorRequest);\n        }\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(ValidateRegisterHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return !request.certificate;\n    }\n  }]);\n\n  return ValidateRegisterHandler;\n}(RegisterHandlerBase);\n\nexport default ValidateRegisterHandler;","map":{"version":3,"sources":["../../../../src/application/register/handlers/ValidateRegisterHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,mBAAP,MAAgC,uBAAhC;AACA,OAAO,eAAP,MAA4B,oBAA5B;;IAEM,uB;;;;;;;;;;;;;6BACK,O,EAAO;AACd,4FAAe,OAAf;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,cAAc,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,SAA9B,EAAyC,MAAzC,EAAiD,UAAjD,EAA6D,SAA7D,CAAvB;AAEA,YAAM,SAAS,GAAG,cAAc,CAAC,IAAf,CAAoB,UAAA,KAAK;AAAA,iBAAI,CAAC,OAAO,CAAC,KAAD,CAAZ;AAAA,SAAzB,CAAlB;;AACA,YAAI,SAAJ,EAAe;AACb,cAAM,YAAY,GAAG,eAAe,CAAC,KAAhB,CAAsB,OAAtB,CAArB;AACA,cAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,qEAAV,CAAd;AACA,cAAM,eAAe,GAAG,2DAAxB;AACA,UAAA,YAAY,CAAC,KAAb,oGAA+C,eAA/C,EAAgE,KAAhE;AACA,iBAAO,KAAK,aAAL,CAAmB,YAAnB,CAAP;AACD;AACF;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,6FAAgB,OAAhB;;AACA,aAAO,CAAC,OAAO,CAAC,WAAhB;AACD;;;;EArBmC,mB;;AAwBtC,eAAe,uBAAf","sourceRoot":"","sourcesContent":["import RegisterHandlerBase from './RegisterHandlerBase';\r\nimport RegisterRequest from '../RegisterRequest';\r\nclass ValidateRegisterHandler extends RegisterHandlerBase {\r\n    register(request) {\r\n        super.register(request);\r\n        if (this.canHandle(request)) {\r\n            const requiredFields = ['ogrn', 'email', 'position', 'surname', 'name', 'password', 'captcha'];\r\n            const isInvalid = requiredFields.some(field => !request[field]);\r\n            if (isInvalid) {\r\n                const errorRequest = RegisterRequest.clone(request);\r\n                const error = new Error('Нельзя отправлять запрос на регистрацию, т.к. нет необходимых полей');\r\n                const msgForDeveloper = 'Валидация на стороне клиента прошла(хотя не должна была).';\r\n                errorRequest.error = super.createRegisterError(msgForDeveloper, error);\r\n                return this.doNextHandler(errorRequest);\r\n            }\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        return !request.certificate;\r\n    }\r\n}\r\nexport default ValidateRegisterHandler;\r\n//# sourceMappingURL=ValidateRegisterHandler.js.map"]},"metadata":{},"sourceType":"module"}