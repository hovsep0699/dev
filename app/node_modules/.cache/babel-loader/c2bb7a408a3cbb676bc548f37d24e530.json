{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useDispatch,useSelector}from'react-redux';import SignService from'@distate/core/dist/application/sign/SignService';import DocumentsService from'@distate/core/dist/application/documents/common/DocumentsService';import{actionStartProcess,actionSignCurrent,actionInit,actionClear}from'./store/actions';import{selectStart,selectList,selectHasAutosigning,selectTotal,selectCurrent}from'./store/selects';import{Loading,LoadingPage}from'./components';export var SingInit=function SingInit(){var dispatch=useDispatch();var signList=useSelector(selectList)||[];var signTotal=useSelector(selectTotal);var signStart=useSelector(selectStart);var signCurrent=useSelector(selectCurrent);var signSelectHasAutosigning=useSelector(selectHasAutosigning);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),docTitle=_React$useState2[0],setDocTitle=_React$useState2[1];var visible=!!signList.length;React.useEffect(function(){var handleSignProcessIteration=function handleSignProcessIteration(_ref){var counter=_ref.counter,_ref$documentToSign=_ref.documentToSign,flow_group=_ref$documentToSign.flow_group,_ref$documentToSign$t=_ref$documentToSign.type_title,type_title=_ref$documentToSign$t===void 0?'':_ref$documentToSign$t;var flowTypeTitle=DocumentsService.getTitle(flow_group);var docTypeTitle=type_title?\" - \".concat(type_title):type_title;setDocTitle(\"\".concat(flowTypeTitle).concat(docTypeTitle));dispatch(actionSignCurrent({signCurrent:counter}));};dispatch(actionInit());SignService.events.subscribe('startSignProcessIteration',handleSignProcessIteration);return function(){dispatch(actionClear());SignService.events.unsubscribe('startSignProcessIteration',handleSignProcessIteration);};},[dispatch]);React.useEffect(function(){if(signSelectHasAutosigning===true&&signList.length){dispatch(actionStartProcess());}},[dispatch,signList,signSelectHasAutosigning]);var handleOnClick=function handleOnClick(){if(!signStart){dispatch(actionStartProcess());return;}// @ts-ignore\nSignService.events.notify('abortSigning');};if(typeof signSelectHasAutosigning===undefined||signSelectHasAutosigning===null){return null;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LoadingPage,{title:docTitle,total:signTotal,currentCount:signCurrent,loading:signStart,visible:signSelectHasAutosigning&&visible}),/*#__PURE__*/React.createElement(Loading,{title:docTitle,total:signTotal,currentCount:signCurrent,loading:signStart,visible:!signSelectHasAutosigning&&visible,onClick:handleOnClick}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/sign/sign.init.tsx"],"names":["React","useDispatch","useSelector","SignService","DocumentsService","actionStartProcess","actionSignCurrent","actionInit","actionClear","selectStart","selectList","selectHasAutosigning","selectTotal","selectCurrent","Loading","LoadingPage","SingInit","dispatch","signList","signTotal","signStart","signCurrent","signSelectHasAutosigning","useState","docTitle","setDocTitle","visible","length","useEffect","handleSignProcessIteration","counter","documentToSign","flow_group","type_title","flowTypeTitle","getTitle","docTypeTitle","events","subscribe","unsubscribe","handleOnClick","notify","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SignService from '@distate/core/dist/application/sign/SignService';\r\nimport DocumentsService from '@distate/core/dist/application/documents/common/DocumentsService';\r\n\r\nimport { actionStartProcess, actionSignCurrent, actionInit, actionClear } from './store/actions';\r\nimport {\r\n  selectStart,\r\n  selectList,\r\n  selectHasAutosigning,\r\n  selectTotal,\r\n  selectCurrent\r\n} from './store/selects';\r\nimport { Loading, LoadingPage } from './components';\r\n\r\nexport interface ISignInit {}\r\n\r\nexport const SingInit: React.FC<ISignInit> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const signList = useSelector(selectList) || [];\r\n  const signTotal = useSelector(selectTotal);\r\n  const signStart = useSelector(selectStart);\r\n  const signCurrent = useSelector(selectCurrent);\r\n  const signSelectHasAutosigning = useSelector(selectHasAutosigning);\r\n\r\n  const [docTitle, setDocTitle] = React.useState('');\r\n\r\n  const visible = !!signList.length;\r\n\r\n  React.useEffect(() => {\r\n    const handleSignProcessIteration = ({\r\n      counter,\r\n      documentToSign: { flow_group, type_title = '' }\r\n    }: any) => {\r\n      const flowTypeTitle = DocumentsService.getTitle(flow_group);\r\n      const docTypeTitle = type_title ? ` - ${type_title}` : type_title;\r\n\r\n      setDocTitle(`${flowTypeTitle}${docTypeTitle}`);\r\n      dispatch(actionSignCurrent({ signCurrent: counter }));\r\n    };\r\n\r\n    dispatch(actionInit());\r\n    SignService.events.subscribe('startSignProcessIteration', handleSignProcessIteration);\r\n\r\n    return () => {\r\n      dispatch(actionClear());\r\n      SignService.events.unsubscribe('startSignProcessIteration', handleSignProcessIteration);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (signSelectHasAutosigning === true && signList.length) {\r\n      dispatch(actionStartProcess());\r\n    }\r\n  }, [dispatch, signList, signSelectHasAutosigning]);\r\n\r\n  const handleOnClick = () => {\r\n    if (!signStart) {\r\n      dispatch(actionStartProcess());\r\n      return;\r\n    }\r\n\r\n    // @ts-ignore\r\n    SignService.events.notify('abortSigning');\r\n  };\r\n\r\n  if (typeof signSelectHasAutosigning === undefined || signSelectHasAutosigning === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LoadingPage\r\n        title={docTitle}\r\n        total={signTotal}\r\n        currentCount={signCurrent}\r\n        loading={signStart}\r\n        visible={signSelectHasAutosigning && visible}\r\n      />\r\n      <Loading\r\n        title={docTitle}\r\n        total={signTotal}\r\n        currentCount={signCurrent}\r\n        loading={signStart}\r\n        visible={!signSelectHasAutosigning && visible}\r\n        onClick={handleOnClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}