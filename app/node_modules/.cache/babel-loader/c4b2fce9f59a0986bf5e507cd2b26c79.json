{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport get from 'lodash.get';\nimport templates from '../template';\nimport { Context } from '../context';\nimport { SchemaDefinition } from './index';\nimport { HTMLObject, HTMLObjectTitle } from '../styled/schema.styled';\nimport { dependenciesProperties, orderProperties, groupProperties } from '../utils';\n\nvar SchemaObject = function SchemaObject(_ref) {\n  var schema = _ref.schema,\n      className = _ref.className,\n      schemaName = _ref.schemaName,\n      schemaPath = _ref.schemaPath,\n      errorSchema = _ref.errorSchema,\n      _ref$formData = _ref.formData,\n      formData = _ref$formData === void 0 ? {} : _ref$formData,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema;\n\n  if (!schema.hasOwnProperty('properties')) {\n    throw new Error(\"Could not find Schema.properites.\");\n  }\n\n  var _React$useContext = React.useContext(Context),\n      rootUiSchema = _React$useContext.rootUiSchema;\n\n  var requiredFields = schema.required || [];\n  var align = uiSchema['ui:align'];\n  var group = uiSchema['ui:group'];\n  var orders = rootUiSchema['ui:order'];\n  var labels = uiSchema['ui:label'] || rootUiSchema['ui:label'] || {};\n  var title = uiSchema['ui:title'];\n  var orderedProperties;\n  var groupedProperties;\n\n  try {\n    var properties = dependenciesProperties(schema, formData);\n    orderedProperties = orderProperties(properties, orders);\n    orderedProperties = orderedProperties.filter(function (prop) {\n      return schema.properties[prop];\n    });\n    var grouped = groupProperties(orderedProperties, group);\n    orderedProperties = grouped.properties;\n    groupedProperties = grouped.group;\n  } catch (err) {\n    return React.createElement(\"div\", null, React.createElement(\"p\", {\n      className: \"config-error\",\n      style: {\n        color: 'red'\n      }\n    }, \"Invalid \", schemaName, \" object field configuration:\", React.createElement(\"em\", null, err.message), \".\"));\n  } // ---------------------------------------------\n  // RENDER Template\n\n\n  var renderTemplate = function renderTemplate(name) {\n    var contents = [name];\n    var templateName = 'base';\n    var isGroup = false;\n\n    if (groupedProperties.hasOwnProperty(name)) {\n      templateName = groupedProperties[name].type;\n      contents = [name].concat(_toConsumableArray(groupedProperties[name].fields));\n      isGroup = true;\n    }\n\n    if (!templates.hasOwnProperty(templateName)) {\n      throw new Error(\"Could not find Template \".concat(templateName, \".\"));\n    }\n\n    var templateLabel = labels[name];\n    var Template = templates[templateName];\n    var templateTitle = get(uiSchema, [name, 'ui:title']) || get(schema, 'title');\n    var isRequired = requiredFields.indexOf(name) !== -1;\n    var isNextObject = get(schema, ['properties', name, 'type']) === 'object';\n    var objectUiScheam = get(uiSchema, name);\n    return React.createElement(Template, {\n      key: name,\n      align: align,\n      title: templateTitle,\n      label: templateLabel,\n      uiSchema: isNextObject ? objectUiScheam : {},\n      required: isRequired,\n      groupProps: isGroup && groupedProperties[name],\n      content: contents.map(function (name) {\n        if (!schema.properties.hasOwnProperty(name)) {\n          throw new Error(\"Could not find Schema.properites \".concat(name, \".\"));\n        }\n\n        var currentSchema = schema.properties[name];\n        var currentUiSchema = get(uiSchema, name, {});\n        var isRequired = requiredFields.indexOf(name) !== -1;\n        return React.createElement(SchemaDefinition, {\n          key: name,\n          name: name,\n          required: !templateLabel && isRequired,\n          errorSchema: errorSchema,\n          schemaPath: schemaPath,\n          schema: currentSchema,\n          uiSchema: currentUiSchema,\n          formData: formData\n        });\n      })\n    });\n  };\n\n  return React.createElement(HTMLObject, {\n    className: className\n  }, title && React.createElement(HTMLObjectTitle, null, title), orderedProperties.map(renderTemplate));\n};\n\nexport { SchemaObject };","map":{"version":3,"sources":["../../../src/FormSchema/schema/schema.object.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport get from 'lodash.get';\r\nimport templates from '../template';\r\nimport { Context } from '../context';\r\nimport { SchemaDefinition } from './index';\r\nimport { HTMLObject, HTMLObjectTitle } from '../styled/schema.styled';\r\nimport { dependenciesProperties, orderProperties, groupProperties } from '../utils';\r\nconst SchemaObject = ({ schema, className, schemaName, schemaPath, errorSchema, formData = {}, uiSchema = {} }) => {\r\n    if (!schema.hasOwnProperty('properties')) {\r\n        throw new Error(`Could not find Schema.properites.`);\r\n    }\r\n    const { rootUiSchema } = React.useContext(Context);\r\n    const requiredFields = schema.required || [];\r\n    const align = uiSchema['ui:align'];\r\n    const group = uiSchema['ui:group'];\r\n    const orders = rootUiSchema['ui:order'];\r\n    const labels = uiSchema['ui:label'] || rootUiSchema['ui:label'] || {};\r\n    const title = uiSchema['ui:title'];\r\n    let orderedProperties;\r\n    let groupedProperties;\r\n    try {\r\n        const properties = dependenciesProperties(schema, formData);\r\n        orderedProperties = orderProperties(properties, orders);\r\n        orderedProperties = orderedProperties.filter(prop => schema.properties[prop]);\r\n        const grouped = groupProperties(orderedProperties, group);\r\n        orderedProperties = grouped.properties;\r\n        groupedProperties = grouped.group;\r\n    }\r\n    catch (err) {\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"p\", { className: \"config-error\", style: { color: 'red' } },\r\n                \"Invalid \",\r\n                schemaName,\r\n                \" object field configuration:\",\r\n                React.createElement(\"em\", null, err.message),\r\n                \".\")));\r\n    }\r\n    // ---------------------------------------------\r\n    // RENDER Template\r\n    const renderTemplate = (name) => {\r\n        let contents = [name];\r\n        let templateName = 'base';\r\n        let isGroup = false;\r\n        if (groupedProperties.hasOwnProperty(name)) {\r\n            templateName = groupedProperties[name].type;\r\n            contents = [name, ...groupedProperties[name].fields];\r\n            isGroup = true;\r\n        }\r\n        if (!templates.hasOwnProperty(templateName)) {\r\n            throw new Error(`Could not find Template ${templateName}.`);\r\n        }\r\n        const templateLabel = labels[name];\r\n        const Template = templates[templateName];\r\n        const templateTitle = get(uiSchema, [name, 'ui:title']) || get(schema, 'title');\r\n        const isRequired = requiredFields.indexOf(name) !== -1;\r\n        const isNextObject = get(schema, ['properties', name, 'type']) === 'object';\r\n        const objectUiScheam = get(uiSchema, name);\r\n        return (React.createElement(Template, { key: name, align: align, title: templateTitle, label: templateLabel, uiSchema: isNextObject ? objectUiScheam : {}, required: isRequired, groupProps: isGroup && groupedProperties[name], content: contents.map(name => {\r\n                if (!schema.properties.hasOwnProperty(name)) {\r\n                    throw new Error(`Could not find Schema.properites ${name}.`);\r\n                }\r\n                const currentSchema = schema.properties[name];\r\n                const currentUiSchema = get(uiSchema, name, {});\r\n                const isRequired = requiredFields.indexOf(name) !== -1;\r\n                return (React.createElement(SchemaDefinition, { key: name, name: name, required: !templateLabel && isRequired, errorSchema: errorSchema, schemaPath: schemaPath, schema: currentSchema, uiSchema: currentUiSchema, formData: formData }));\r\n            }) }));\r\n    };\r\n    return (React.createElement(HTMLObject, { className: className },\r\n        title && React.createElement(HTMLObjectTitle, null, title),\r\n        orderedProperties.map(renderTemplate)));\r\n};\r\nexport { SchemaObject };\r\n//# sourceMappingURL=schema.object.js.map"]},"metadata":{},"sourceType":"module"}