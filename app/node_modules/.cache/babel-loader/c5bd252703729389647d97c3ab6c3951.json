{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{logos}from'../../../../helpers/path';import{Button,ButtonKinds,Input,Select}from'@distate/components';import{getPeriodStart,Period}from'../../../../helpers/dateUtils';import{ConnectorId,ConnectorName,ConnectorStatusName,ConnectorStatus}from'../../helpers/company.typings';import{createConnectorAccount,clearErrors,getConnector,updateConnector,startConnector,stopConnector}from'../../store/actions';import{selectConnectorLoginErrors,selectConnectorPasswordErrors,selectConnectorStatus,selectConnectorLogin,selectConnectorBoxID,selectConnectorFnsUid,selectConnectorKpp,selectConnectorId,selectConnectorErrorMessage,selectConnectorPosition}from'../../store/selectors';/** Карточка коннетора */export var Connector=function Connector(props){var id=props.match.params.id;var src=logos[id];var dispatch=useDispatch();var loginErrors=useSelector(selectConnectorLoginErrors);var passwordErrors=useSelector(selectConnectorPasswordErrors);var connectorStatus=useSelector(selectConnectorStatus);var connectorLogin=useSelector(selectConnectorLogin);var connectorPosition=useSelector(selectConnectorPosition);var connectorBoxID=useSelector(selectConnectorBoxID);var connectorFnsUid=useSelector(selectConnectorFnsUid);var connectorKpp=useSelector(selectConnectorKpp);var connectorId=useSelector(selectConnectorId);var errorMessage=useSelector(selectConnectorErrorMessage);var _useState=useState(connectorBoxID),_useState2=_slicedToArray(_useState,2),boxId=_useState2[0],setBoxId=_useState2[1];var _useState3=useState(connectorLogin),_useState4=_slicedToArray(_useState3,2),login=_useState4[0],setLogin=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),importFrom=_useState8[0],setImportFrom=_useState8[1];var _useState9=useState(connectorKpp),_useState10=_slicedToArray(_useState9,2),kpp=_useState10[0],setKpp=_useState10[1];var _useState11=useState(connectorFnsUid),_useState12=_slicedToArray(_useState11,2),fnsUid=_useState12[0],setFnsUid=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),position=_useState14[0],setPosition=_useState14[1];useEffect(function(){/** получение данных коннектора */dispatch(getConnector(id));/** очистка старых ошибок при первом входе */dispatch(clearErrors());setPosition(connectorPosition);},[dispatch,id,connectorPosition]);/** опции селекта \"Импортировать документы\" */var IMPORT_DOCUMENTS_SELECT=[{value:Period.week,label:'За текущую неделю'},{value:Period.month,label:'За текущий месяц'},{value:Period.quarter,label:'За текущий квартал'}];var onSendForm=function onSendForm(){var formData={boxId:boxId,login:login,password:password,importFrom:getPeriodStart(importFrom===null||importFrom===void 0?void 0:importFrom.value),operatorCode:id,position:position,fnsUid:fnsUid,kpp:kpp};dispatch(createConnectorAccount(formData));};var onUpdate=function onUpdate(){dispatch(updateConnector({id:connectorId,data:{boxId:boxId,login:login,password:password,fnsUid:fnsUid,kpp:kpp,position:position}}));};var onStart=function onStart(){dispatch(startConnector(connectorId));};var onStop=function onStop(){dispatch(stopConnector(connectorId));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{className:\"connector-icon-wrapper\"},/*#__PURE__*/React.createElement(\"img\",{src:src,alt:id})),/*#__PURE__*/React.createElement(\"div\",{className:\"connector-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"connector-title\"},/*#__PURE__*/React.createElement(\"span\",{className:\"connector-title-span\"},ConnectorName[id]),connectorStatus&&/*#__PURE__*/React.createElement(\"div\",{className:\"connector-description\"},ConnectorStatusName[connectorStatus])))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center\"},/*#__PURE__*/React.createElement(\"div\",{style:{color:'red'}},errorMessage&&errorMessage),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041B\\u043E\\u0433\\u0438\\u043D\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:login,onChange:function onChange(e){return setLogin(e.target.value);},placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\",error:!!loginErrors,errors:loginErrors}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:password,type:\"password\",onChange:function onChange(e){return setPassword(e.target.value);},placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",error:!!passwordErrors,errors:passwordErrors}))),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0414\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:position,onChange:function onChange(e){return setPosition(e.target.value);},placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"}))),id===ConnectorId.Kontur&&/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"BoxID\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:boxId,onChange:function onChange(e){return setBoxId(e.target.value);},placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 BoxID \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430 \\u0414\\u0438\\u0430\\u0434\\u043E\\u043A\\u0430\"}))),id===ConnectorId.Korus&&/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"fnsUid\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:fnsUid,onChange:function onChange(e){return setFnsUid(e.target.value);},placeholder:\"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u043E\\u0431\\u043E\\u0440\\u043E\\u0442\\u0430 \\u0424\\u041D\\u0421\"}))),id===ConnectorId.Tenzor&&/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u041A\\u041F\\u041F\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Input,{width:300,value:kpp,onChange:function onChange(e){return setKpp(e.target.value);},placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u041A\\u041F\\u041F \\u0421\\u0411\\u0418\\u0421\"}))),connectorStatus===null&&/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_name\"},\"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"),/*#__PURE__*/React.createElement(\"div\",{className:\"two-columns-center_value\"},/*#__PURE__*/React.createElement(Select,{width:300,value:importFrom,options:IMPORT_DOCUMENTS_SELECT,onChange:function onChange(e){return setImportFrom(e);},placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\"})))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),(connectorStatus===null||connectorStatus===ConnectorStatus.created)&&/*#__PURE__*/React.createElement(Button,{className:\"connector-green-button\",onClick:onSendForm},\"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\"),connectorStatus===ConnectorStatus.stopped&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{onClick:onStart,className:\"connector-green-button\"},\"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"),/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Secondary,onClick:onUpdate},\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")),connectorStatus===ConnectorStatus.connector&&/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Danger,onClick:onStop},\"\\u041F\\u0440\\u0438\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/connectors/Connector.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","logos","Button","ButtonKinds","Input","Select","getPeriodStart","Period","ConnectorId","ConnectorName","ConnectorStatusName","ConnectorStatus","createConnectorAccount","clearErrors","getConnector","updateConnector","startConnector","stopConnector","selectConnectorLoginErrors","selectConnectorPasswordErrors","selectConnectorStatus","selectConnectorLogin","selectConnectorBoxID","selectConnectorFnsUid","selectConnectorKpp","selectConnectorId","selectConnectorErrorMessage","selectConnectorPosition","Connector","props","id","match","params","src","dispatch","loginErrors","passwordErrors","connectorStatus","connectorLogin","connectorPosition","connectorBoxID","connectorFnsUid","connectorKpp","connectorId","errorMessage","boxId","setBoxId","login","setLogin","password","setPassword","importFrom","setImportFrom","kpp","setKpp","fnsUid","setFnsUid","position","setPosition","IMPORT_DOCUMENTS_SELECT","value","week","label","month","quarter","onSendForm","formData","operatorCode","onUpdate","data","onStart","onStop","display","color","e","target","Kontur","Korus","Tenzor","created","stopped","Secondary","connector","Danger"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logos } from '../../../../helpers/path';\r\nimport { Button, ButtonKinds, Input, Select } from '@distate/components';\r\nimport { getPeriodStart, Period } from '../../../../helpers/dateUtils';\r\nimport {\r\n  ConnectorId,\r\n  ConnectorName,\r\n  ConnectorStatusName,\r\n  ConnectorStatus\r\n} from '../../helpers/company.typings';\r\nimport {\r\n  createConnectorAccount,\r\n  clearErrors,\r\n  getConnector,\r\n  updateConnector,\r\n  startConnector,\r\n  stopConnector\r\n} from '../../store/actions';\r\nimport {\r\n  selectConnectorLoginErrors,\r\n  selectConnectorPasswordErrors,\r\n  selectConnectorStatus,\r\n  selectConnectorLogin,\r\n  selectConnectorBoxID,\r\n  selectConnectorFnsUid,\r\n  selectConnectorKpp,\r\n  selectConnectorId,\r\n  selectConnectorErrorMessage,\r\n  selectConnectorPosition\r\n} from '../../store/selectors';\r\n\r\n/** Карточка коннетора */\r\nexport const Connector = (props: any) => {\r\n  const { id } = props.match.params;\r\n  const src = logos[id as never];\r\n  const dispatch = useDispatch();\r\n  const loginErrors = useSelector(selectConnectorLoginErrors);\r\n  const passwordErrors = useSelector(selectConnectorPasswordErrors);\r\n\r\n  const connectorStatus = useSelector(selectConnectorStatus);\r\n  const connectorLogin = useSelector(selectConnectorLogin);\r\n  const connectorPosition = useSelector(selectConnectorPosition);\r\n  const connectorBoxID = useSelector(selectConnectorBoxID);\r\n  const connectorFnsUid = useSelector(selectConnectorFnsUid);\r\n  const connectorKpp = useSelector(selectConnectorKpp);\r\n  const connectorId = useSelector(selectConnectorId);\r\n  const errorMessage = useSelector(selectConnectorErrorMessage);\r\n\r\n  const [boxId, setBoxId] = useState<string | undefined>(connectorBoxID);\r\n  const [login, setLogin] = useState<string | undefined>(connectorLogin);\r\n  const [password, setPassword] = useState<string>();\r\n  const [importFrom, setImportFrom] = useState<HTMLSelectElement>();\r\n  const [kpp, setKpp] = useState<string | undefined>(connectorKpp);\r\n  const [fnsUid, setFnsUid] = useState<string | undefined>(connectorFnsUid);\r\n  const [position, setPosition] = useState<string>();\r\n\r\n  useEffect(() => {\r\n    /** получение данных коннектора */\r\n    dispatch(getConnector(id));\r\n\r\n    /** очистка старых ошибок при первом входе */\r\n    dispatch(clearErrors());\r\n    setPosition(connectorPosition);\r\n  }, [dispatch, id, connectorPosition]);\r\n\r\n  /** опции селекта \"Импортировать документы\" */\r\n  const IMPORT_DOCUMENTS_SELECT = [\r\n    {\r\n      value: Period.week,\r\n      label: 'За текущую неделю'\r\n    },\r\n    {\r\n      value: Period.month,\r\n      label: 'За текущий месяц'\r\n    },\r\n    {\r\n      value: Period.quarter,\r\n      label: 'За текущий квартал'\r\n    }\r\n  ];\r\n\r\n  const onSendForm = () => {\r\n    const formData = {\r\n      boxId,\r\n      login,\r\n      password,\r\n      importFrom: getPeriodStart(importFrom?.value as never),\r\n      operatorCode: id,\r\n      position,\r\n      fnsUid,\r\n      kpp\r\n    };\r\n    dispatch(createConnectorAccount(formData));\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    dispatch(\r\n      updateConnector({\r\n        id: connectorId,\r\n        data: {\r\n          boxId,\r\n          login,\r\n          password,\r\n          fnsUid,\r\n          kpp,\r\n          position\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const onStart = () => {\r\n    dispatch(startConnector(connectorId));\r\n  };\r\n\r\n  const onStop = () => {\r\n    dispatch(stopConnector(connectorId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <div className=\"connector-icon-wrapper\">\r\n          <img src={src} alt={id} />\r\n        </div>\r\n        <div className=\"connector-content\">\r\n          <div className=\"connector-title\">\r\n            <span className=\"connector-title-span\">{ConnectorName[id as never]}</span>\r\n            {connectorStatus && (\r\n              <div className=\"connector-description\">{ConnectorStatusName[connectorStatus]}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"two-columns-center\">\r\n        <div style={{ color: 'red' }}>{errorMessage && errorMessage}</div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Логин</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={300}\r\n              value={login}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setLogin(e.target.value)}\r\n              placeholder=\"Введите логин\"\r\n              error={!!loginErrors}\r\n              errors={loginErrors}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Пароль</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={300}\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\r\n              placeholder=\"Введите пароль\"\r\n              error={!!passwordErrors}\r\n              errors={passwordErrors}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"two-columns-center_row\">\r\n          <div className=\"two-columns-center_name\">Должность</div>\r\n          <div className=\"two-columns-center_value\">\r\n            <Input\r\n              width={300}\r\n              value={position}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPosition(e.target.value)}\r\n              placeholder=\"Введите должность\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {id === ConnectorId.Kontur && (\r\n          <div className=\"two-columns-center_row\">\r\n            <div className=\"two-columns-center_name\">BoxID</div>\r\n            <div className=\"two-columns-center_value\">\r\n              <Input\r\n                width={300}\r\n                value={boxId}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setBoxId(e.target.value)}\r\n                placeholder=\"Введите BoxID из аккаунта Диадока\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {id === ConnectorId.Korus && (\r\n          <div className=\"two-columns-center_row\">\r\n            <div className=\"two-columns-center_name\">fnsUid</div>\r\n            <div className=\"two-columns-center_value\">\r\n              <Input\r\n                width={300}\r\n                value={fnsUid}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFnsUid(e.target.value)}\r\n                placeholder=\"Идентификатор участника документооборота ФНС\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {id === ConnectorId.Tenzor && (\r\n          <div className=\"two-columns-center_row\">\r\n            <div className=\"two-columns-center_name\">КПП</div>\r\n            <div className=\"two-columns-center_value\">\r\n              <Input\r\n                width={300}\r\n                value={kpp}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setKpp(e.target.value)}\r\n                placeholder=\"Введите КПП СБИС\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {connectorStatus === null && (\r\n          <div className=\"two-columns-center_row\">\r\n            <div className=\"two-columns-center_name\">Импортировать документы</div>\r\n            <div className=\"two-columns-center_value\">\r\n              <Select\r\n                width={300}\r\n                value={importFrom}\r\n                options={IMPORT_DOCUMENTS_SELECT}\r\n                onChange={(e: HTMLSelectElement) => setImportFrom(e)}\r\n                placeholder=\"Выберите период\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {(connectorStatus === null || connectorStatus === ConnectorStatus.created) && (\r\n        <Button className=\"connector-green-button\" onClick={onSendForm}>\r\n          Подключить\r\n        </Button>\r\n      )}\r\n      {connectorStatus === ConnectorStatus.stopped && (\r\n        <>\r\n          <Button onClick={onStart} className=\"connector-green-button\">\r\n            Запустить\r\n          </Button>\r\n          <Button kind={ButtonKinds.Secondary} onClick={onUpdate}>\r\n            Сохранить\r\n          </Button>\r\n        </>\r\n      )}\r\n      {connectorStatus === ConnectorStatus.connector && (\r\n        <Button kind={ButtonKinds.Danger} onClick={onStop}>\r\n          Приостановить\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}