{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Modal,Button,Icons,ButtonKinds}from'@distate/components';import{DocumentFlow}from'./DocumentFlow';import{TariffInfo}from'./TariffInfo';import{setTariffStatus,getTariff}from'../../store/actions';import{tariffStatusSystemNameSelector}from'../../store/selects';export var ViewAdditionState;(function(ViewAdditionState){ViewAdditionState[ViewAdditionState[\"hide\"]=0]=\"hide\";ViewAdditionState[ViewAdditionState[\"view\"]=1]=\"view\";})(ViewAdditionState||(ViewAdditionState={}));/** Карточка тарифа */export var TariffCard=function TariffCard(props){var isVisible=props.isVisible,_hide=props.hide,tariffId=props.tariffId;var statusName=useSelector(tariffStatusSystemNameSelector);var dispatch=useDispatch();useEffect(function(){/** получение описания открытого тарифа */dispatch(getTariff(tariffId));},[dispatch,tariffId]);var onArchive=function onArchive(){dispatch(setTariffStatus({tariffId:tariffId,statusSystemName:'archive'}));};var onActive=function onActive(){dispatch(setTariffStatus({tariffId:tariffId,statusSystemName:'active'}));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{hide:function hide(){return _hide();},isVisible:isVisible},/*#__PURE__*/React.createElement(Modal.Header,{title:\"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0430 \\u0442\\u0430\\u0440\\u0438\\u0444\\u0430\"}),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(TariffInfo,null),/*#__PURE__*/React.createElement(DocumentFlow,{tariffId:tariffId}),statusName==='archive'?/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconCheck,{fill:\"currentColor\"}),kind:ButtonKinds.LightGreen,style:{marginTop:15},onClick:onActive},\"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"):/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconArchive,{fill:\"currentColor\"}),kind:ButtonKinds.Danger,style:{marginTop:15},onClick:onArchive},\"\\u0412 \\u0430\\u0440\\u0445\\u0438\\u0432\"))));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/tariff/components/tariff-card/TariffCard.tsx"],"names":["React","useEffect","useDispatch","useSelector","Modal","Button","Icons","ButtonKinds","DocumentFlow","TariffInfo","setTariffStatus","getTariff","tariffStatusSystemNameSelector","ViewAdditionState","TariffCard","props","isVisible","hide","tariffId","statusName","dispatch","onArchive","statusSystemName","onActive","LightGreen","marginTop","Danger"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,KAAxB,CAA+BC,WAA/B,KAAkD,qBAAlD,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,eAAT,CAA0BC,SAA1B,KAA2C,qBAA3C,CACA,OAASC,8BAAT,KAA+C,qBAA/C,CAEA,UAAYC,CAAAA,iBAAZ,C,UAAYA,iB,EAAAA,iB,CAAAA,iB,mBAAAA,iB,CAAAA,iB,sBAAAA,iB,GAAAA,iB,MAWZ,sBACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAkB,IAClCC,CAAAA,SADkC,CACJD,KADI,CAClCC,SADkC,CACvBC,KADuB,CACJF,KADI,CACvBE,IADuB,CACjBC,QADiB,CACJH,KADI,CACjBG,QADiB,CAG1C,GAAMC,CAAAA,UAAU,CAAGhB,WAAW,CAACS,8BAAD,CAA9B,CAEA,GAAMQ,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd,0CACAmB,QAAQ,CAACT,SAAS,CAACO,QAAD,CAAV,CAAR,CACD,CAHQ,CAGN,CAACE,QAAD,CAAWF,QAAX,CAHM,CAAT,CAKA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBD,QAAQ,CAACV,eAAe,CAAC,CAAEQ,QAAQ,CAARA,QAAF,CAAYI,gBAAgB,CAAE,SAA9B,CAAD,CAAhB,CAAR,CACD,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBH,QAAQ,CAACV,eAAe,CAAC,CAAEQ,QAAQ,CAARA,QAAF,CAAYI,gBAAgB,CAAE,QAA9B,CAAD,CAAhB,CAAR,CACD,CAFD,CAIA,mBACE,qDACE,oBAAC,KAAD,EAAO,IAAI,CAAE,sBAAML,CAAAA,KAAI,EAAV,EAAb,CAA2B,SAAS,CAAED,SAAtC,eACE,oBAAC,KAAD,CAAO,MAAP,EAAc,KAAK,CAAC,uFAApB,EADF,cAEE,oBAAC,KAAD,CAAO,IAAP,mBACE,oBAAC,UAAD,MADF,cAEE,oBAAC,YAAD,EAAc,QAAQ,CAAEE,QAAxB,EAFF,CAGGC,UAAU,GAAK,SAAf,cACC,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,SAAP,EAAiB,IAAI,CAAC,cAAtB,EADR,CAEE,IAAI,CAAEZ,WAAW,CAACiB,UAFpB,CAGE,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAb,CAHT,CAIE,OAAO,CAAEF,QAJX,6EADD,cAUC,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,KAAD,CAAO,WAAP,EAAmB,IAAI,CAAC,cAAxB,EADR,CAEE,IAAI,CAAEhB,WAAW,CAACmB,MAFpB,CAGE,KAAK,CAAE,CAAED,SAAS,CAAE,EAAb,CAHT,CAIE,OAAO,CAAEJ,SAJX,0CAbJ,CAFF,CADF,CADF,CA8BD,CAlDM","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Icons, ButtonKinds } from '@distate/components';\r\nimport { DocumentFlow } from './DocumentFlow';\r\nimport { TariffInfo } from './TariffInfo';\r\nimport { setTariffStatus, getTariff } from '../../store/actions';\r\nimport { tariffStatusSystemNameSelector } from '../../store/selects';\r\n\r\nexport enum ViewAdditionState {\r\n  'hide',\r\n  'view'\r\n}\r\n\r\ntype Props = {\r\n  isVisible: boolean;\r\n  hide: () => void;\r\n  tariffId: number;\r\n};\r\n\r\n/** Карточка тарифа */\r\nexport const TariffCard = (props: Props) => {\r\n  const { isVisible, hide, tariffId } = props;\r\n\r\n  const statusName = useSelector(tariffStatusSystemNameSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    /** получение описания открытого тарифа */\r\n    dispatch(getTariff(tariffId));\r\n  }, [dispatch, tariffId]);\r\n\r\n  const onArchive = () => {\r\n    dispatch(setTariffStatus({ tariffId, statusSystemName: 'archive' }));\r\n  };\r\n\r\n  const onActive = () => {\r\n    dispatch(setTariffStatus({ tariffId, statusSystemName: 'active' }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal hide={() => hide()} isVisible={isVisible}>\r\n        <Modal.Header title=\"Карточка тарифа\" />\r\n        <Modal.Body>\r\n          <TariffInfo />\r\n          <DocumentFlow tariffId={tariffId} />\r\n          {statusName === 'archive' ? (\r\n            <Button\r\n              icon={<Icons.IconCheck fill=\"currentColor\" />}\r\n              kind={ButtonKinds.LightGreen}\r\n              style={{ marginTop: 15 }}\r\n              onClick={onActive}\r\n            >\r\n              Активировать\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              icon={<Icons.IconArchive fill=\"currentColor\" />}\r\n              kind={ButtonKinds.Danger}\r\n              style={{ marginTop: 15 }}\r\n              onClick={onArchive}\r\n            >\r\n              В архив\r\n            </Button>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}