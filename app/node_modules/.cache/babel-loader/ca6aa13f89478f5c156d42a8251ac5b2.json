{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport InfoFieldFact1 from './invoice/InfoFieldFact1';\nimport Code from './currency/Code';\nimport Num from './invoice/Num';\nimport Date from './invoice/Date';\n\nvar Invoice = /*#__PURE__*/function () {\n  _createClass(Invoice, null, [{\n    key: \"validate\",\n\n    /*\r\n      <СвСчФакт НомерСчФ=\"1НОМЕР ДОКУМЕНТА\" ДатаСчФ=\"26.09.2019\" КодОКВ=\"643\">\r\n    */\n    value: function validate(values) {\n      var errorMsgs = [];\n      Invoice.VOs.forEach(function (DomainVO) {\n        values.forEach(function (val) {\n          var msg = DomainVO.validate(val[DomainVO.field]);\n\n          if (msg !== undefined) {\n            errorMsgs.push(msg);\n          }\n        });\n      });\n      return errorMsgs.length > 0 ? 'СвСчФакт заполнено неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !Invoice.validate(value);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Универсальный передаточный документ';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'invoice';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [Num, Date];\n    }\n  }]);\n\n  function Invoice(number, date, currencyCode) {\n    _classCallCheck(this, Invoice);\n\n    this.number = number;\n    this.date = date;\n    this.currencyCode = currencyCode;\n  }\n  /* xml -НомерСчФ\r\n  *  lbl - Документ №\r\n  * */\n\n\n  _createClass(Invoice, [{\n    key: \"number\",\n    set: function set(value) {\n      this._number = new Num(value);\n    },\n    get: function get() {\n      return this._number;\n    }\n    /* xml -ДатаСчФ\r\n    *  lbl - Дата\r\n    * */\n\n  }, {\n    key: \"date\",\n    set: function set(value) {\n      this._date = new Date(value);\n    },\n    get: function get() {\n      return this._date;\n    }\n    /* xml -КодОКВ\r\n    *  lbl - Валюта (рубль 643)\r\n    * */\n\n  }, {\n    key: \"currencyCode\",\n    set: function set(value) {\n      this._currencyCode = new Code(value);\n    },\n    get: function get() {\n      return this._currencyCode;\n    }\n    /*\r\n    К платежно-расчетному документу(пока этого поля нет в gui)\r\n        <СвПРД СуммаПРД=\"8888\" НомерПРД=\"К платёжному документу3\" ДатаПРД=\"01.09.2019\"/>\r\n    <СвПРД СуммаПРД=\"567.45\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n    */\n\n  }, {\n    key: \"paymentDocuments\",\n    set: function set(paymentDocs) {\n      this._paymentDocs = paymentDocs;\n    },\n    get: function get() {\n      return this._paymentDocs;\n    }\n    /*\r\n      <ИнфПолФХЖ1>\r\n          <ТекстИнф Идентиф=\"ИнфПоле1\" Значен=\"ИнфЗн1\"/>\r\n          <ТекстИнф Идентиф=\"ИнфПоле2\" Значен=\"ИнфЗн2\"/>\r\n      </ИнфПолФХЖ1>\r\n    */\n\n  }, {\n    key: \"infoFields\",\n    set: function set(values) {\n      this._infoFields = new InfoFieldFact1(values);\n    },\n    get: function get() {\n      return this._infoFields;\n    }\n  }, {\n    key: \"cargoFrom\",\n    set: function set(value) {\n      this._cargoFrom = value;\n    },\n    get: function get() {\n      return this._cargoFrom;\n    }\n  }]);\n\n  return Invoice;\n}();\n\nexport default Invoice;","map":{"version":3,"sources":["../../../../../src/domain/documents/invoice/vo/Invoice.js"],"names":[],"mappings":";;AAAA,OAAO,cAAP,MAA2B,0BAA3B;AACA,OAAO,IAAP,MAAiB,iBAAjB;AACA,OAAO,GAAP,MAAgB,eAAhB;AACA,OAAO,IAAP,MAAiB,gBAAjB;;IAEM,O;;;;AACJ;;;6BAGgB,M,EAAM;AACpB,UAAM,SAAS,GAAG,EAAlB;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAoB,UAAC,QAAD,EAAa;AAC/B,QAAA,MAAM,CAAC,OAAP,CAAe,UAAC,GAAD,EAAQ;AACrB,cAAM,GAAG,GAAG,QAAQ,CAAC,QAAT,CAAkB,GAAG,CAAC,QAAQ,CAAC,KAAV,CAArB,CAAZ;;AACA,cAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,YAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACD;AACF,SALD;AAMD,OAPD;AAQA,aAAQ,SAAS,CAAC,MAAV,GAAmB,CAApB,GAAyB,4BAAzB,GAAwD,SAA/D;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,OAAO,CAAC,QAAR,CAAiB,KAAjB,CAAR;AACD;;;wBAEc;AACb,aAAO,qCAAP;AACD;;;wBAGe;AACd,aAAO,SAAP;AACD;;;wBAEa;AACZ,aAAO,CAAC,GAAD,EAAM,IAAN,CAAP;AACD;;;AAED,mBAAY,MAAZ,EAAoB,IAApB,EAA0B,YAA1B,EAAsC;AAAA;;AACpC,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,YAAL,GAAoB,YAApB;AACD;AAED;;;;;;;sBAGW,K,EAAK;AACd,WAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ,KAAR,CAAf;AACD,K;wBAES;AACR,aAAO,KAAK,OAAZ;AACD;AAED;;;;;;sBAGS,K,EAAK;AACZ,WAAK,KAAL,GAAa,IAAI,IAAJ,CAAS,KAAT,CAAb;AACD,K;wBAEO;AACN,aAAO,KAAK,KAAZ;AACD;AAED;;;;;;sBAGiB,K,EAAK;AACpB,WAAK,aAAL,GAAqB,IAAI,IAAJ,CAAS,KAAT,CAArB;AACD,K;wBAEe;AACd,aAAO,KAAK,aAAZ;AACD;AAED;;;;;;;;sBAMqB,W,EAAW;AAC9B,WAAK,YAAL,GAAoB,WAApB;AACD,K;wBAEmB;AAClB,aAAO,KAAK,YAAZ;AACD;AAED;;;;;;;;;sBAMe,M,EAAM;AACnB,WAAK,WAAL,GAAmB,IAAI,cAAJ,CAAmB,MAAnB,CAAnB;AACD,K;wBAEa;AACZ,aAAO,KAAK,WAAZ;AACD;;;sBAEa,K,EAAK;AACjB,WAAK,UAAL,GAAkB,KAAlB;AACD,K;wBAEY;AACX,aAAO,KAAK,UAAZ;AACD;;;;;;AAGH,eAAe,OAAf","sourceRoot":"","sourcesContent":["import InfoFieldFact1 from './invoice/InfoFieldFact1';\r\nimport Code from './currency/Code';\r\nimport Num from './invoice/Num';\r\nimport Date from './invoice/Date';\r\nclass Invoice {\r\n    /*\r\n      <СвСчФакт НомерСчФ=\"1НОМЕР ДОКУМЕНТА\" ДатаСчФ=\"26.09.2019\" КодОКВ=\"643\">\r\n  */\r\n    static validate(values) {\r\n        const errorMsgs = [];\r\n        Invoice.VOs.forEach((DomainVO) => {\r\n            values.forEach((val) => {\r\n                const msg = DomainVO.validate(val[DomainVO.field]);\r\n                if (msg !== undefined) {\r\n                    errorMsgs.push(msg);\r\n                }\r\n            });\r\n        });\r\n        return (errorMsgs.length > 0) ? 'СвСчФакт заполнено неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !Invoice.validate(value);\r\n    }\r\n    static get name() {\r\n        return 'Универсальный передаточный документ';\r\n    }\r\n    static get field() {\r\n        return 'invoice';\r\n    }\r\n    static get VOs() {\r\n        return [Num, Date];\r\n    }\r\n    constructor(number, date, currencyCode) {\r\n        this.number = number;\r\n        this.date = date;\r\n        this.currencyCode = currencyCode;\r\n    }\r\n    /* xml -НомерСчФ\r\n    *  lbl - Документ №\r\n    * */\r\n    set number(value) {\r\n        this._number = new Num(value);\r\n    }\r\n    get number() {\r\n        return this._number;\r\n    }\r\n    /* xml -ДатаСчФ\r\n    *  lbl - Дата\r\n    * */\r\n    set date(value) {\r\n        this._date = new Date(value);\r\n    }\r\n    get date() {\r\n        return this._date;\r\n    }\r\n    /* xml -КодОКВ\r\n    *  lbl - Валюта (рубль 643)\r\n    * */\r\n    set currencyCode(value) {\r\n        this._currencyCode = new Code(value);\r\n    }\r\n    get currencyCode() {\r\n        return this._currencyCode;\r\n    }\r\n    /*\r\n    К платежно-расчетному документу(пока этого поля нет в gui)\r\n  \r\n    <СвПРД СуммаПРД=\"8888\" НомерПРД=\"К платёжному документу3\" ДатаПРД=\"01.09.2019\"/>\r\n    <СвПРД СуммаПРД=\"567.45\" НомерПРД=\"К платёжному документу4\" ДатаПРД=\"23.09.2019\"/>\r\n  */\r\n    set paymentDocuments(paymentDocs) {\r\n        this._paymentDocs = paymentDocs;\r\n    }\r\n    get paymentDocuments() {\r\n        return this._paymentDocs;\r\n    }\r\n    /*\r\n      <ИнфПолФХЖ1>\r\n          <ТекстИнф Идентиф=\"ИнфПоле1\" Значен=\"ИнфЗн1\"/>\r\n          <ТекстИнф Идентиф=\"ИнфПоле2\" Значен=\"ИнфЗн2\"/>\r\n      </ИнфПолФХЖ1>\r\n   */\r\n    set infoFields(values) {\r\n        this._infoFields = new InfoFieldFact1(values);\r\n    }\r\n    get infoFields() {\r\n        return this._infoFields;\r\n    }\r\n    set cargoFrom(value) {\r\n        this._cargoFrom = value;\r\n    }\r\n    get cargoFrom() {\r\n        return this._cargoFrom;\r\n    }\r\n}\r\nexport default Invoice;\r\n//# sourceMappingURL=Invoice.js.map"]},"metadata":{},"sourceType":"module"}