{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{ButtonFolder}from'../../components/button';import{selectFolders,selectAttachLoading}from'../../store/selects';import{actionAddPackage}from'../../store/actions';var ButtonAttach=function ButtonAttach(_ref){var packageIds=_ref.packageIds,callbackSuccess=_ref.callbackSuccess,callbackFailure=_ref.callbackFailure;var dispatch=useDispatch();var folders=useSelector(selectFolders);var attachLoading=useSelector(selectAttachLoading);var handleOnClick=function handleOnClick(folderId){var folder=folders.find(function(item){return item.id===folderId;});var callback={success:function success(){if(callbackSuccess)callbackSuccess({folder:folder,packageIds:packageIds});},failure:function failure(){if(callbackFailure)callbackFailure({folder:folder,packageIds:packageIds});}};dispatch(actionAddPackage({folderId:folderId,packageIds:packageIds,callback:callback}));};return/*#__PURE__*/React.createElement(ButtonFolder,{onClick:handleOnClick,folders:folders,loading:attachLoading});};export{ButtonAttach};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/container/folder/features/attach/attach.tsx"],"names":["React","useDispatch","useSelector","ButtonFolder","selectFolders","selectAttachLoading","actionAddPackage","ButtonAttach","packageIds","callbackSuccess","callbackFailure","dispatch","folders","attachLoading","handleOnClick","folderId","folder","find","item","id","callback","success","failure"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,YAAT,KAA6B,yBAA7B,CAEA,OAASC,aAAT,CAAwBC,mBAAxB,KAAmD,qBAAnD,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CAUA,GAAMC,CAAAA,YAA0C,CAAG,QAA7CA,CAAAA,YAA6C,MAI7C,IAHJC,CAAAA,UAGI,MAHJA,UAGI,CAFJC,eAEI,MAFJA,eAEI,CADJC,eACI,MADJA,eACI,CACJ,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,OAAiB,CAAGV,WAAW,CAACE,aAAD,CAArC,CACA,GAAMS,CAAAA,aAAa,CAAGX,WAAW,CAACG,mBAAD,CAAjC,CAEA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAsB,CAC1C,GAAMC,CAAAA,MAAM,CAAGJ,OAAO,CAACK,IAAR,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,QAAhB,EAAjB,CAAf,CAEA,GAAMK,CAAAA,QAAQ,CAAG,CACfC,OAAO,CAAE,kBAAM,CACb,GAAIZ,eAAJ,CAAqBA,eAAe,CAAC,CAAEO,MAAM,CAANA,MAAF,CAAUR,UAAU,CAAVA,UAAV,CAAD,CAAf,CACtB,CAHc,CAIfc,OAAO,CAAE,kBAAM,CACb,GAAIZ,eAAJ,CAAqBA,eAAe,CAAC,CAAEM,MAAM,CAANA,MAAF,CAAUR,UAAU,CAAVA,UAAV,CAAD,CAAf,CACtB,CANc,CAAjB,CASAG,QAAQ,CAACL,gBAAgB,CAAC,CAAES,QAAQ,CAARA,QAAF,CAAYP,UAAU,CAAVA,UAAZ,CAAwBY,QAAQ,CAARA,QAAxB,CAAD,CAAjB,CAAR,CACD,CAbD,CAeA,mBAAO,oBAAC,YAAD,EAAc,OAAO,CAAEN,aAAvB,CAAsC,OAAO,CAAEF,OAA/C,CAAwD,OAAO,CAAEC,aAAjE,EAAP,CACD,CAzBD,CA2BA,OAASN,YAAT","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ButtonFolder } from '../../components/button';\r\nimport { Folder } from '../../helpers/folder.typings';\r\nimport { selectFolders, selectAttachLoading } from '../../store/selects';\r\nimport { actionAddPackage } from '../../store/actions';\r\n\r\ntype Callback = { folder?: Folder; packageIds: string[] };\r\n\r\nexport interface IButtonAttachProps {\r\n  packageIds: string[];\r\n  callbackSuccess?: (data: Callback) => void;\r\n  callbackFailure?: (data: Callback) => void;\r\n}\r\n\r\nconst ButtonAttach: React.FC<IButtonAttachProps> = ({\r\n  packageIds,\r\n  callbackSuccess,\r\n  callbackFailure\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const folders: Folder[] = useSelector(selectFolders);\r\n  const attachLoading = useSelector(selectAttachLoading);\r\n\r\n  const handleOnClick = (folderId: string) => {\r\n    const folder = folders.find(item => item.id === folderId);\r\n\r\n    const callback = {\r\n      success: () => {\r\n        if (callbackSuccess) callbackSuccess({ folder, packageIds });\r\n      },\r\n      failure: () => {\r\n        if (callbackFailure) callbackFailure({ folder, packageIds });\r\n      }\r\n    };\r\n\r\n    dispatch(actionAddPackage({ folderId, packageIds, callback }));\r\n  };\r\n\r\n  return <ButtonFolder onClick={handleOnClick} folders={folders} loading={attachLoading} />;\r\n};\r\n\r\nexport { ButtonAttach };\r\n"]},"metadata":{},"sourceType":"module"}