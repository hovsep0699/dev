{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  Адрес в Российской Федерации (АдрРФТип)\r\n */\nimport RegionCode from './russian_type/RegionCode';\nimport PostalCode from './russian_type/PostalCode';\nimport District from './russian_type/District';\nimport City from './russian_type/City';\nimport Settlement from './russian_type/Settlement';\nimport Street from './russian_type/Street';\nimport House from './russian_type/House';\nimport Building from './russian_type/Building';\nimport Room from './russian_type/Room';\n\nvar AddressRussianType = /*#__PURE__*/function () {\n  _createClass(AddressRussianType, null, [{\n    key: \"validate\",\n    value: function validate(value) {\n      var errorMsgs = [];\n      AddressRussianType.VOs.forEach(function (DomainVO) {\n        var msg = DomainVO.validate(value && value[DomainVO.field]);\n\n        if (msg !== undefined) {\n          errorMsgs.push(msg);\n        }\n      });\n      return errorMsgs.length > 0 ? 'Сведения об адресе заполнены неверно' : undefined;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !AddressRussianType.validate(value);\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите сведения об адресе';\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите сведения об адресе';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'Сведения об адресе';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'address';\n    }\n  }, {\n    key: \"VOs\",\n    get: function get() {\n      return [RegionCode, PostalCode, District, City, Settlement, Street, House, Building, Room];\n    }\n  }]);\n\n  function AddressRussianType(regionCode, postalCode, district, city, settlement, street, house, building, room) {\n    _classCallCheck(this, AddressRussianType);\n\n    this._type = 'russian';\n    this.regionCode = regionCode;\n    this.postalCode = postalCode;\n    this.district = district;\n    this.city = city;\n    this.settlement = settlement;\n    this.street = street;\n    this.house = house;\n    this.building = building;\n    this.room = room;\n  }\n\n  _createClass(AddressRussianType, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AddressRussianType(this.regionCode, this.postalCode, this.district, this.city, this.settlement, this.street, this.house, this.building, this.room);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"regionCode\",\n    get: function get() {\n      return this._regionCode;\n    },\n    set: function set(value) {\n      this._regionCode = new RegionCode(value);\n    }\n  }, {\n    key: \"postalCode\",\n    get: function get() {\n      return this._postalCode;\n    },\n    set: function set(value) {\n      this._postalCode = new PostalCode(value);\n    }\n  }, {\n    key: \"district\",\n    get: function get() {\n      return this._district;\n    },\n    set: function set(value) {\n      this._district = new District(value);\n    }\n  }, {\n    key: \"city\",\n    get: function get() {\n      return this._city;\n    },\n    set: function set(value) {\n      this._city = new City(value);\n    }\n  }, {\n    key: \"settlement\",\n    get: function get() {\n      return this._settlement;\n    },\n    set: function set(value) {\n      this._settlement = new Settlement(value);\n    }\n  }, {\n    key: \"street\",\n    get: function get() {\n      return this._street;\n    },\n    set: function set(value) {\n      this._street = new Street(value);\n    }\n  }, {\n    key: \"house\",\n    get: function get() {\n      return this._house;\n    },\n    set: function set(value) {\n      this._house = new House(value);\n    }\n  }, {\n    key: \"building\",\n    get: function get() {\n      return this._building;\n    },\n    set: function set(value) {\n      this._building = new Building(value);\n    }\n  }, {\n    key: \"room\",\n    get: function get() {\n      return this._room;\n    },\n    set: function set(value) {\n      this._room = new Room(value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var _ref;\n\n      return _ref = {\n        type: this.type\n      }, _defineProperty(_ref, RegionCode.field, this.regionCode), _defineProperty(_ref, PostalCode.field, this.postalCode), _defineProperty(_ref, District.field, this.district), _defineProperty(_ref, City.field, this.city), _defineProperty(_ref, Settlement.field, this.settlement), _defineProperty(_ref, Street.field, this.street), _defineProperty(_ref, House.field, this.house), _defineProperty(_ref, Building.field, this.building), _defineProperty(_ref, Room.field, this.room), _ref;\n    }\n  }]);\n\n  return AddressRussianType;\n}();\n\nexport default AddressRussianType;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/standard_element/address/AddressRussianType.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n  Адрес в Российской Федерации (АдрРФТип)\r\n */\r\nimport RegionCode from './russian_type/RegionCode';\r\nimport PostalCode from './russian_type/PostalCode';\r\nimport District from './russian_type/District';\r\nimport City from './russian_type/City';\r\nimport Settlement from './russian_type/Settlement';\r\nimport Street from './russian_type/Street';\r\nimport House from './russian_type/House';\r\nimport Building from './russian_type/Building';\r\nimport Room from './russian_type/Room';\r\nclass AddressRussianType {\r\n    static validate(value) {\r\n        const errorMsgs = [];\r\n        AddressRussianType.VOs.forEach((DomainVO) => {\r\n            const msg = DomainVO.validate(value && value[DomainVO.field]);\r\n            if (msg !== undefined) {\r\n                errorMsgs.push(msg);\r\n            }\r\n        });\r\n        return (errorMsgs.length > 0) ? 'Сведения об адресе заполнены неверно' : undefined;\r\n    }\r\n    static isValid(value) {\r\n        return !AddressRussianType.validate(value);\r\n    }\r\n    static get hint() {\r\n        return 'Введите сведения об адресе';\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите сведения об адресе';\r\n    }\r\n    static get name() {\r\n        return 'Сведения об адресе';\r\n    }\r\n    static get field() {\r\n        return 'address';\r\n    }\r\n    static get VOs() {\r\n        return [\r\n            RegionCode,\r\n            PostalCode,\r\n            District,\r\n            City,\r\n            Settlement,\r\n            Street,\r\n            House,\r\n            Building,\r\n            Room\r\n        ];\r\n    }\r\n    constructor(regionCode, postalCode, district, city, settlement, street, house, building, room) {\r\n        this._type = 'russian';\r\n        this.regionCode = regionCode;\r\n        this.postalCode = postalCode;\r\n        this.district = district;\r\n        this.city = city;\r\n        this.settlement = settlement;\r\n        this.street = street;\r\n        this.house = house;\r\n        this.building = building;\r\n        this.room = room;\r\n    }\r\n    clone() {\r\n        return new AddressRussianType(this.regionCode, this.postalCode, this.district, this.city, this.settlement, this.street, this.house, this.building, this.room);\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get regionCode() {\r\n        return this._regionCode;\r\n    }\r\n    set regionCode(value) {\r\n        this._regionCode = new RegionCode(value);\r\n    }\r\n    get postalCode() {\r\n        return this._postalCode;\r\n    }\r\n    set postalCode(value) {\r\n        this._postalCode = new PostalCode(value);\r\n    }\r\n    get district() {\r\n        return this._district;\r\n    }\r\n    set district(value) {\r\n        this._district = new District(value);\r\n    }\r\n    get city() {\r\n        return this._city;\r\n    }\r\n    set city(value) {\r\n        this._city = new City(value);\r\n    }\r\n    get settlement() {\r\n        return this._settlement;\r\n    }\r\n    set settlement(value) {\r\n        this._settlement = new Settlement(value);\r\n    }\r\n    get street() {\r\n        return this._street;\r\n    }\r\n    set street(value) {\r\n        this._street = new Street(value);\r\n    }\r\n    get house() {\r\n        return this._house;\r\n    }\r\n    set house(value) {\r\n        this._house = new House(value);\r\n    }\r\n    get building() {\r\n        return this._building;\r\n    }\r\n    set building(value) {\r\n        this._building = new Building(value);\r\n    }\r\n    get room() {\r\n        return this._room;\r\n    }\r\n    set room(value) {\r\n        this._room = new Room(value);\r\n    }\r\n    get value() {\r\n        return {\r\n            type: this.type,\r\n            [RegionCode.field]: this.regionCode,\r\n            [PostalCode.field]: this.postalCode,\r\n            [District.field]: this.district,\r\n            [City.field]: this.city,\r\n            [Settlement.field]: this.settlement,\r\n            [Street.field]: this.street,\r\n            [House.field]: this.house,\r\n            [Building.field]: this.building,\r\n            [Room.field]: this.room\r\n        };\r\n    }\r\n}\r\nexport default AddressRussianType;\r\n//# sourceMappingURL=AddressRussianType.js.map"]},"metadata":{},"sourceType":"module"}