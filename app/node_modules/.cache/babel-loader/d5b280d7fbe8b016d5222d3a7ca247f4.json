{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import ru from'date-fns/locale/ru';import'./style.css';import{Icons}from'@distate/components';/** Новый компонент календаря без ошибок заполнения */export var DatePickerNew=function DatePickerNew(props){var value=props.value,onChange=props.onChange,label=props.label,required=props.required,placeholder=props.placeholder,error=props.error,errors=props.errors;var _useState=useState(value),_useState2=_slicedToArray(_useState,2),startDate=_useState2[0],setStartDate=_useState2[1];useEffect(function(){setStartDate(value);},[value]);var handleOnChange=function handleOnChange(date){setStartDate(date);if(onChange&&typeof onChange==='function'){onChange(date);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"date-picker-wrapper \".concat(!label?'date-picker-label':'',\" \").concat(error?'date-picker-error':'')},label&&/*#__PURE__*/React.createElement(\"div\",{className:\"date-picker-label \".concat(required?'date-picker-label--required':'')},label),/*#__PURE__*/React.createElement(DatePicker,{locale:ru,placeholderText:placeholder,dateFormat:'dd.MM.yyyy',selected:value?startDate:null,onChange:handleOnChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"date-picker-icon\"},/*#__PURE__*/React.createElement(Icons.IconCalendar,{fill:\"#70706a\"})),errors&&/*#__PURE__*/React.createElement(\"span\",{className:\"date-picker-text-error\"},errors[0]));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/common/date-picker-new/DatePickerNew.tsx"],"names":["React","useState","useEffect","DatePicker","ru","Icons","DatePickerNew","props","value","onChange","label","required","placeholder","error","errors","startDate","setStartDate","handleOnChange","date"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,EAAP,KAAe,oBAAf,CACA,MAAO,aAAP,CACA,OAASC,KAAT,KAAsB,qBAAtB,CAYA,sDACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAkB,IACrCC,CAAAA,KADqC,CAC4BD,KAD5B,CACrCC,KADqC,CAC9BC,QAD8B,CAC4BF,KAD5B,CAC9BE,QAD8B,CACpBC,KADoB,CAC4BH,KAD5B,CACpBG,KADoB,CACbC,QADa,CAC4BJ,KAD5B,CACbI,QADa,CACHC,WADG,CAC4BL,KAD5B,CACHK,WADG,CACUC,KADV,CAC4BN,KAD5B,CACUM,KADV,CACiBC,MADjB,CAC4BP,KAD5B,CACiBO,MADjB,eAGXb,QAAQ,CAACO,KAAD,CAHG,wCAGtCO,SAHsC,eAG3BC,YAH2B,eAK7Cd,SAAS,CAAC,UAAM,CACdc,YAAY,CAACR,KAAD,CAAZ,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAgB,CACrCF,YAAY,CAACE,IAAD,CAAZ,CACA,GAAIT,QAAQ,EAAI,MAAOA,CAAAA,QAAP,GAAoB,UAApC,CAAgD,CAC9CA,QAAQ,CAACS,IAAD,CAAR,CACD,CACF,CALD,CAOA,mBACE,2BACE,SAAS,+BAAyB,CAACR,KAAD,CAAS,mBAAT,CAA+B,EAAxD,aACPG,KAAK,CAAG,mBAAH,CAAyB,EADvB,CADX,EAKGH,KAAK,eACJ,2BAAK,SAAS,6BAAuBC,QAAQ,CAAG,6BAAH,CAAmC,EAAlE,CAAd,EACGD,KADH,CANJ,cAUE,oBAAC,UAAD,EACE,MAAM,CAAEN,EADV,CAEE,eAAe,CAAEQ,WAFnB,CAGE,UAAU,CAAE,YAHd,CAIE,QAAQ,CAAEJ,KAAK,CAAGO,SAAH,CAAe,IAJhC,CAKE,QAAQ,CAAEE,cALZ,EAVF,cAiBE,2BAAK,SAAS,CAAC,kBAAf,eACE,oBAAC,KAAD,CAAO,YAAP,EAAoB,IAAI,CAAC,SAAzB,EADF,CAjBF,CAoBGH,MAAM,eAAI,4BAAM,SAAS,CAAC,wBAAhB,EAA0CA,MAAM,CAAC,CAAD,CAAhD,CApBb,CADF,CAwBD,CAxCM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport ru from 'date-fns/locale/ru';\r\nimport './style.css';\r\nimport { Icons } from '@distate/components';\r\n\r\ntype Props = {\r\n  value?: Date;\r\n  onChange?: (date: any) => void;\r\n  label?: string;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  error?: any;\r\n  errors?: string[];\r\n};\r\n\r\n/** Новый компонент календаря без ошибок заполнения */\r\nexport const DatePickerNew = (props: Props) => {\r\n  const { value, onChange, label, required, placeholder, error, errors } = props;\r\n\r\n  const [startDate, setStartDate] = useState(value);\r\n\r\n  useEffect(() => {\r\n    setStartDate(value);\r\n  }, [value]);\r\n\r\n  const handleOnChange = (date: Date) => {\r\n    setStartDate(date);\r\n    if (onChange && typeof onChange === 'function') {\r\n      onChange(date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`date-picker-wrapper ${!label ? 'date-picker-label' : ''} ${\r\n        error ? 'date-picker-error' : ''\r\n      }`}\r\n    >\r\n      {label && (\r\n        <div className={`date-picker-label ${required ? 'date-picker-label--required' : ''}`}>\r\n          {label}\r\n        </div>\r\n      )}\r\n      <DatePicker\r\n        locale={ru}\r\n        placeholderText={placeholder}\r\n        dateFormat={'dd.MM.yyyy'}\r\n        selected={value ? startDate : null}\r\n        onChange={handleOnChange}\r\n      />\r\n      <div className=\"date-picker-icon\">\r\n        <Icons.IconCalendar fill=\"#70706a\" />\r\n      </div>\r\n      {errors && <span className=\"date-picker-text-error\">{errors[0]}</span>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}