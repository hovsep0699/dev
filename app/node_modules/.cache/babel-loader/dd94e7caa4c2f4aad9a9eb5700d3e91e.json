{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(connectersEffect),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(request);import{takeLatest,call,put}from'redux-saga/effects';import{SystemService}from'@distate/core/dist/application/system';import{connectersRequest,connectersFailure,connectersSuccess}from'../actions';export function connectersEffect(){return _regeneratorRuntime.wrap(function connectersEffect$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(connectersRequest,request);case 2:case\"end\":return _context.stop();}}},_marked);}function request(_ref){var id,service,connecters;return _regeneratorRuntime.wrap(function request$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:id=_ref.payload.id;_context2.prev=1;service=new SystemService();_context2.next=5;return call(service.operators,id);case 5:connecters=_context2.sent;_context2.next=8;return put(connectersSuccess({connecters:connecters}));case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);_context2.next=14;return put(connectersFailure({error:_context2.t0}));case 14:case\"end\":return _context2.stop();}}},_marked2,null,[[1,10]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/system/store/sagas/connectes.saga.ts"],"names":["connectersEffect","request","takeLatest","call","put","SystemService","connectersRequest","connectersFailure","connectersSuccess","id","payload","service","operators","connecters","error"],"mappings":"oNAKiBA,gB,iDAIPC,O,EATV,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,OAASC,aAAT,KAA8B,uCAA9B,CAEA,OAASC,iBAAT,CAA4BC,iBAA5B,CAA+CC,iBAA/C,KAAwE,YAAxE,CAEA,MAAO,SAAUR,CAAAA,gBAAV,4IACL,MAAME,CAAAA,UAAU,CAACI,iBAAD,CAAoBL,OAApB,CAAhB,CADK,sDAIP,QAAUA,CAAAA,OAAV,oJAA+BQ,EAA/B,MAAoBC,OAApB,CAA+BD,EAA/B,kBAEUE,OAFV,CAEoB,GAAIN,CAAAA,aAAJ,EAFpB,kBAGuB,MAAMF,CAAAA,IAAI,CAACQ,OAAO,CAACC,SAAT,CAAoBH,EAApB,CAAV,CAHvB,OAGUI,UAHV,iCAKI,MAAMT,CAAAA,GAAG,CAACI,iBAAiB,CAAC,CAAEK,UAAU,CAAEA,UAAd,CAAD,CAAlB,CAAT,CALJ,8GAOI,MAAMT,CAAAA,GAAG,CAACG,iBAAiB,CAAC,CAAEO,KAAK,aAAP,CAAD,CAAlB,CAAT,CAPJ","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { SystemService } from '@distate/core/dist/application/system';\r\n\r\nimport { connectersRequest, connectersFailure, connectersSuccess } from '../actions';\r\n\r\nexport function* connectersEffect() {\r\n  yield takeLatest(connectersRequest, request);\r\n}\r\n\r\nfunction* request({ payload: { id } }: any) {\r\n  try {\r\n    const service = new SystemService();\r\n    const connecters = yield call(service.operators, id);\r\n\r\n    yield put(connectersSuccess({ connecters: connecters }));\r\n  } catch (error) {\r\n    yield put(connectersFailure({ error }));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}