{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Employee from './Employee';\nimport OGRN from './vo/OGRN';\nimport INN from './vo/INN';\nimport KPP from './vo/KPP';\nimport OKPO from './vo/OKPO';\nimport IFNS from '../ifns/IFNS';\nimport BankDetails from '../bank/BankDetails';\nimport errFactory from '../../application/error/ErrorFactory';\nimport { CHANGE_COMPANY } from '../../application/error/Error';\nimport LegalAddress from '../common/LegalAddress';\n\nvar Company = /*#__PURE__*/function () {\n  function Company(localId, id, inn, ogrn, name) {\n    _classCallCheck(this, Company);\n\n    this._localId = localId; // ID компании в базе данных\n\n    this._id = id; // Идентификатор участника KSR201811140012b8b58b0cb004d61beb1aa315cd86001\n\n    this._inn = new INN(inn);\n    this._ogrn = new OGRN(ogrn);\n    this._name = name;\n    this._bankDetails = null;\n    this._ifns = null;\n    this._employees = new Map();\n    this._independentDepartments = new Map();\n    this._internalDepartments = new Map();\n    this._mainDepartment = null;\n  }\n\n  _createClass(Company, [{\n    key: \"setDetails\",\n    value: function setDetails(kpp, okpo, ifns, bankDetails) {\n      if (!(kpp instanceof KPP)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса KPP');\n      }\n\n      if (!(okpo instanceof OKPO)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса OKPO');\n      }\n\n      if (!(ifns instanceof IFNS)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса IFNS');\n      }\n\n      if (!(bankDetails instanceof BankDetails)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса BankDetails');\n      }\n\n      this.kpp = kpp;\n      this.okpo = okpo;\n      this.ifns = ifns;\n      this.bankDetails = bankDetails;\n      this.state.setDetails();\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(legalAddress) {\n      if (!(legalAddress instanceof LegalAddress)) {\n        throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса LegalAddress(для юридической компании)');\n      }\n\n      this._legalAddress = legalAddress;\n      this.state.setAddress();\n    }\n  }, {\n    key: \"addEmployee\",\n    value: function addEmployee(employee) {\n      var isCurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(employee instanceof Employee)) {\n        throw new Error('Параметр должен быть экземпляром класса Employee');\n      }\n\n      this._employees.set(employee.id, employee);\n\n      if (isCurrent) this._currentEmployeeId = employee.id;\n    }\n  }, {\n    key: \"mainDepartment\",\n    set: function set(value) {\n      this._mainDepartment = value;\n    },\n    get: function get() {\n      return this._mainDepartment;\n    }\n  }, {\n    key: \"employee\",\n    get: function get() {\n      return this._employees.get(this._currentEmployeeId);\n    }\n  }, {\n    key: \"employees\",\n    get: function get() {\n      return this._employees;\n    }\n  }, {\n    key: \"independentDepartments\",\n    get: function get() {\n      return this._independentDepartments;\n    }\n  }, {\n    key: \"internalDepartments\",\n    get: function get() {\n      return this._internalDepartments;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"localId\",\n    get: function get() {\n      return this._localId;\n    }\n  }, {\n    key: \"ogrn\",\n    get: function get() {\n      return this._ogrn;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"inn\",\n    get: function get() {\n      return this._inn;\n    }\n  }, {\n    key: \"kpp\",\n    set: function set(value) {\n      this.independentDepartments.get(this.id).kpp = value;\n    },\n    get: function get() {\n      if (this.independentDepartments.has(this.id)) {\n        return this.independentDepartments.get(this.id).kpp;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"okpo\",\n    set: function set(value) {\n      this._okpo = value;\n    },\n    get: function get() {\n      return this._okpo;\n    }\n  }, {\n    key: \"ifns\",\n    get: function get() {\n      return this._ifns;\n    },\n    set: function set(value) {\n      this._ifns = value;\n    }\n  }, {\n    key: \"bankDetails\",\n    get: function get() {\n      return this._bankDetails;\n    },\n    set: function set(value) {\n      this._bankDetails = value;\n    }\n  }, {\n    key: \"legalAddress\",\n    set: function set(value) {\n      this._legalAddress = value;\n    },\n    get: function get() {\n      return this._legalAddress;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'UL';\n    }\n  }]);\n\n  return Company;\n}();\n\nexport { Company as default };","map":{"version":3,"sources":["../../../src/domain/legal_entity/Company.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import Employee from './Employee';\r\nimport OGRN from './vo/OGRN';\r\nimport INN from './vo/INN';\r\nimport KPP from './vo/KPP';\r\nimport OKPO from './vo/OKPO';\r\nimport IFNS from '../ifns/IFNS';\r\nimport BankDetails from '../bank/BankDetails';\r\nimport errFactory from '../../application/error/ErrorFactory';\r\nimport { CHANGE_COMPANY } from '../../application/error/Error';\r\nimport LegalAddress from '../common/LegalAddress';\r\nexport default class Company {\r\n    constructor(localId, id, inn, ogrn, name) {\r\n        this._localId = localId; // ID компании в базе данных\r\n        this._id = id; // Идентификатор участника KSR201811140012b8b58b0cb004d61beb1aa315cd86001\r\n        this._inn = new INN(inn);\r\n        this._ogrn = new OGRN(ogrn);\r\n        this._name = name;\r\n        this._bankDetails = null;\r\n        this._ifns = null;\r\n        this._employees = new Map();\r\n        this._independentDepartments = new Map();\r\n        this._internalDepartments = new Map();\r\n        this._mainDepartment = null;\r\n    }\r\n    setDetails(kpp, okpo, ifns, bankDetails) {\r\n        if (!(kpp instanceof KPP)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса KPP');\r\n        }\r\n        if (!(okpo instanceof OKPO)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса OKPO');\r\n        }\r\n        if (!(ifns instanceof IFNS)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса IFNS');\r\n        }\r\n        if (!(bankDetails instanceof BankDetails)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса BankDetails');\r\n        }\r\n        this.kpp = kpp;\r\n        this.okpo = okpo;\r\n        this.ifns = ifns;\r\n        this.bankDetails = bankDetails;\r\n        this.state.setDetails();\r\n    }\r\n    setAddress(legalAddress) {\r\n        if (!(legalAddress instanceof LegalAddress)) {\r\n            throw errFactory(CHANGE_COMPANY, 'Параметр должен быть экземпляром класса LegalAddress(для юридической компании)');\r\n        }\r\n        this._legalAddress = legalAddress;\r\n        this.state.setAddress();\r\n    }\r\n    addEmployee(employee, isCurrent = false) {\r\n        if (!(employee instanceof Employee)) {\r\n            throw new Error('Параметр должен быть экземпляром класса Employee');\r\n        }\r\n        this._employees.set(employee.id, employee);\r\n        if (isCurrent)\r\n            this._currentEmployeeId = employee.id;\r\n    }\r\n    set mainDepartment(value) {\r\n        this._mainDepartment = value;\r\n    }\r\n    get mainDepartment() {\r\n        return this._mainDepartment;\r\n    }\r\n    get employee() {\r\n        return this._employees.get(this._currentEmployeeId);\r\n    }\r\n    get employees() {\r\n        return this._employees;\r\n    }\r\n    get independentDepartments() {\r\n        return this._independentDepartments;\r\n    }\r\n    get internalDepartments() {\r\n        return this._internalDepartments;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get localId() {\r\n        return this._localId;\r\n    }\r\n    get ogrn() {\r\n        return this._ogrn;\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    get inn() {\r\n        return this._inn;\r\n    }\r\n    set kpp(value) {\r\n        this.independentDepartments.get(this.id).kpp = value;\r\n    }\r\n    get kpp() {\r\n        if (this.independentDepartments.has(this.id)) {\r\n            return this.independentDepartments.get(this.id).kpp;\r\n        }\r\n        return null;\r\n    }\r\n    set okpo(value) {\r\n        this._okpo = value;\r\n    }\r\n    get okpo() {\r\n        return this._okpo;\r\n    }\r\n    get ifns() {\r\n        return this._ifns;\r\n    }\r\n    set ifns(value) {\r\n        this._ifns = value;\r\n    }\r\n    get bankDetails() {\r\n        return this._bankDetails;\r\n    }\r\n    set bankDetails(value) {\r\n        this._bankDetails = value;\r\n    }\r\n    set legalAddress(value) {\r\n        this._legalAddress = value;\r\n    }\r\n    get legalAddress() {\r\n        return this._legalAddress;\r\n    }\r\n    get type() {\r\n        return 'UL';\r\n    }\r\n}\r\n//# sourceMappingURL=Company.js.map"]},"metadata":{},"sourceType":"module"}