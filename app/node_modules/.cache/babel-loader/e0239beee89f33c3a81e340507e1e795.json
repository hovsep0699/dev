{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport AmountOfTax from '../good/AmountOfTax';\n\nvar TotalAmountOfTax = /*#__PURE__*/function () {\n  _createClass(TotalAmountOfTax, null, [{\n    key: \"calculate\",\n    value: function calculate() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return args.reduce(function (acc, arg) {\n        return !Number.isNaN(+arg) ? acc + Math.floor(arg * 100) / 100 : acc;\n      }, 0);\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return '0.00';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'totalAmountOfTax';\n    }\n  }, {\n    key: \"aggregatedField\",\n    get: function get() {\n      return AmountOfTax.field;\n    }\n  }]);\n\n  function TotalAmountOfTax(totalCost) {\n    _classCallCheck(this, TotalAmountOfTax);\n\n    this.value = totalCost;\n  }\n\n  _createClass(TotalAmountOfTax, [{\n    key: \"clone\",\n    value: function clone() {\n      return new TotalAmountOfTax(this.value);\n    }\n  }, {\n    key: \"value\",\n    set: function set(arg) {\n      this._value = Number.isNaN(+arg) ? '' : \"\".concat(Math.floor(+arg * 100) / 100);\n    },\n    get: function get() {\n      return \"\".concat(this._value);\n    }\n  }]);\n\n  return TotalAmountOfTax;\n}();\n\nexport default TotalAmountOfTax;","map":{"version":3,"sources":["../../../../../../src/domain/documents/upd/vo/total/TotalAmountOfTax.js"],"names":[],"mappings":";;AAAA,OAAO,WAAP,MAAwB,qBAAxB;;IAEM,gB;;;gCAaoB;AAAA,wCAAJ,IAAI;AAAJ,QAAA,IAAI;AAAA;;AACtB,aAAO,IAAI,CAAC,MAAL,CAAY,UAAC,GAAD,EAAM,GAAN;AAAA,eAAe,CAAC,MAAM,CAAC,KAAP,CAAa,CAAC,GAAd,CAAD,GAAsB,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,GAAG,GAAjB,IAAwB,GAApD,GAA0D,GAAzE;AAAA,OAAZ,EAA2F,CAA3F,CAAP;AACD;;;wBAdqB;AACpB,aAAO,MAAP;AACD;;;wBAEe;AACd,aAAO,kBAAP;AACD;;;wBAEyB;AACxB,aAAO,WAAW,CAAC,KAAnB;AACD;;;AAMD,4BAAY,SAAZ,EAAqB;AAAA;;AACnB,SAAK,KAAL,GAAa,SAAb;AACD;;;;4BAEI;AACH,aAAO,IAAI,gBAAJ,CAAqB,KAAK,KAA1B,CAAP;AACD;;;sBAES,G,EAAG;AACX,WAAK,MAAL,GAAc,MAAM,CAAC,KAAP,CAAa,CAAC,GAAd,IAAqB,EAArB,aAA6B,IAAI,CAAC,KAAL,CAAW,CAAC,GAAD,GAAO,GAAlB,IAAyB,GAAtD,CAAd;AACD,K;wBAEQ;AACP,uBAAU,KAAK,MAAf;AACD;;;;;;AAGH,eAAe,gBAAf","sourceRoot":"","sourcesContent":["import AmountOfTax from '../good/AmountOfTax';\r\nclass TotalAmountOfTax {\r\n    static get placeholder() {\r\n        return '0.00';\r\n    }\r\n    static get field() {\r\n        return 'totalAmountOfTax';\r\n    }\r\n    static get aggregatedField() {\r\n        return AmountOfTax.field;\r\n    }\r\n    static calculate(...args) {\r\n        return args.reduce((acc, arg) => (!Number.isNaN(+arg) ? acc + Math.floor(arg * 100) / 100 : acc), 0);\r\n    }\r\n    constructor(totalCost) {\r\n        this.value = totalCost;\r\n    }\r\n    clone() {\r\n        return new TotalAmountOfTax(this.value);\r\n    }\r\n    set value(arg) {\r\n        this._value = Number.isNaN(+arg) ? '' : `${Math.floor(+arg * 100) / 100}`;\r\n    }\r\n    get value() {\r\n        return `${this._value}`;\r\n    }\r\n}\r\nexport default TotalAmountOfTax;\r\n//# sourceMappingURL=TotalAmountOfTax.js.map"]},"metadata":{},"sourceType":"module"}