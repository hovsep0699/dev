{"ast":null,"code":"import React from\"react\";import{Box}from\"grommet\";import Button,{ButtonKinds}from\"../../common/Button\";import{IconCheck,IconClose}from\"../../assets/icons\";import{useDialog}from\"../pages/dashboard/modals/useDialog\";var ModalFormFooter=function ModalFormFooter(_ref){var state=_ref.state,onSave=_ref.onSave,onCancel=_ref.onCancel;var _useDialog=useDialog(),hideDialog=_useDialog.hideDialog;return/*#__PURE__*/React.createElement(Box,{direction:\"column\",margin:{top:\"medium\"},pad:\"medium\",height:\"100%\",width:\"100%\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"center\"},/*#__PURE__*/React.createElement(Box,{direction:\"row\",gap:\"10px\",justify:\"center\",width:\"100%\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"start\",width:\"134px\"},/*#__PURE__*/React.createElement(Button,{style:{fontWeight:\"bold\",fontSize:\"14px\"},kind:ButtonKinds.Orange,disabled:state.isSubmitting,icon:/*#__PURE__*/React.createElement(IconCheck,{color:\"white\",fill:\"white\"}),onClick:function onClick(e){if(!state.isSubmitting&&state.handleSubmit!=null){state.handleSubmit(e);if(onSave!=null)onSave();}console.log(\"SSSSS: \",state.isSubmitting);},children:\"Сохранять\"})),/*#__PURE__*/React.createElement(Box,{direction:\"column\",justify:\"end\",width:\"134px\"},/*#__PURE__*/React.createElement(Button,{style:{fontWeight:\"bold\",fontSize:\"14px\"},onClick:function onClick(){hideDialog();if(onCancel!=null)onCancel();},icon:/*#__PURE__*/React.createElement(IconClose,null),children:\"Закрыть\"}))),state.status&&/*#__PURE__*/React.createElement(Box,{pad:{vertical:'small'}},/*#__PURE__*/React.createElement(\"span\",{style:{color:'red',fontSize:'14px'}},state.status))));};export default ModalFormFooter;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/widgets/ModlFormFooter.tsx"],"names":["React","Box","Button","ButtonKinds","IconCheck","IconClose","useDialog","ModalFormFooter","state","onSave","onCancel","hideDialog","top","fontWeight","fontSize","Orange","isSubmitting","e","handleSubmit","console","log","status","vertical","color"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,KAAkB,SAAlB,CACA,MAAOC,CAAAA,MAAP,EAAgBC,WAAhB,KAAkC,qBAAlC,CACA,OAAQC,SAAR,CAAmBC,SAAnB,KAAmC,oBAAnC,CAEA,OAAQC,SAAR,KAAwB,qCAAxB,CAWA,GAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAAqD,IAAnDC,CAAAA,KAAmD,MAAnDA,KAAmD,CAA5CC,MAA4C,MAA5CA,MAA4C,CAApCC,QAAoC,MAApCA,QAAoC,gBACpFJ,SAAS,EAD2E,CAClGK,UADkG,YAClGA,UADkG,CAEzG,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAE,QAAhB,CAA0B,MAAM,CAAE,CAACC,GAAG,CAAE,QAAN,CAAlC,CAAmD,GAAG,CAAE,QAAxD,CAAkE,MAAM,CAAE,MAA1E,CAAkF,KAAK,CAAE,MAAzF,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,QAAhB,CAA0B,OAAO,CAAE,QAAnC,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,KAAhB,CAAuB,GAAG,CAAE,MAA5B,CAAoC,OAAO,CAAE,QAA7C,CAAuD,KAAK,CAAE,MAA9D,eACI,oBAAC,GAAD,EAAK,SAAS,CAAE,QAAhB,CAA0B,OAAO,CAAE,OAAnC,CAA4C,KAAK,CAAE,OAAnD,eACI,oBAAC,MAAD,EACI,KAAK,CAAE,CAACC,UAAU,CAAE,MAAb,CAAqBC,QAAQ,CAAE,MAA/B,CADX,CAEI,IAAI,CAAEX,WAAW,CAACY,MAFtB,CAGI,QAAQ,CAAEP,KAAK,CAACQ,YAHpB,CAII,IAAI,cAAE,oBAAC,SAAD,EAAW,KAAK,CAAE,OAAlB,CAA2B,IAAI,CAAE,OAAjC,EAJV,CAKI,OAAO,CAAE,iBAACC,CAAD,CAAO,CACZ,GAAI,CAACT,KAAK,CAACQ,YAAP,EAAuBR,KAAK,CAACU,YAAN,EAAsB,IAAjD,CAAwD,CACpDV,KAAK,CAACU,YAAN,CAAmBD,CAAnB,EACA,GAAIR,MAAM,EAAI,IAAd,CACIA,MAAM,GACb,CACDU,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBZ,KAAK,CAACQ,YAA7B,EAEH,CAbL,CAcI,QAAQ,CAAE,WAdd,EADJ,CADJ,cAmBI,oBAAC,GAAD,EAAK,SAAS,CAAE,QAAhB,CAA0B,OAAO,CAAE,KAAnC,CAA0C,KAAK,CAAE,OAAjD,eACI,oBAAC,MAAD,EACI,KAAK,CAAE,CAACH,UAAU,CAAE,MAAb,CAAqBC,QAAQ,CAAE,MAA/B,CADX,CAEI,OAAO,CAAE,kBAAM,CACXH,UAAU,GACV,GAAID,QAAQ,EAAI,IAAhB,CACIA,QAAQ,GACf,CANL,CAOI,IAAI,cAAE,oBAAC,SAAD,MAPV,CAQI,QAAQ,CAAE,SARd,EADJ,CAnBJ,CADJ,CAiCKF,KAAK,CAACa,MAAN,eACG,oBAAC,GAAD,EAAK,GAAG,CAAE,CAACC,QAAQ,CAAE,OAAX,CAAV,eACI,4BAAM,KAAK,CAAE,CAACC,KAAK,CAAE,KAAR,CAAeT,QAAQ,CAAE,MAAzB,CAAb,EAAgDN,KAAK,CAACa,MAAtD,CADJ,CAlCR,CADJ,CADJ,CA2CH,CA7CD,CA+CA,cAAed,CAAAA,eAAf","sourcesContent":["import React from \"react\";\r\nimport {Box} from \"grommet\";\r\nimport Button, {ButtonKinds} from \"../../common/Button\";\r\nimport {IconCheck, IconClose} from \"../../assets/icons\";\r\nimport {CreatePresenterState} from \"../pages/CreatePoa/presenter/createPresenterState\";\r\nimport {useDialog} from \"../pages/dashboard/modals/useDialog\";\r\nimport {SubTrustPresenterState} from \"../pages/SubTrust/presenter/SubTrustPresenterState\";\r\nimport {FormPresenterState} from \"../components/forms/presenter/FormPresenterState\";\r\n\r\n\r\ninterface ModalFormFooterProps {\r\n    state: CreatePresenterState | SubTrustPresenterState | FormPresenterState;\r\n    onCancel?: () => void;\r\n    onSave?: () => void;\r\n}\r\n\r\nconst ModalFormFooter: React.FC<ModalFormFooterProps> = ({state, onSave, onCancel}: ModalFormFooterProps) => {\r\n    const {hideDialog} = useDialog();\r\n    return (\r\n        <Box direction={\"column\"} margin={{top: \"medium\"}} pad={\"medium\"} height={\"100%\"} width={\"100%\"}>\r\n            <Box direction={\"column\"} justify={\"center\"}>\r\n                <Box direction={\"row\"} gap={\"10px\"} justify={\"center\"} width={\"100%\"}>\r\n                    <Box direction={\"column\"} justify={\"start\"} width={\"134px\"}>\r\n                        <Button\r\n                            style={{fontWeight: \"bold\", fontSize: \"14px\"}}\r\n                            kind={ButtonKinds.Orange}\r\n                            disabled={state.isSubmitting}\r\n                            icon={<IconCheck color={\"white\"} fill={\"white\"}/>}\r\n                            onClick={(e) => {\r\n                                if (!state.isSubmitting && state.handleSubmit != null ) {\r\n                                    state.handleSubmit(e);\r\n                                    if (onSave != null)\r\n                                        onSave();\r\n                                }\r\n                                console.log(\"SSSSS: \", state.isSubmitting);\r\n\r\n                            }}\r\n                            children={\"Сохранять\"}\r\n                        />\r\n                    </Box>\r\n                    <Box direction={\"column\"} justify={\"end\"} width={\"134px\"}>\r\n                        <Button\r\n                            style={{fontWeight: \"bold\", fontSize: \"14px\"}}\r\n                            onClick={() => {\r\n                                hideDialog();\r\n                                if (onCancel != null)\r\n                                    onCancel!();\r\n                            }}\r\n                            icon={<IconClose/>}\r\n                            children={\"Закрыть\"}\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n                {state.status && (\r\n                    <Box pad={{vertical: 'small'}}>\r\n                        <span style={{color: 'red', fontSize: '14px'}}>{state.status}</span>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ModalFormFooter"]},"metadata":{},"sourceType":"module"}