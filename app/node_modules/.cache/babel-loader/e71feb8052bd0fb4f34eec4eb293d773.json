{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/*\r\n  ОГРН(Основной Государственный Регистрационный Номер) состоит из 13 цифр\r\n  Номер - уникальный\r\n\r\n  С Г Г К К Н Н Х Х Х Х Х Ч\r\n\r\n  С (1-й знак) — признак отнесения государственного регистрационного номера записи:\r\n    к основному государственному регистрационному номеру (ОГРН)* — 1, 5 (присваивается юридическому лицу)\r\n    к иному государственному регистрационному номеру записи ЕГРЮЛ* (ГРН) — 2, 6, 7, 8, 9\r\n    к иному государственному регистрационному номеру записи ЕГРИП* (ГРНИП) — 4\r\n\r\n  ГГ (со 2-го по 3-й знак) — две последние цифры года внесения записи в государственный реестр\r\n  КК (4-й, 5-й знаки) — порядковый номер субъекта Российской Федерации\r\n  НН (с 6-го по 7-й знак) — код налоговой инспекции\r\n  ХХХХХ (с 8-го по 12-й знак) — номер записи, внесенной в государственный реестр в течение года\r\n  Ч (13-й знак) — контрольное число\r\n*/\nvar OGRN = /*#__PURE__*/function () {\n  _createClass(OGRN, null, [{\n    key: \"validate\",\n    value: function validate(ogrn) {\n      if (ogrn.length === 13) {\n        var n13 = parseInt((parseInt(ogrn.slice(0, -1), 10) % 11).toString().slice(-1), 10);\n        if (n13 !== parseInt(ogrn[12], 10)) return 'Неправильное контрольное число';\n      }\n\n      return OGRN.REG_EXP.test(ogrn) ? undefined : 'Введите номер длиной 13 знаков';\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(value) {\n      return !OGRN.validate(value);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(value) {\n      return value && value.replace(/\\D/g, '').slice(0, 13);\n    }\n  }, {\n    key: \"REG_EXP\",\n    get: function get() {\n      return new RegExp('^[0-9][0-9]{2}[0-9]{2}[0-9]{2}[0-9]{5}[0-9]$');\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return 'Введите ОГРН';\n    }\n  }, {\n    key: \"hint\",\n    get: function get() {\n      return 'Введите 13-значный код';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'ОГРН';\n    }\n  }, {\n    key: \"field\",\n    get: function get() {\n      return 'ogrn';\n    }\n  }]);\n\n  function OGRN(ogrn) {\n    _classCallCheck(this, OGRN);\n\n    if (!OGRN.isValid(\"\".concat(ogrn))) {\n      this._error = new Error('Невозможно создать ОГРН. Формат не верен.');\n    } else {\n      this._error = null;\n    }\n\n    this._value = \"\".concat(ogrn);\n  }\n\n  _createClass(OGRN, [{\n    key: \"clone\",\n    value: function clone() {\n      return new OGRN(this.value);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }]);\n\n  return OGRN;\n}();\n\nexport default OGRN;","map":{"version":3,"sources":["../../../../src/domain/legal_entity/vo/OGRN.js"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;IAiBM,I;;;6BAKY,I,EAAI;AAClB,UAAI,IAAI,CAAC,MAAL,KAAgB,EAApB,EAAwB;AACtB,YAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAD,EAAoB,EAApB,CAAR,GAAkC,EAAnC,EAAuC,QAAvC,GAAkD,KAAlD,CAAwD,CAAC,CAAzD,CAAD,EAA8D,EAA9D,CAApB;AACA,YAAI,GAAG,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAD,CAAL,EAAW,EAAX,CAApB,EAAoC,OAAO,gCAAP;AACrC;;AACD,aAAO,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,IAAlB,IAA0B,SAA1B,GAAsC,gCAA7C;AACD;;;4BAEc,K,EAAK;AAClB,aAAO,CAAC,IAAI,CAAC,QAAL,CAAc,KAAd,CAAR;AACD;;;yBAEW,K,EAAK;AACf,aAAO,KAAK,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyB,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAhB;AACD;;;wBAlBiB;AAChB,aAAO,IAAI,MAAJ,CAAW,8CAAX,CAAP;AACD;;;wBAkBqB;AACpB,aAAO,cAAP;AACD;;;wBAEc;AACb,aAAO,wBAAP;AACD;;;wBAEc;AACb,aAAO,MAAP;AACD;;;wBAEe;AACd,aAAO,MAAP;AACD;;;AAED,gBAAY,IAAZ,EAAgB;AAAA;;AACd,QAAI,CAAC,IAAI,CAAC,OAAL,WAAgB,IAAhB,EAAL,EAA8B;AAC5B,WAAK,MAAL,GAAc,IAAI,KAAJ,CAAU,2CAAV,CAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,IAAd;AACD;;AACD,SAAK,MAAL,aAAiB,IAAjB;AACD;;;;4BAEI;AACH,aAAO,IAAI,IAAJ,CAAS,KAAK,KAAd,CAAP;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;wBAEQ;AACP,aAAO,KAAK,MAAZ;AACD;;;;;;AAGH,eAAe,IAAf","sourceRoot":"","sourcesContent":["/*\r\n  ОГРН(Основной Государственный Регистрационный Номер) состоит из 13 цифр\r\n  Номер - уникальный\r\n\r\n  С Г Г К К Н Н Х Х Х Х Х Ч\r\n\r\n  С (1-й знак) — признак отнесения государственного регистрационного номера записи:\r\n    к основному государственному регистрационному номеру (ОГРН)* — 1, 5 (присваивается юридическому лицу)\r\n    к иному государственному регистрационному номеру записи ЕГРЮЛ* (ГРН) — 2, 6, 7, 8, 9\r\n    к иному государственному регистрационному номеру записи ЕГРИП* (ГРНИП) — 4\r\n\r\n  ГГ (со 2-го по 3-й знак) — две последние цифры года внесения записи в государственный реестр\r\n  КК (4-й, 5-й знаки) — порядковый номер субъекта Российской Федерации\r\n  НН (с 6-го по 7-й знак) — код налоговой инспекции\r\n  ХХХХХ (с 8-го по 12-й знак) — номер записи, внесенной в государственный реестр в течение года\r\n  Ч (13-й знак) — контрольное число\r\n*/\r\nclass OGRN {\r\n    static get REG_EXP() {\r\n        return new RegExp('^[0-9][0-9]{2}[0-9]{2}[0-9]{2}[0-9]{5}[0-9]$');\r\n    }\r\n    static validate(ogrn) {\r\n        if (ogrn.length === 13) {\r\n            const n13 = parseInt((parseInt(ogrn.slice(0, -1), 10) % 11).toString().slice(-1), 10);\r\n            if (n13 !== parseInt(ogrn[12], 10))\r\n                return 'Неправильное контрольное число';\r\n        }\r\n        return OGRN.REG_EXP.test(ogrn) ? undefined : 'Введите номер длиной 13 знаков';\r\n    }\r\n    static isValid(value) {\r\n        return !OGRN.validate(value);\r\n    }\r\n    static mask(value) {\r\n        return value && value.replace(/\\D/g, '').slice(0, 13);\r\n    }\r\n    static get placeholder() {\r\n        return 'Введите ОГРН';\r\n    }\r\n    static get hint() {\r\n        return 'Введите 13-значный код';\r\n    }\r\n    static get name() {\r\n        return 'ОГРН';\r\n    }\r\n    static get field() {\r\n        return 'ogrn';\r\n    }\r\n    constructor(ogrn) {\r\n        if (!OGRN.isValid(`${ogrn}`)) {\r\n            this._error = new Error('Невозможно создать ОГРН. Формат не верен.');\r\n        }\r\n        else {\r\n            this._error = null;\r\n        }\r\n        this._value = `${ogrn}`;\r\n    }\r\n    clone() {\r\n        return new OGRN(this.value);\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n}\r\nexport default OGRN;\r\n//# sourceMappingURL=OGRN.js.map"]},"metadata":{},"sourceType":"module"}