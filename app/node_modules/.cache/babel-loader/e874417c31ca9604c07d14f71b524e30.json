{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState}from'react';import{Formik,Form}from'formik';import*as Yup from'yup';import{Box}from'grommet';import AdminSectionForm from'./sections/AdminSectionForm';import\"./globalVariadicForm.css\";import SelectField from\"../../../common/Form/fields/SelectField\";import InputField from\"../../../common/Form/fields/InputField\";import{DatePickerNew}from\"../../../common/date-picker-new\";import InputMaskField from\"../../../common/Form/InputMaskField/InputMaskField\";import{format,parse}from\"date-fns\";import{AddressValidationScheme}from\"../../constants/ValidationScheme/AddressValidationScheme\";import{AddressType,addressTypes}from\"../../constants/SelectionConstants\";import{PersonalDocumentValidationScheme}from\"../../constants/ValidationScheme/PersonalDocumentValidationScheme\";// Function to build validation schema based on fields\nvar buildValidationSchema=function buildValidationSchema(fields){console.log(fields);return fields.reduce(function(schema,field){if(field.validation){schema[field.name]=field.validation;}else if(field.required){schema[field.name]=Yup.string().required('Required');}return _objectSpread(_objectSpread(_objectSpread({},schema),AddressValidationScheme),PersonalDocumentValidationScheme);},{});};var getAddressType=function getAddressType(value){if(!value||value.length===0){return AddressType.normal;}// if ()\nif(value===AddressType.normal.toString()){return AddressType.normal;}return AddressType.fias;};var GlobalVariadicFormChild=function GlobalVariadicFormChild(_ref){var setFieldValue=_ref.setFieldValue,errors=_ref.errors,formType=_ref.formType,adminIndex=_ref.adminIndex,handleRemoveSubAdmin=_ref.handleRemoveSubAdmin,handleSubmitSubAdmin=_ref.handleSubmitSubAdmin,handleEditSubAdmin=_ref.handleEditSubAdmin,setFormType=_ref.setFormType,admins=_ref.admins,fields=_ref.fields,defaultValues=_ref.defaultValues,formTypes=_ref.formTypes;var _useState=useState(getAddressType(defaultValues[\"addressType\"])),_useState2=_slicedToArray(_useState,2),addressType=_useState2[0],setAddressType=_useState2[1];return/*#__PURE__*/React.createElement(Form,{className:\"themed_form\",style:{width:'100%',display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",boxSizing:'border-box',backgroundColor:'white',zIndex:1000}},/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"100%\",justify:\"center\"},/*#__PURE__*/React.createElement(Box,{pad:{vertical:'small'},justify:\"center\",width:\"100%\"},/*#__PURE__*/React.createElement(\"h1\",{style:{textAlign:\"center\"}},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C \",formType)),/*#__PURE__*/React.createElement(Box,{direction:\"row\",width:\"100%\",justify:\"center\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"340px\",justify:\"center\"},/*#__PURE__*/React.createElement(SelectField,{name:\"type\",options:formTypes,label:\"\\u0422\\u0438\\u043F\",onChange:function onChange(option){setFormType(option.value);setFieldValue('type',option.value);}}))),fields.map(function(field,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(\"hr\",{style:{margin:\"16px 0\"}}),/*#__PURE__*/React.createElement(Box,{direction:\"row\",width:\"100%\",justify:\"center\"},/*#__PURE__*/React.createElement(Box,{direction:\"column\",width:\"340px\",justify:\"center\"},index!==0&&/*#__PURE__*/React.createElement(Box,{width:\"100%\",pad:{vertical:'10px'}},/*#__PURE__*/React.createElement(\"h3\",{style:{textAlign:\"center\",background:\"#fcfcfc\",fontWeight:300,fontSize:\"20px\",fontFamily:\"Roboto, Arial, Helvetica Neue\"}},field.section)),field.id==='address'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SelectField// has\n,{name:\"addressType\",options:addressTypes,label:\"\\u0422\\u0438\\u043F \\u0430\\u0434\\u0440\\u0435\\u0441\\u0430\",onChange:function onChange(option){setAddressType(option.value===AddressType.normal.toString()?AddressType.normal:AddressType.fias);setFieldValue('addressType',option.value);}}),field.fields.map(function(elem){if(addressType===AddressType.normal&&['regionCode','Index','Province','city','settlement','street','house','block','flat'].includes(elem.name)){return/*#__PURE__*/React.createElement(InputField,{key:elem.name,title:elem.title,name:elem.name,label:elem.label,placeholder:elem.placeholder});}if(addressType===AddressType.fias&&['regionCode','fiasId','fiasText'].includes(elem.name)){if(elem.name===\"fiasId\")return/*#__PURE__*/React.createElement(InputMaskField,{key:elem.name,title:elem.title,name:elem.name,label:elem.label,value:elem.value,mask:\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",maskReg:/[-\\s]/,placeholder:elem.placeholder});return/*#__PURE__*/React.createElement(InputField,{value:elem.value,key:elem.name,title:elem.title,name:elem.name,label:elem.label,placeholder:elem.placeholder});}return null;})),field.id!=='address'&&field.fields.map(function(elem){switch(elem.type){case'input':if(elem.name===\"socialNumber\")return/*#__PURE__*/React.createElement(InputMaskField,{value:elem.value,key:elem.name,title:elem.title,name:elem.name,label:elem.label,mask:\"xxx-xxx-xxx xx\",maskReg:/[-\\s]/,placeholder:elem.placeholder});return/*#__PURE__*/React.createElement(InputField,{value:elem.value,key:elem.name,title:elem.title,name:elem.name,label:elem.label,placeholder:elem.placeholder});case'select':return/*#__PURE__*/React.createElement(SelectField,{key:elem.name,name:elem.name,label:elem.label,options:elem.options});case'date':return/*#__PURE__*/React.createElement(DatePickerNew,{error:errors[elem.name],key:elem.name,required:elem.required,name:elem.name,label:elem.label,value:defaultValues[elem.name]?parse(defaultValues[elem.name],\"dd.MM.yyyy\",new Date()):field.value,onChange:function onChange(e){var formattedDate=format(e,'dd.MM.yyyy');setFieldValue(elem.name,formattedDate);},title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 dd.mm.yyyy\",placeholder:\"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0414\\u0414.\\u041C\\u041C.\\u0413\\u0413\\u0413\\u0413\"});case'button':return/*#__PURE__*/React.createElement(AdminSectionForm,{adminIndex:adminIndex,admins:admins,handleRemoveSubAdmin:handleRemoveSubAdmin,handleSubmitSubAdmin:handleSubmitSubAdmin,handleEditSubAdmin:handleEditSubAdmin,setFieldValue:setFieldValue});default:return null;}}))));})));};var GlobalVariadicForm=function GlobalVariadicForm(_ref2){var handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,formID=_ref2.formID,isValidating=_ref2.isValidating,handleRemoveSubAdmin=_ref2.handleRemoveSubAdmin,closeOnSubmit=_ref2.closeOnSubmit,handleSubmitSubAdmin=_ref2.handleSubmitSubAdmin,handleEditSubAdmin=_ref2.handleEditSubAdmin,admins=_ref2.admins,adminIndex=_ref2.adminIndex,close=_ref2.close,formTypes=_ref2.formTypes,onStateChange=_ref2.onStateChange,initialFields=_ref2.initialFields,_ref2$defaultValues=_ref2.defaultValues,defaultValues=_ref2$defaultValues===void 0?{}:_ref2$defaultValues;var _useState3=useState(defaultValues[\"type\"]),_useState4=_slicedToArray(_useState3,2),formType=_useState4[0],setFormType=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),fields=_useState6[0],setFields=_useState6[1];console.log(\"KJKKKKKKK:::: \",isValidating);// Handle schema state\nvar _useState7=useState(Yup.object({})),_useState8=_slicedToArray(_useState7,2),schema=_useState8[0],setSchema=_useState8[1];useEffect(function(){// Update fields when formType changes\nif(formType){var selectedFields=initialFields[formType]||[];setFields(selectedFields);}},[formType,initialFields]);useEffect(function(){var updatedSchema=Yup.object(_objectSpread({type:Yup.string().required('Required'),addressType:Yup.string().required('Required')},buildValidationSchema(fields.reduce(function(acc,section){return acc.concat(section.fields);},[]))));setSchema(updatedSchema);console.log(updatedSchema);},[fields]);var initialValues=fields.reduce(function(acc,section){return _objectSpread(_objectSpread({},acc),section.fields.reduce(function(acc,field){var _defaultValues$field$;return _objectSpread(_objectSpread({},acc),{},_defineProperty({},field.name,(_defaultValues$field$=defaultValues[field.name])!==null&&_defaultValues$field$!==void 0?_defaultValues$field$:''));},{}));},{type:formType,addressType:AddressType.normal.toString()});return/*#__PURE__*/React.createElement(Box,{justify:\"center\",align:\"center\",direction:\"column\",width:\"100%\",gap:\"20px\"},/*#__PURE__*/React.createElement(Formik,{key:formID// isValidating={isValidating}\n,initialValues:initialValues,validationSchema:(isValidating!==null&&isValidating!==void 0?isValidating:true)?schema:Yup.object({}),enableReinitialize:true,onSubmit:/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref3){var setStatus,setSubmitting,resetForm;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setStatus=_ref3.setStatus,setSubmitting=_ref3.setSubmitting,resetForm=_ref3.resetForm;_context.prev=1;_context.next=4;return handleSubmit(values);case 4:setStatus(null);setSubmitting(isSubmitting);if(!isSubmitting){if(closeOnSubmit){closeOnSubmit();}else if(close){close();}resetForm();}_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);setStatus('Something went wrong. Please try again.');setSubmitting(false);case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x,_x2){return _ref4.apply(this,arguments);};}()},function(_ref5){var setFieldValue=_ref5.setFieldValue,isSubmitting=_ref5.isSubmitting,handleSubmit=_ref5.handleSubmit,status=_ref5.status,values=_ref5.values,errors=_ref5.errors;if(onStateChange!=null){onStateChange(status,isSubmitting,handleSubmit);}console.log(\"ERROOORRRSS:::: \",errors);return/*#__PURE__*/React.createElement(GlobalVariadicFormChild,{setFieldValue:setFieldValue,errors:errors,admins:admins,formTypes:formTypes,formType:formType,fields:fields,defaultValues:defaultValues,handleRemoveSubAdmin:handleRemoveSubAdmin,handleSubmitSubAdmin:handleSubmitSubAdmin,handleEditSubAdmin:handleEditSubAdmin,adminIndex:adminIndex// formatDate={formatDate}\n,setFormType:setFormType});}));};export default GlobalVariadicForm;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/presentation/components/forms/GlobalVariadicForm.tsx"],"names":["React","useEffect","useState","Formik","Form","Yup","Box","AdminSectionForm","SelectField","InputField","DatePickerNew","InputMaskField","format","parse","AddressValidationScheme","AddressType","addressTypes","PersonalDocumentValidationScheme","buildValidationSchema","fields","console","log","reduce","schema","field","validation","name","required","string","getAddressType","value","length","normal","toString","fias","GlobalVariadicFormChild","setFieldValue","errors","formType","adminIndex","handleRemoveSubAdmin","handleSubmitSubAdmin","handleEditSubAdmin","setFormType","admins","defaultValues","formTypes","addressType","setAddressType","width","display","flexDirection","justifyContent","alignItems","boxSizing","backgroundColor","zIndex","vertical","textAlign","option","map","index","margin","background","fontWeight","fontSize","fontFamily","section","id","elem","includes","title","label","placeholder","type","options","Date","e","formattedDate","GlobalVariadicForm","handleSubmit","isSubmitting","formID","isValidating","closeOnSubmit","close","onStateChange","initialFields","setFields","object","setSchema","selectedFields","updatedSchema","acc","concat","initialValues","values","setStatus","setSubmitting","resetForm","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Box } from 'grommet';\r\nimport AdminSectionForm from './sections/AdminSectionForm';\r\nimport \"./globalVariadicForm.css\"\r\nimport SelectField from \"../../../common/Form/fields/SelectField\";\r\nimport InputField from \"../../../common/Form/fields/InputField\";\r\nimport {DatePickerNew} from \"../../../common/date-picker-new\";\r\nimport InputMaskField from \"../../../common/Form/InputMaskField/InputMaskField\";\r\nimport {format, parse} from \"date-fns\";\r\nimport {AddressValidationScheme} from \"../../constants/ValidationScheme/AddressValidationScheme\";\r\nimport {AddressType, addressTypes} from \"../../constants/SelectionConstants\";\r\nimport {PersonalDocumentValidationScheme} from \"../../constants/ValidationScheme/PersonalDocumentValidationScheme\";\r\n\r\n\r\n\r\n\r\n// Function to build validation schema based on fields\r\nconst buildValidationSchema = (fields: any) => {\r\n  console.log(fields);\r\n\r\n  return fields.reduce((schema: any, field: any) => {\r\n          if (field.validation) {\r\n              schema[field.name] = field.validation;\r\n          } else if (field.required) {\r\n              schema[field.name] = Yup.string().required('Required');\r\n          }\r\n      return {\r\n            ...schema,\r\n            ...AddressValidationScheme,\r\n            ...PersonalDocumentValidationScheme\r\n          };\r\n  }, {});\r\n};\r\n\r\nconst getAddressType = (value?: string | null) => {\r\n    if (!value || value.length === 0) {\r\n        return AddressType.normal;\r\n    }\r\n    // if ()\r\n    if (value === AddressType.normal.toString()) {\r\n        return AddressType.normal;\r\n    }\r\n    return  AddressType.fias;\r\n}\r\n\r\ninterface GlobalVariadicFormChildProps {\r\n    setFieldValue: any,\r\n    errors: any,\r\n    formType: any,\r\n    adminIndex: any,\r\n    handleRemoveSubAdmin: any,\r\n    handleSubmitSubAdmin: any,\r\n    handleEditSubAdmin: any,\r\n    setFormType: any,\r\n    admins: any,\r\n    fields: any,\r\n    defaultValues: any,\r\n    formTypes: any,\r\n}\r\n\r\nconst GlobalVariadicFormChild = ({\r\n  setFieldValue,\r\n  errors,\r\n  formType,\r\n  adminIndex,\r\n  handleRemoveSubAdmin,\r\n  handleSubmitSubAdmin,\r\n  handleEditSubAdmin,\r\n  setFormType,\r\n  admins,\r\n  fields,\r\n  defaultValues,\r\n  formTypes,\r\n}: GlobalVariadicFormChildProps) => {\r\n  const [addressType, setAddressType] = useState<AddressType>(getAddressType(defaultValues[\"addressType\"]));\r\n\r\n  return (\r\n      <Form className={\"themed_form\"} style={{ width: '100%', display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", boxSizing: 'border-box', backgroundColor: 'white', zIndex: 1000}}>\r\n          <Box direction={\"column\"} width={\"100%\"} justify={\"center\"}>\r\n              <Box pad={{ vertical: 'small' }} justify=\"center\" width={\"100%\"}>\r\n                  <h1 style={{ textAlign: \"center\" }}>Добавить запись {formType}</h1>\r\n              </Box>\r\n              <Box direction={\"row\"} width={\"100%\"} justify={\"center\"}>\r\n                  <Box direction={\"column\"} width={\"340px\"} justify={\"center\"}>\r\n                      <SelectField\r\n                          name=\"type\"\r\n                          options={formTypes}\r\n                          label=\"Тип\"\r\n                          onChange={(option) => {\r\n                                  setFormType(option.value);\r\n                                  setFieldValue('type', option.value);\r\n                          }}\r\n                      />\r\n                  </Box>\r\n              </Box>\r\n              {fields.map((field: any, index: number) => (\r\n                  <React.Fragment key={index}>\r\n                          <hr style={{margin: \"16px 0\"}}/>\r\n                      <Box direction={\"row\"} width={\"100%\"} justify={\"center\"}>\r\n                          <Box direction={\"column\"} width={\"340px\"} justify={\"center\"}>\r\n\r\n                      {index !== 0 && (\r\n                          <Box width={\"100%\"} pad={{ vertical: '10px' }}>\r\n                              <h3 style={{ textAlign: \"center\", background: \"#fcfcfc\", fontWeight: 300, fontSize: \"20px\", fontFamily: \"Roboto, Arial, Helvetica Neue\"}}>{field.section}</h3>\r\n                          </Box>\r\n                      )}\r\n\r\n                      {/* Address Field Handling */}\r\n                      {field.id === 'address' &&\r\n                      <>\r\n                          <SelectField\r\n                              // has\r\n                              name=\"addressType\"\r\n                              options={addressTypes}\r\n                              label=\"Тип адреса\"\r\n                              onChange={(option) => {\r\n                                  setAddressType(option.value === AddressType.normal.toString() ? AddressType.normal : AddressType.fias);\r\n                                  setFieldValue('addressType', option.value);\r\n                              }}/>\r\n                         { field.fields.map((elem: any) => {\r\n                              if (addressType === AddressType.normal && ['regionCode', 'Index', 'Province', 'city', 'settlement', 'street', 'house', 'block', 'flat'].includes(elem.name)) {\r\n                                  return (\r\n                                      <InputField\r\n                                          key={elem.name}\r\n                                          title={elem.title}\r\n                                          name={elem.name}\r\n                                          label={elem.label}\r\n                                          placeholder={elem.placeholder}\r\n                                      />\r\n                                  );\r\n                              }\r\n                              if (addressType === AddressType.fias && ['regionCode', 'fiasId', 'fiasText'].includes(elem.name)) {\r\n                                  if (elem.name === \"fiasId\")\r\n                                      return <InputMaskField\r\n                                          key={elem.name}\r\n                                          title={elem.title}\r\n                                          name={elem.name}\r\n                                          label={elem.label}\r\n                                          value={elem.value}\r\n                                          mask={\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}\r\n                                          maskReg={/[-\\s]/}\r\n                                          placeholder={elem.placeholder}\r\n                                      />;\r\n                                  return (\r\n                                      <InputField\r\n                                          value={elem.value}\r\n                                          key={elem.name}\r\n                                          title={elem.title}\r\n                                          name={elem.name}\r\n                                          label={elem.label}\r\n                                          placeholder={elem.placeholder}\r\n                                      />\r\n                                  );\r\n                              }\r\n                              return null;\r\n                          })}\r\n                          </>\r\n                      }\r\n\r\n                      {/* Non-Address Fields */}\r\n                      {field.id !== 'address' &&\r\n                          field.fields.map((elem: any) => {\r\n                              switch (elem.type) {\r\n                                  case 'input':\r\n                                      if (elem.name === \"socialNumber\")\r\n                                          return <InputMaskField\r\n                                              value={elem.value}\r\n                                              key={elem.name}\r\n                                              title={elem.title}\r\n                                              name={elem.name}\r\n                                              label={elem.label}\r\n                                              mask={\"xxx-xxx-xxx xx\"}\r\n                                              maskReg={/[-\\s]/}\r\n                                              placeholder={elem.placeholder}\r\n                                          />;\r\n                                      return (\r\n                                          <InputField\r\n                                              value={elem.value}\r\n                                              key={elem.name}\r\n                                              title={elem.title}\r\n                                              name={elem.name}\r\n                                              label={elem.label}\r\n                                              placeholder={elem.placeholder}\r\n                                          />\r\n                                      );\r\n                                  case 'select':\r\n                                      return (\r\n                                          <SelectField\r\n                                              key={elem.name}\r\n                                              name={elem.name}\r\n                                              label={elem.label}\r\n                                              options={elem.options}\r\n                                          />\r\n                                      );\r\n                                  case 'date':\r\n                                      return (\r\n                                          <DatePickerNew\r\n                                              error={errors[elem.name]}\r\n                                              key={elem.name}\r\n                                              required={elem.required}\r\n                                              name={elem.name}\r\n                                              label={elem.label}\r\n                                              value={defaultValues[elem.name] ? parse(defaultValues[elem.name], \"dd.MM.yyyy\", new Date()) : field.value}\r\n                                              onChange={(e) => {\r\n                                                  const formattedDate = format(e, 'dd.MM.yyyy');\r\n                                                  setFieldValue(elem.name, formattedDate);\r\n                                              }}\r\n                                              title=\"Введите дату в формате dd.mm.yyyy\"\r\n                                              placeholder=\"Формат: ДД.ММ.ГГГГ\"\r\n                                          />\r\n                                      );\r\n                                  case 'button':\r\n                                      return <AdminSectionForm\r\n                                          adminIndex={adminIndex}\r\n                                          admins={admins}\r\n                                          handleRemoveSubAdmin={handleRemoveSubAdmin}\r\n                                          handleSubmitSubAdmin={handleSubmitSubAdmin}\r\n                                          handleEditSubAdmin={handleEditSubAdmin}\r\n                                          setFieldValue={setFieldValue} />;\r\n                                  default:\r\n                                      return null;\r\n                              }\r\n                          })\r\n                      }\r\n                      </Box>\r\n                      </Box>\r\n                  </React.Fragment>\r\n              ))}\r\n          </Box>\r\n      </Form>\r\n  );\r\n}\r\n\r\ninterface GlobalVariadicFormProps {\r\n    handleSubmit: any;\r\n    isSubmitting: boolean;\r\n    handleSubmitSubAdmin?: any;\r\n    handleRemoveSubAdmin?: any;\r\n    handleEditSubAdmin?: any;\r\n    adminIndex?: any,\r\n    close?: any;\r\n    formID?: any;\r\n    admins?: any\r\n    onStateChange?: (status?: string, isSubmitting?: boolean, handleSubmit?: any) => void;\r\n    formTypes: any,\r\n    isValidating?: boolean | null;\r\n    closeOnSubmit?: any;\r\n    initialFields: any,\r\n    defaultValues: any\r\n}\r\n\r\n\r\nconst GlobalVariadicForm: React.FC<GlobalVariadicFormProps> = ({ handleSubmit, isSubmitting, formID, isValidating, handleRemoveSubAdmin, closeOnSubmit, handleSubmitSubAdmin, handleEditSubAdmin ,admins, adminIndex, close, formTypes, onStateChange, initialFields, defaultValues = {} }: GlobalVariadicFormProps) => {\r\n  const [formType, setFormType] = useState(defaultValues[\"type\"]);\r\n  const [fields, setFields] = useState([]);\r\n\r\n    console.log(\"KJKKKKKKK:::: \", isValidating);\r\n  // Handle schema state\r\n  const [schema, setSchema] = useState(Yup.object({}));\r\n\r\n  useEffect(() => {\r\n    // Update fields when formType changes\r\n      if (formType) {\r\n          const selectedFields = initialFields[formType!] || [];\r\n          setFields(selectedFields);\r\n      }\r\n  }, [formType, initialFields]);\r\n\r\n  useEffect(() => {\r\n    const updatedSchema = Yup.object({\r\n      type: Yup.string().required('Required'),\r\n      addressType: Yup.string().required('Required'),\r\n      ...buildValidationSchema(fields.reduce((acc: any, section: any) => acc.concat(section.fields), [])),\r\n    });\r\n    setSchema(updatedSchema);\r\n    console.log(updatedSchema);\r\n    \r\n  }, [fields]);\r\n\r\n  const initialValues = fields.reduce(\r\n    (acc: any, section: any) => ({\r\n      ...acc,\r\n      ...section.fields.reduce(\r\n        (acc: any, field: any) => ({\r\n          ...acc,\r\n          [field.name]: defaultValues[field.name] ?? '',  // Use default value if provided\r\n        }),\r\n        {}\r\n      ),\r\n    }),\r\n    { type: formType, addressType: AddressType.normal.toString()},\r\n  );\r\n\r\n  return (\r\n    <Box justify=\"center\" align=\"center\" direction=\"column\" width={\"100%\"} gap=\"20px\" >\r\n      <Formik\r\n          key={formID}\r\n          // isValidating={isValidating}\r\n        initialValues={initialValues}\r\n        validationSchema={(isValidating ?? true) ? schema : Yup.object({})}\r\n        enableReinitialize={true}\r\n        onSubmit={async (values, { setStatus, setSubmitting, resetForm }) => {\r\n          try {\r\n            await handleSubmit(values);\r\n            setStatus(null);\r\n            setSubmitting(isSubmitting);\r\n            if (!isSubmitting) {\r\n                if (closeOnSubmit) {\r\n                    closeOnSubmit!();\r\n                } else if (close) {\r\n                    close();\r\n                }\r\n                resetForm();\r\n            }\r\n          } catch (error) {\r\n            setStatus('Something went wrong. Please try again.');\r\n            setSubmitting(false);\r\n\r\n          }\r\n        }}\r\n      >\r\n          {({setFieldValue, isSubmitting, handleSubmit, status, values, errors})=> {\r\n              if (onStateChange != null) {\r\n                  onStateChange!(status, isSubmitting, handleSubmit);\r\n              }\r\n              console.log(\"ERROOORRRSS:::: \", errors)\r\n              return (<GlobalVariadicFormChild\r\n                  setFieldValue={setFieldValue}\r\n                  errors={errors}\r\n                  admins={admins}\r\n                  formTypes={formTypes}\r\n                  formType={formType}\r\n                  fields={fields}\r\n                  defaultValues={defaultValues}\r\n                  handleRemoveSubAdmin={handleRemoveSubAdmin}\r\n                  handleSubmitSubAdmin={handleSubmitSubAdmin}\r\n                  handleEditSubAdmin={handleEditSubAdmin}\r\n                  adminIndex={adminIndex}\r\n                  // formatDate={formatDate}\r\n                  setFormType={setFormType}\r\n              />\r\n          );}}\r\n\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default GlobalVariadicForm;\r\n"]},"metadata":{},"sourceType":"module"}