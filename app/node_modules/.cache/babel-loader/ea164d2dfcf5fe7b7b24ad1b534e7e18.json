{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport AuthHandlerBase from '../AuthHandlerBase';\nimport AuthRequest from '../../AuthRequest';\nimport Environment from '../../../Environment';\n\nvar AjaxGetLoginStringHandler = /*#__PURE__*/function (_AuthHandlerBase) {\n  _inherits(AjaxGetLoginStringHandler, _AuthHandlerBase);\n\n  var _super = _createSuper(AjaxGetLoginStringHandler);\n\n  function AjaxGetLoginStringHandler() {\n    _classCallCheck(this, AjaxGetLoginStringHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AjaxGetLoginStringHandler, [{\n    key: \"auth\",\n    value: function auth(request) {\n      var _this = this;\n\n      _get(_getPrototypeOf(AjaxGetLoginStringHandler.prototype), \"auth\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var url = '/loginString';\n\n        var successHandler = function successHandler(response) {\n          var loginStringRequest = AuthRequest.clone(request);\n          loginStringRequest.loginString = response.login_string;\n          return _this.doNextHandler(loginStringRequest);\n        };\n\n        var failHandler = function failHandler(error) {\n          var errorRequest = AuthRequest.clone(request);\n          errorRequest.error = _get(_getPrototypeOf(AjaxGetLoginStringHandler.prototype), \"createAuthError\", _this).call(_this, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441 \".concat(url), error);\n          return _this.doNextHandler(errorRequest);\n        };\n\n        return Environment.getAuthGateway().loginString().then(successHandler).catch(failHandler);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(AjaxGetLoginStringHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return !!request.certificate;\n    }\n  }]);\n\n  return AjaxGetLoginStringHandler;\n}(AuthHandlerBase);\n\nexport default AjaxGetLoginStringHandler;","map":{"version":3,"sources":["../../../../../src/application/auth/handlers/auth/AjaxGetLoginStringHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,OAAO,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP,MAAwB,sBAAxB;;IAEM,yB;;;;;;;;;;;;;yBACC,O,EAAO;AAAA;;AACV,0FAAW,OAAX;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,GAAG,GAAG,cAAZ;;AACA,YAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,QAAD,EAAa;AAClC,cAAM,kBAAkB,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAA3B;AACA,UAAA,kBAAkB,CAAC,WAAnB,GAAiC,QAAQ,CAAC,YAA1C;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,kBAAnB,CAAP;AACD,SAJD;;AAMA,YAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAU;AAC5B,cAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAArB;AACA,UAAA,YAAY,CAAC,KAAb,mJAAqD,GAArD,GAA4D,KAA5D;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,YAAnB,CAAP;AACD,SAJD;;AAMA,eAAO,WAAW,CAAC,cAAZ,GAA6B,WAA7B,GACJ,IADI,CACC,cADD,EAEJ,KAFI,CAEE,WAFF,CAAP;AAGD;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,+FAAgB,OAAhB;;AACA,aAAO,CAAC,CAAC,OAAO,CAAC,WAAjB;AACD;;;;EA3BqC,e;;AA8BxC,eAAe,yBAAf","sourceRoot":"","sourcesContent":["import AuthHandlerBase from '../AuthHandlerBase';\r\nimport AuthRequest from '../../AuthRequest';\r\nimport Environment from '../../../Environment';\r\nclass AjaxGetLoginStringHandler extends AuthHandlerBase {\r\n    auth(request) {\r\n        super.auth(request);\r\n        if (this.canHandle(request)) {\r\n            const url = '/loginString';\r\n            const successHandler = (response) => {\r\n                const loginStringRequest = AuthRequest.clone(request);\r\n                loginStringRequest.loginString = response.login_string;\r\n                return this.doNextHandler(loginStringRequest);\r\n            };\r\n            const failHandler = (error) => {\r\n                const errorRequest = AuthRequest.clone(request);\r\n                errorRequest.error = super.createAuthError(`Запрос ${url}`, error);\r\n                return this.doNextHandler(errorRequest);\r\n            };\r\n            return Environment.getAuthGateway().loginString()\r\n                .then(successHandler)\r\n                .catch(failHandler);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        return !!request.certificate;\r\n    }\r\n}\r\nexport default AjaxGetLoginStringHandler;\r\n//# sourceMappingURL=AjaxGetLoginStringHandler.js.map"]},"metadata":{},"sourceType":"module"}