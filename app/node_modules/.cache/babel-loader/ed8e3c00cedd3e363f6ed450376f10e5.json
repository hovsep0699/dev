{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Button,Icons}from'@distate/components';import{Pagination}from'../../../../common/pagination';import{getEmployeeContractorGroups,deleteEmployeeContractorGroups}from'../../store/actions';import{selectEmployeeContractorGroupRows,selectEmployeeContractorGroupTotal}from'../../store/selectors';import{EmployeeContractorGroupsSubmodal}from'./EmployeeContractorGroupsSubmodal';/** Группы контрагентов */export var EmployeeContractorGroups=function EmployeeContractorGroups(props){var id=props.id;var dispatch=useDispatch();var rows=useSelector(selectEmployeeContractorGroupRows);var recordsTotal=useSelector(selectEmployeeContractorGroupTotal);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),offset=_useState2[0],setOffset=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpenSubmodal=_useState4[0],setIsOpenSubmodal=_useState4[1];useEffect(function(){id&&dispatch(getEmployeeContractorGroups({id:id,props:{offset:offset}}));},[dispatch,id,offset]);var onDelete=function onDelete(groupId){dispatch(deleteEmployeeContractorGroups({groupId:groupId,employeeId:id}));};/** открытие модалки добавления группы контрагентов сотруднику */var onOpenGropListModal=function onOpenGropListModal(){setIsOpenSubmodal(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"header\"},\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u044B \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\\u043E\\u0432\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"common-table-head\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{align:\"left\"},\"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430 \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\\u043E\\u0432\"),/*#__PURE__*/React.createElement(\"td\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,rows===null||rows===void 0?void 0:rows.map(function(item){var id=item.id,title=item.title;return/*#__PURE__*/React.createElement(\"tr\",{key:id},/*#__PURE__*/React.createElement(\"td\",null,title),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconTrash,{fill:\"currentColor\"}),onClick:function onClick(){return onDelete(id);}},\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));})),/*#__PURE__*/React.createElement(\"tfoot\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconPlus,{fill:\"currentColor\"}),onClick:onOpenGropListModal},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-right\"},/*#__PURE__*/React.createElement(Pagination,{setOffset:setOffset,listLength:recordsTotal})))))),/*#__PURE__*/React.createElement(EmployeeContractorGroupsSubmodal,{hide:function hide(){return setIsOpenSubmodal(false);},isVisible:isOpenSubmodal,id:id}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/staff/EmployeeContractorGroups.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","Icons","Pagination","getEmployeeContractorGroups","deleteEmployeeContractorGroups","selectEmployeeContractorGroupRows","selectEmployeeContractorGroupTotal","EmployeeContractorGroupsSubmodal","EmployeeContractorGroups","props","id","dispatch","rows","recordsTotal","offset","setOffset","isOpenSubmodal","setIsOpenSubmodal","onDelete","groupId","employeeId","onOpenGropListModal","map","item","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Icons } from '@distate/components';\r\nimport { Pagination } from '../../../../common/pagination';\r\nimport { getEmployeeContractorGroups, deleteEmployeeContractorGroups } from '../../store/actions';\r\nimport {\r\n  selectEmployeeContractorGroupRows,\r\n  selectEmployeeContractorGroupTotal\r\n} from '../../store/selectors';\r\nimport { EmployeeContractorGroupsSubmodal } from './EmployeeContractorGroupsSubmodal';\r\n\r\ntype Props = {\r\n  id: number;\r\n};\r\n\r\n/** Группы контрагентов */\r\nexport const EmployeeContractorGroups = (props: Props) => {\r\n  const { id } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const rows = useSelector(selectEmployeeContractorGroupRows);\r\n  const recordsTotal = useSelector(selectEmployeeContractorGroupTotal);\r\n\r\n  const [offset, setOffset] = useState(0);\r\n  const [isOpenSubmodal, setIsOpenSubmodal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    id && dispatch(getEmployeeContractorGroups({ id, props: { offset } }));\r\n  }, [dispatch, id, offset]);\r\n\r\n  const onDelete = (groupId: number) => {\r\n    dispatch(deleteEmployeeContractorGroups({ groupId, employeeId: id }));\r\n  };\r\n\r\n  /** открытие модалки добавления группы контрагентов сотруднику */\r\n  const onOpenGropListModal = () => {\r\n    setIsOpenSubmodal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"header\">Группы контрагентов</h3>\r\n\r\n      <table className=\"table\">\r\n        <thead className=\"common-table-head\">\r\n          <tr>\r\n            <td align=\"left\">Группа контрагентов</td>\r\n            <td></td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows?.map(item => {\r\n            const { id, title } = item;\r\n            return (\r\n              <tr key={id}>\r\n                <td>{title}</td>\r\n                <td align=\"right\">\r\n                  <Button\r\n                    icon={<Icons.IconTrash fill=\"currentColor\" />}\r\n                    onClick={() => onDelete(id)}\r\n                  >\r\n                    Удалить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              <Button icon={<Icons.IconPlus fill=\"currentColor\" />} onClick={onOpenGropListModal}>\r\n                Добавить\r\n              </Button>\r\n            </td>\r\n            <td>\r\n              <div className=\"pagination-right\">\r\n                <Pagination setOffset={setOffset} listLength={recordsTotal} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n      <EmployeeContractorGroupsSubmodal\r\n        hide={() => setIsOpenSubmodal(false)}\r\n        isVisible={isOpenSubmodal}\r\n        id={id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}