{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport AuthHandlerBase from '../AuthHandlerBase';\nimport { CertificateService } from '../../../certificate/CertificateService';\nimport AuthRequest from '../../AuthRequest';\n\nvar SignLoginStringHandler = /*#__PURE__*/function (_AuthHandlerBase) {\n  _inherits(SignLoginStringHandler, _AuthHandlerBase);\n\n  var _super = _createSuper(SignLoginStringHandler);\n\n  function SignLoginStringHandler() {\n    _classCallCheck(this, SignLoginStringHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignLoginStringHandler, [{\n    key: \"auth\",\n    value: function auth(request) {\n      var _this = this;\n\n      _get(_getPrototypeOf(SignLoginStringHandler.prototype), \"auth\", this).call(this, request);\n\n      if (this.canHandle(request)) {\n        var successHandler = function successHandler(loginStringSignedData) {\n          var signedLoginStringRequest = AuthRequest.clone(request);\n          signedLoginStringRequest.loginStringSignedData = loginStringSignedData;\n          return _this.doNextHandler(signedLoginStringRequest);\n        };\n\n        var failHandler = function failHandler(error) {\n          var errorRequest = AuthRequest.clone(request);\n          errorRequest.error = _get(_getPrototypeOf(SignLoginStringHandler.prototype), \"createAuthError\", _this).call(_this, 'Не удалось подписать loginString', error);\n          return _this.doNextHandler(errorRequest);\n        };\n\n        return CertificateService.sign(request.loginString, request.certificate.thumbprint).then(successHandler).catch(failHandler);\n      }\n\n      return this.doNextHandler(request);\n    }\n  }, {\n    key: \"canHandle\",\n    value: function canHandle(request) {\n      _get(_getPrototypeOf(SignLoginStringHandler.prototype), \"canHandle\", this).call(this, request);\n\n      return !!request.loginString && !!request.certificate;\n    }\n  }]);\n\n  return SignLoginStringHandler;\n}(AuthHandlerBase);\n\nexport default SignLoginStringHandler;","map":{"version":3,"sources":["../../../../../src/application/auth/handlers/auth/SignLoginStringHandler.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,eAAP,MAA4B,oBAA5B;AACA,SAAS,kBAAT,QAAmC,yCAAnC;AACA,OAAO,WAAP,MAAwB,mBAAxB;;IAEM,sB;;;;;;;;;;;;;yBACC,O,EAAO;AAAA;;AACV,uFAAW,OAAX;;AACA,UAAI,KAAK,SAAL,CAAe,OAAf,CAAJ,EAA6B;AAC3B,YAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,qBAAD,EAA0B;AAC/C,cAAM,wBAAwB,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAAjC;AACA,UAAA,wBAAwB,CAAC,qBAAzB,GAAiD,qBAAjD;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,wBAAnB,CAAP;AACD,SAJD;;AAKA,YAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAU;AAC5B,cAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,OAAlB,CAArB;AACA,UAAA,YAAY,CAAC,KAAb,iGAA2C,kCAA3C,EAA+E,KAA/E;AACA,iBAAO,KAAI,CAAC,aAAL,CAAmB,YAAnB,CAAP;AACD,SAJD;;AAKA,eAAO,kBAAkB,CAAC,IAAnB,CAAwB,OAAO,CAAC,WAAhC,EAA6C,OAAO,CAAC,WAAR,CAAoB,UAAjE,EACJ,IADI,CACC,cADD,EAEJ,KAFI,CAEE,WAFF,CAAP;AAGD;;AACD,aAAO,KAAK,aAAL,CAAmB,OAAnB,CAAP;AACD;;;8BAES,O,EAAO;AACf,4FAAgB,OAAhB;;AACA,aAAO,CAAC,CAAC,OAAO,CAAC,WAAV,IAAyB,CAAC,CAAC,OAAO,CAAC,WAA1C;AACD;;;;EAxBkC,e;;AA2BrC,eAAe,sBAAf","sourceRoot":"","sourcesContent":["import AuthHandlerBase from '../AuthHandlerBase';\r\nimport { CertificateService } from '../../../certificate/CertificateService';\r\nimport AuthRequest from '../../AuthRequest';\r\nclass SignLoginStringHandler extends AuthHandlerBase {\r\n    auth(request) {\r\n        super.auth(request);\r\n        if (this.canHandle(request)) {\r\n            const successHandler = (loginStringSignedData) => {\r\n                const signedLoginStringRequest = AuthRequest.clone(request);\r\n                signedLoginStringRequest.loginStringSignedData = loginStringSignedData;\r\n                return this.doNextHandler(signedLoginStringRequest);\r\n            };\r\n            const failHandler = (error) => {\r\n                const errorRequest = AuthRequest.clone(request);\r\n                errorRequest.error = super.createAuthError('Не удалось подписать loginString', error);\r\n                return this.doNextHandler(errorRequest);\r\n            };\r\n            return CertificateService.sign(request.loginString, request.certificate.thumbprint)\r\n                .then(successHandler)\r\n                .catch(failHandler);\r\n        }\r\n        return this.doNextHandler(request);\r\n    }\r\n    canHandle(request) {\r\n        super.canHandle(request);\r\n        return !!request.loginString && !!request.certificate;\r\n    }\r\n}\r\nexport default SignLoginStringHandler;\r\n//# sourceMappingURL=SignLoginStringHandler.js.map"]},"metadata":{},"sourceType":"module"}