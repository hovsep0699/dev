{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";var _class,_temp;import autobind from\"autobind-decorator\";import{PrincipalEntity}from\"../entity/PrincipalEntity\";import{PrincipalAdmin}from\"./PrincipalAdmin\";import{ForeignOrganizationJsonConverter}from\"../../data/converter/ForeignOrganizationJsonConverter\";import{OrganizationJsonConverter}from\"../../data/converter/OrganizationJsonConverter\";import{IndividualPersonJsonConverter}from\"../../data/converter/IndividualPersonJsonConverter\";import{PrincipalTypes}from\"../../presentation/constants/options/types\";import{compareArrays,deepEqual}from\"../../utils/json_hepler\";export var Principal=(_class=(_temp=/*#__PURE__*/function(){function Principal(admins,fields){_classCallCheck(this,Principal);this.admins=void 0;this.fields=void 0;this.admins=admins!==null&&admins!==void 0?admins:new Array();this.fields=fields!==null&&fields!==void 0?fields:{};}_createClass(Principal,[{key:\"copyWith\",value:function copyWith(_ref){var admins=_ref.admins,fields=_ref.fields;return new Principal(admins!==null&&admins!==void 0?admins:this.admins,fields!==null&&fields!==void 0?fields:this.fields);}},{key:\"addAdmin\",value:function addAdmin(admin){this.admins.push(new PrincipalAdmin(admin));}},{key:\"removeAdmin\",value:function removeAdmin(index){this.admins.splice(index,1);}},{key:\"getAdmins\",value:function getAdmins(){return this.admins;}},{key:\"getAdmin\",value:function getAdmin(index){return this.admins[index];}},{key:\"changeAdmin\",value:function changeAdmin(index,admin){if(index>=0&&index<this.admins.length){this.admins[index]=admin;}else{throw new Error(\"Invalid index for editing admin \".concat(index));}}},{key:\"editAdmin\",value:function editAdmin(index,admin){if(index>=0&&index<this.admins.length){this.admins[index].setFields(admin);}else{throw new Error(\"Invalid index for editing admin \".concat(index));}}},{key:\"setFields\",value:function setFields(fields){this.fields=fields;}},{key:\"getFields\",value:function getFields(){return this.fields;}},{key:\"toEntity\",value:function toEntity(){return new PrincipalEntity(this);}},{key:\"compare\",value:function compare(other){return compareArrays(this.getAdmins(),other.getAdmins())&&deepEqual(this.getFields(),other.getFields());}},{key:\"toFlatJson\",value:function toFlatJson(){var fields=this.getFields();var currentType=fields[\"type\"];var directors=this.admins.map(function(admin){return admin.toFlatJson();});switch(currentType){case PrincipalTypes.IP:return{individualEntrepreneur:IndividualPersonJsonConverter.toFlatJson(fields)};case PrincipalTypes.INUL:return{foreignOrg:{organization:ForeignOrganizationJsonConverter.toFlatJson(fields),directors:directors}};case PrincipalTypes.UL:return{russianOrg:{organization:OrganizationJsonConverter.toFlatJson(fields),directors:directors}};default:return{};}}}]);return Principal;}(),_temp),(_applyDecoratedDescriptor(_class.prototype,\"copyWith\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"copyWith\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"addAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"addAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"removeAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"removeAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getAdmins\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getAdmins\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"changeAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"changeAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"editAdmin\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"editAdmin\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setFields\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"setFields\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getFields\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"getFields\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"toEntity\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"toEntity\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"compare\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"compare\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"toFlatJson\",[autobind],Object.getOwnPropertyDescriptor(_class.prototype,\"toFlatJson\"),_class.prototype)),_class);","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/domain/model/Principal.tsx"],"names":["autobind","PrincipalEntity","PrincipalAdmin","ForeignOrganizationJsonConverter","OrganizationJsonConverter","IndividualPersonJsonConverter","PrincipalTypes","compareArrays","deepEqual","Principal","admins","fields","Array","admin","push","index","splice","length","Error","setFields","other","getAdmins","getFields","currentType","directors","map","toFlatJson","IP","individualEntrepreneur","INUL","foreignOrg","organization","UL","russianOrg"],"mappings":"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","sourcesContent":["import autobind from \"autobind-decorator\";\r\nimport {PrincipalEntity} from \"../entity/PrincipalEntity\";\r\nimport {PrincipalAdmin} from \"./PrincipalAdmin\";\r\nimport {ForeignOrganizationJsonConverter} from \"../../data/converter/ForeignOrganizationJsonConverter\";\r\nimport {OrganizationJsonConverter} from \"../../data/converter/OrganizationJsonConverter\";\r\nimport {IndividualPersonJsonConverter} from \"../../data/converter/IndividualPersonJsonConverter\";\r\nimport {PrincipalTypes} from \"../../presentation/constants/options/types\";\r\nimport {compareArrays, deepEqual} from \"../../utils/json_hepler\";\r\nimport {IModel} from \"./IModel\";\r\n\r\nexport interface PrincipalProps {\r\n    admins?: PrincipalAdmin[] | null\r\n    fields?: any | null\r\n}\r\n\r\n\r\nexport class Principal implements IModel<Principal, PrincipalProps>{\r\n    private admins: PrincipalAdmin[];\r\n    private fields: any;\r\n\r\n    constructor(admins?: PrincipalAdmin[] | null, fields?: any | null) {\r\n        this.admins = admins ?? new Array<PrincipalAdmin>();\r\n        this.fields = fields ?? {};\r\n    }\r\n\r\n    @autobind\r\n    copyWith({admins, fields}: PrincipalProps): Principal {\r\n        return new Principal(admins ?? this.admins, fields ?? this.fields);\r\n    }\r\n\r\n    @autobind\r\n    public addAdmin(admin: any) {\r\n        this.admins.push(new PrincipalAdmin(admin));\r\n    }\r\n\r\n    @autobind\r\n    public removeAdmin(index: number) {\r\n        this.admins.splice(index, 1);\r\n    }\r\n\r\n    @autobind\r\n    public getAdmins(): PrincipalAdmin[] {\r\n        return this.admins;\r\n    }\r\n\r\n    @autobind\r\n    public getAdmin(index: number): PrincipalAdmin {\r\n        return this.admins[index];\r\n    }\r\n\r\n    @autobind\r\n    public changeAdmin(index: number, admin: PrincipalAdmin) {\r\n        if (index >= 0 && index < this.admins.length) {\r\n            this.admins[index] = admin;\r\n        }\r\n        else {\r\n            throw new Error(`Invalid index for editing admin ${index}`);\r\n        }\r\n    }\r\n\r\n    @autobind\r\n    public editAdmin(index: number, admin: any) {\r\n        if (index >= 0 && index < this.admins.length) {\r\n            this.admins[index].setFields(admin);\r\n        } else {\r\n            throw new Error(`Invalid index for editing admin ${index}`);\r\n        }\r\n    }\r\n\r\n    @autobind\r\n    public setFields(fields: any) {\r\n        this.fields = fields;\r\n    }\r\n\r\n    @autobind\r\n    public getFields(): Record<string, any> {\r\n        return this.fields;\r\n    }\r\n\r\n    @autobind\r\n    public toEntity(): Record<string, any> | null {\r\n        return new PrincipalEntity(this);\r\n    }\r\n\r\n    @autobind\r\n    public compare(other: Principal): boolean {\r\n        return compareArrays<PrincipalAdmin>(this.getAdmins(), other.getAdmins()) && deepEqual(this.getFields(), other.getFields());\r\n    }\r\n\r\n    @autobind\r\n    toFlatJson(): Record<string, any> {\r\n        const fields: Record<string, any> = this.getFields();\r\n        const currentType: string = fields[\"type\"];\r\n\r\n        const directors: Record<string, any>[] = this.admins.map((admin: PrincipalAdmin) => admin.toFlatJson());\r\n\r\n        switch (currentType) {\r\n            case PrincipalTypes.IP:\r\n                return {\r\n                    individualEntrepreneur: IndividualPersonJsonConverter.toFlatJson(fields)\r\n                }\r\n            case PrincipalTypes.INUL:\r\n                return {\r\n                    foreignOrg: {\r\n                        organization: ForeignOrganizationJsonConverter.toFlatJson(fields),\r\n                        directors: directors\r\n                    }\r\n                }\r\n            case PrincipalTypes.UL:\r\n                return {\r\n                    russianOrg: {\r\n                        organization: OrganizationJsonConverter.toFlatJson(fields),\r\n                        directors: directors\r\n                    }\r\n                }\r\n            default:\r\n                return {}\r\n\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}