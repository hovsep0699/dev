{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{forwardRef}from'react';import DatePicker from'react-datepicker';import'./DateInput.styles.css';import styled from'styled-components';import{StyledInput,InputWrapper,StyledIconCalendar}from'../Form.styles';import{parse}from'date-fns';import ru from'date-fns/locale/ru';import getMaskedValue from'../utils/getMaskedValue';import{dateMask}from'../utils/masks';var StyledDateInput=styled(StyledInput).withConfig({displayName:\"DateInput__StyledDateInput\",componentId:\"lruxdc-0\"})([\"padding-right:\",\"px;\"],function(_ref){var theme=_ref.theme;return parseInt(theme.main.sizes.padding)*2;});var MaskedDateInput=forwardRef(function(_ref2,ref){var value=_ref2.value,rest=_objectWithoutProperties(_ref2,[\"value\"]);var maskedValue=getMaskedValue(dateMask,value);return/*#__PURE__*/React.createElement(StyledDateInput,Object.assign({ref:ref,value:maskedValue},rest));});var DateInput=function DateInput(_ref3){var value=_ref3.value,hasError=_ref3.hasError,touched=_ref3.touched,hideErrors=_ref3.hideErrors,placeholder=_ref3.placeholder,name=_ref3.name,_onChange=_ref3.onChange,onFocus=_ref3.onFocus,dateFormat=_ref3.dateFormat;var isValueEmpty=value==='';var selected;if(!isValueEmpty){var maskedValue=getMaskedValue(dateMask,value);selected=parse(maskedValue,dateFormat!==null&&dateFormat!==void 0?dateFormat:new Date().toDateString(),new Date());}return/*#__PURE__*/React.createElement(InputWrapper,null,/*#__PURE__*/React.createElement(DatePicker,{name:name,selected:selected,onChange:function onChange(e){return _onChange?_onChange(e):null;},onFocus:onFocus,dateFormat:dateFormat,locale:ru,placeholderText:placeholder||'Дата',title:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 \\u0434\\u0434.\\u043C\\u043C.\\u0433\\u0433\\u0433\\u0433\",popperPlacement:\"bottom-start\",popperModifiers:{flip:{behavior:['bottom']},preventOverflow:{enabled:false},hide:{enabled:false}},customInput:/*#__PURE__*/React.createElement(MaskedDateInput,{error:hasError,touched:touched,hideErrors:hideErrors})}),/*#__PURE__*/React.createElement(StyledIconCalendar,null));};export default DateInput;","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/POA/MCHD_ROOT/common/Form/elements/DateInput.tsx"],"names":["React","forwardRef","DatePicker","styled","StyledInput","InputWrapper","StyledIconCalendar","parse","ru","getMaskedValue","dateMask","StyledDateInput","theme","parseInt","main","sizes","padding","MaskedDateInput","ref","value","rest","maskedValue","DateInput","hasError","touched","hideErrors","placeholder","name","onChange","onFocus","dateFormat","isValueEmpty","selected","Date","toDateString","e","flip","behavior","preventOverflow","enabled","hide"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,CAAsBC,YAAtB,CAAoCC,kBAApC,KAA8D,gBAA9D,CACA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAOC,CAAAA,EAAP,KAAe,oBAAf,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,eAAe,CAAGR,MAAM,CAAMC,WAAN,CAAT,wGACF,kBAAGQ,CAAAA,KAAH,MAAGA,KAAH,OAAeC,CAAAA,QAAQ,CAACD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBC,OAAlB,CAAR,CAAqC,CAApD,EADE,CAArB,CAIA,GAAMC,CAAAA,eAAe,CAAGhB,UAAU,CAAC,eAA0BiB,GAA1B,CAAkC,IAA/BC,CAAAA,KAA+B,OAA/BA,KAA+B,CAArBC,IAAqB,2CACnE,GAAMC,CAAAA,WAAW,CAAGZ,cAAc,CAACC,QAAD,CAAWS,KAAX,CAAlC,CACA,mBAAO,oBAAC,eAAD,gBAAiB,GAAG,CAAED,GAAtB,CAA2B,KAAK,CAAEG,WAAlC,EAAmDD,IAAnD,EAAP,CACD,CAHiC,CAAlC,CAkBA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAUD,IATfH,CAAAA,KASe,OATfA,KASe,CARfI,QAQe,OARfA,QAQe,CAPfC,OAOe,OAPfA,OAOe,CANfC,UAMe,OANfA,UAMe,CALfC,WAKe,OALfA,WAKe,CAJfC,IAIe,OAJfA,IAIe,CAHfC,SAGe,OAHfA,QAGe,CAFfC,OAEe,OAFfA,OAEe,CADfC,UACe,OADfA,UACe,CACf,GAAMC,CAAAA,YAAY,CAAGZ,KAAK,GAAK,EAA/B,CACA,GAAIa,CAAAA,QAAJ,CAEA,GAAI,CAACD,YAAL,CAAmB,CACjB,GAAMV,CAAAA,WAAW,CAAGZ,cAAc,CAACC,QAAD,CAAWS,KAAX,CAAlC,CACAa,QAAQ,CAAGzB,KAAK,CAACc,WAAD,CAAcS,UAAd,SAAcA,UAAd,UAAcA,UAAd,CAA4B,GAAIG,CAAAA,IAAJ,GAAWC,YAAX,EAA5B,CAAwD,GAAID,CAAAA,IAAJ,EAAxD,CAAhB,CACD,CAED,mBACE,oBAAC,YAAD,mBACE,oBAAC,UAAD,EACE,IAAI,CAAEN,IADR,CAEE,QAAQ,CAAEK,QAFZ,CAGE,QAAQ,CAAE,kBAACG,CAAD,QAAMP,CAAAA,SAAQ,CAAGA,SAAQ,CAACO,CAAD,CAAX,CAAiB,IAA/B,EAHZ,CAIE,OAAO,CAAEN,OAJX,CAKE,UAAU,CAAEC,UALd,CAME,MAAM,CAAEtB,EANV,CAOE,eAAe,CAAEkB,WAAW,EAAI,MAPlC,CAQE,KAAK,CAAC,0KARR,CASE,eAAe,CAAC,cATlB,CAUE,eAAe,CAAE,CACfU,IAAI,CAAE,CACJC,QAAQ,CAAE,CAAC,QAAD,CADN,CADS,CAIfC,eAAe,CAAE,CACfC,OAAO,CAAE,KADM,CAJF,CAOfC,IAAI,CAAE,CACJD,OAAO,CAAE,KADL,CAPS,CAVnB,CAqBE,WAAW,cAAE,oBAAC,eAAD,EAAiB,KAAK,CAAEhB,QAAxB,CAAkC,OAAO,CAAEC,OAA3C,CAAoD,UAAU,CAAEC,UAAhE,EArBf,EADF,cAwBE,oBAAC,kBAAD,MAxBF,CADF,CA4BD,CA/CD,CAiDA,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport './DateInput.styles.css';\r\nimport styled from 'styled-components';\r\nimport { StyledInput, InputWrapper, StyledIconCalendar } from '../Form.styles';\r\nimport { parse } from 'date-fns';\r\nimport ru from 'date-fns/locale/ru';\r\nimport getMaskedValue from '../utils/getMaskedValue';\r\nimport { dateMask } from '../utils/masks';\r\n\r\nconst StyledDateInput = styled<any>(StyledInput)`\r\n  padding-right: ${({ theme }) => parseInt(theme.main.sizes.padding) * 2}px;\r\n`;\r\n\r\nconst MaskedDateInput = forwardRef(({ value, ...rest }: any, ref) => {\r\n  const maskedValue = getMaskedValue(dateMask, value);\r\n  return <StyledDateInput ref={ref} value={maskedValue} {...rest} />;\r\n});\r\n\r\ntype DateInput = {\r\n  name: string;\r\n  value: string;\r\n  hasError?: boolean;\r\n  touched?: boolean;\r\n  hideErrors?: boolean;\r\n  setValue?: (value: any) => void;\r\n  placeholder?: string;\r\n  onChange?: (value: any) => void;\r\n  onFocus?: (value: any) => void;\r\n  dateFormat?: string;\r\n};\r\n\r\nconst DateInput = ({\r\n  value,\r\n  hasError,\r\n  touched,\r\n  hideErrors,\r\n  placeholder,\r\n  name,\r\n  onChange,\r\n  onFocus,\r\n  dateFormat\r\n}: DateInput) => {\r\n  const isValueEmpty = value === '';\r\n  let selected;\r\n\r\n  if (!isValueEmpty) {\r\n    const maskedValue = getMaskedValue(dateMask, value);\r\n    selected = parse(maskedValue, dateFormat ?? new Date().toDateString() , new Date());\r\n  }\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <DatePicker\r\n        name={name}\r\n        selected={selected}\r\n        onChange={(e)=> onChange ? onChange(e) : null}\r\n        onFocus={onFocus}\r\n        dateFormat={dateFormat}\r\n        locale={ru}\r\n        placeholderText={placeholder || 'Дата'}\r\n        title=\"Введите дату в формате дд.мм.гггг\"\r\n        popperPlacement=\"bottom-start\"\r\n        popperModifiers={{\r\n          flip: {\r\n            behavior: ['bottom']\r\n          },\r\n          preventOverflow: {\r\n            enabled: false\r\n          },\r\n          hide: {\r\n            enabled: false\r\n          }\r\n        }}\r\n        customInput={<MaskedDateInput error={hasError} touched={touched} hideErrors={hideErrors} />}\r\n      />\r\n      <StyledIconCalendar />\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n"]},"metadata":{},"sourceType":"module"}