{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(ducumentDetachFolder),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(sagaDetachFolder);import{takeLatest,put,select}from'redux-saga/effects';import{Flash}from'../../../../common/flash/Flash';import{actionDocumentDetachFolder,actionDocumentUpdate}from'../actions';import{selectList}from'../selects';export function ducumentDetachFolder(){return _regeneratorRuntime.wrap(function ducumentDetachFolder$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(actionDocumentDetachFolder,sagaDetachFolder);case 2:case\"end\":return _context.stop();}}},_marked);}function sagaDetachFolder(_ref){var _ref$payload,packageId,folderId,documents,documentIndex,document,message;return _regeneratorRuntime.wrap(function sagaDetachFolder$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_ref$payload=_ref.payload,packageId=_ref$payload.packageId,folderId=_ref$payload.folderId;_context2.next=3;return select(selectList);case 3:documents=_context2.sent;_context2.prev=4;documentIndex=documents.findIndex(function(item){return item.packageId===packageId;});document=documents[documentIndex];document.labels=document.labels.filter(function(item){return item.id.toString()!==folderId.toString();});_context2.next=10;return put(actionDocumentUpdate({list:_toConsumableArray(documents)}));case 10:_context2.next=17;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](4);message=_context2.t0.message;_context2.next=17;return Flash.error(message||'Возникла ошибка');case 17:case\"end\":return _context2.stop();}}},_marked2,null,[[4,12]]);}","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/documents/store/sagas/detach.effect.ts"],"names":["ducumentDetachFolder","sagaDetachFolder","takeLatest","put","select","Flash","actionDocumentDetachFolder","actionDocumentUpdate","selectList","payload","packageId","folderId","documents","documentIndex","findIndex","item","document","labels","filter","id","toString","list","message","error"],"mappings":"uYAOiBA,oB,iDAIPC,gB,EAXV,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,MAA1B,KAAwC,oBAAxC,CAEA,OAASC,KAAT,KAAsB,gCAAtB,CAEA,OAASC,0BAAT,CAAqCC,oBAArC,KAAiE,YAAjE,CACA,OAASC,UAAT,KAA2B,YAA3B,CAEA,MAAO,SAAUR,CAAAA,oBAAV,gJACL,MAAME,CAAAA,UAAU,CAACI,0BAAD,CAA6BL,gBAA7B,CAAhB,CADK,sDAIP,QAAUA,CAAAA,gBAAV,kOAA6BQ,OAA7B,CAAwCC,SAAxC,cAAwCA,SAAxC,CAAmDC,QAAnD,cAAmDA,QAAnD,kBACoC,MAAMP,CAAAA,MAAM,CAACI,UAAD,CAAZ,CADpC,OACQI,SADR,iCAGUC,aAHV,CAG0BD,SAAS,CAACE,SAAV,CAAoB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACL,SAAL,GAAmBA,SAAvB,EAAxB,CAH1B,CAIUM,QAJV,CAIqBJ,SAAS,CAACC,aAAD,CAJ9B,CAMIG,QAAQ,CAACC,MAAT,CAAkBD,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,CAAuB,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACI,EAAL,CAAQC,QAAR,KAAuBT,QAAQ,CAACS,QAAT,EAA3B,EAA3B,CAAlB,CANJ,kBAQI,MAAMjB,CAAAA,GAAG,CAACI,oBAAoB,CAAC,CAAEc,IAAI,oBAAMT,SAAN,CAAN,CAAD,CAArB,CAAT,CARJ,6FASaU,OATb,cASaA,OATb,mBAUI,MAAMjB,CAAAA,KAAK,CAACkB,KAAN,CAAYD,OAAO,EAAI,iBAAvB,CAAN,CAVJ","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects';\r\n\r\nimport { Flash } from '../../../../common/flash/Flash';\r\nimport { DocumentDetachPayload, DocumentType } from '../../helpers/documents.typings';\r\nimport { actionDocumentDetachFolder, actionDocumentUpdate } from '../actions';\r\nimport { selectList } from '../selects';\r\n\r\nexport function* ducumentDetachFolder() {\r\n  yield takeLatest(actionDocumentDetachFolder, sagaDetachFolder);\r\n}\r\n\r\nfunction* sagaDetachFolder({ payload: { packageId, folderId } }: DocumentDetachPayload) {\r\n  const documents: DocumentType[] = yield select(selectList);\r\n  try {\r\n    const documentIndex = documents.findIndex(item => item.packageId === packageId);\r\n    const document = documents[documentIndex];\r\n\r\n    document.labels = document.labels.filter(item => item.id.toString() !== folderId.toString());\r\n\r\n    yield put(actionDocumentUpdate({ list: [...documents] }));\r\n  } catch ({ message }) {\r\n    yield Flash.error(message || 'Возникла ошибка');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}