{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { HTMLTitle } from './style';\nvar HTMLContainer = styled.div.withConfig({\n  displayName: \"tplsection__HTMLContainer\",\n  componentId: \"sc-15imyad-0\"\n})(function (_ref) {\n  var $align = _ref.$align,\n      $border = _ref.$border;\n  var alignItems = 'flex-start';\n\n  switch ($align) {\n    case 'center':\n      alignItems = 'center';\n      break;\n\n    case 'right':\n      alignItems = 'flex-end';\n      break;\n  }\n\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: alignItems,\n    paddingTop: 2,\n    paddingBottom: 16,\n    width: '100%',\n    margin: '16px -3px',\n    borderBottom: $border ? '1px solid #d7d7d7' : 0\n  };\n});\nvar TemplateSection = React.memo(function (_ref2) {\n  var className = _ref2.className,\n      content = _ref2.content,\n      _ref2$groupProps = _ref2.groupProps,\n      groupProps = _ref2$groupProps === void 0 ? {} : _ref2$groupProps;\n  var childs = React.Children.toArray(content);\n  var _groupProps$align = groupProps.align,\n      align = _groupProps$align === void 0 ? 'left' : _groupProps$align,\n      _groupProps$border = groupProps.border,\n      border = _groupProps$border === void 0 ? true : _groupProps$border,\n      title = groupProps.title;\n  return React.createElement(React.Fragment, null, title && React.createElement(HTMLTitle, {\n    \"$align\": align\n  }, title), React.createElement(HTMLContainer, {\n    className: className,\n    \"$align\": align,\n    \"$border\": border\n  }, childs));\n});\nexport { TemplateSection };","map":{"version":3,"sources":["../../../src/FormSchema/template/tpl.section.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAEA,SAAS,SAAT,QAA0B,SAA1B;AAEA,IAAM,aAAa,GAAG,MAAM,CAAC,GAAV;AAAA;AAAA;AAAA,GAAmB,gBAAwB;AAAA,MAArB,MAAqB,QAArB,MAAqB;AAAA,MAAb,OAAa,QAAb,OAAa;AAC5D,MAAI,UAAU,GAAG,YAAjB;;AACA,UAAQ,MAAR;AACE,SAAK,QAAL;AACE,MAAA,UAAU,GAAG,QAAb;AACA;;AACF,SAAK,OAAL;AACE,MAAA,UAAU,GAAG,UAAb;AACA;AANJ;;AASA,SAAO;AACL,IAAA,OAAO,EAAE,MADJ;AAEL,IAAA,aAAa,EAAE,QAFV;AAGL,IAAA,UAAU,EAAV,UAHK;AAIL,IAAA,UAAU,EAAE,CAJP;AAKL,IAAA,aAAa,EAAE,EALV;AAML,IAAA,KAAK,EAAE,MANF;AAOL,IAAA,MAAM,EAAE,WAPH;AAQL,IAAA,YAAY,EAAE,OAAO,GAAG,mBAAH,GAAyB;AARzC,GAAP;AAUD,CArBkB,CAAnB;AA6BA,IAAM,eAAe,GAAoC,KAAK,CAAC,IAAN,CACvD,iBAA4C;AAAA,MAAzC,SAAyC,SAAzC,SAAyC;AAAA,MAA9B,OAA8B,SAA9B,OAA8B;AAAA,+BAArB,UAAqB;AAAA,MAArB,UAAqB,iCAAR,EAAQ;AAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,OAAvB,CAAf;AAD0C,0BAEO,UAFP,CAElC,KAFkC;AAAA,MAElC,KAFkC,kCAE1B,MAF0B;AAAA,2BAEO,UAFP,CAElB,MAFkB;AAAA,MAElB,MAFkB,mCAET,IAFS;AAAA,MAEH,KAFG,GAEO,UAFP,CAEH,KAFG;AAI1C,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAA,cAAS;AAAT,GAAV,EAA2B,KAA3B,CADZ,EAEE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,IAAA,SAAS,EAAE,SAAZ;AAAqB,cAAU,KAA/B;AAAoC,eAAW;AAA/C,GAAd,EACG,MADH,CAFF,CADF;AAQD,CAbsD,CAAzD;AAgBA,SAAS,eAAT","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HTMLTitle } from './style';\r\nconst HTMLContainer = styled.div(({ $align, $border }) => {\r\n    let alignItems = 'flex-start';\r\n    switch ($align) {\r\n        case 'center':\r\n            alignItems = 'center';\r\n            break;\r\n        case 'right':\r\n            alignItems = 'flex-end';\r\n            break;\r\n    }\r\n    return {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems,\r\n        paddingTop: 2,\r\n        paddingBottom: 16,\r\n        width: '100%',\r\n        margin: '16px -3px',\r\n        borderBottom: $border ? '1px solid #d7d7d7' : 0\r\n    };\r\n});\r\nconst TemplateSection = React.memo(({ className, content, groupProps = {} }) => {\r\n    const childs = React.Children.toArray(content);\r\n    const { align = 'left', border = true, title } = groupProps;\r\n    return (React.createElement(React.Fragment, null,\r\n        title && React.createElement(HTMLTitle, { \"$align\": align }, title),\r\n        React.createElement(HTMLContainer, { className: className, \"$align\": align, \"$border\": border }, childs)));\r\n});\r\nexport { TemplateSection };\r\n//# sourceMappingURL=tpl.section.js.map"]},"metadata":{},"sourceType":"module"}