{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hovsep\\\\Desktop\\\\local\\\\diflow_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Button,ButtonKinds,Icons,Input}from'@distate/components';import{Pagination,PaginationLimit}from'../../../../common/pagination';import{getStaffRoles}from'../../store/actions';import{selectStaffRoleRows,selectStaffRoleRecordsTotal}from'../../store/selectors';import{EditRoleTitleForm}from'./EditRoleTitleForm';import{CreateRoleForm}from'./CreateRoleForm';import{ModalRoleCard}from'./modal-role-card';/** Роли сотрудников */export var Roles=function Roles(){var _useState=useState(10),_useState2=_slicedToArray(_useState,2),limit=_useState2[0],setLimit=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),offset=_useState4[0],setOffset=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),searchTitle=_useState6[0],setSearchTitle=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),editingTitleId=_useState8[0],setEditingTitleId=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isOpenCreateForm=_useState10[0],setIsOpenCreateForm=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isVisibleCard=_useState12[0],setIsVisibleCard=_useState12[1];var _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),currentRole=_useState14[0],setCurrentRole=_useState14[1];var dispatch=useDispatch();var roles=useSelector(selectStaffRoleRows);var recordsTotal=useSelector(selectStaffRoleRecordsTotal);useEffect(function(){dispatch(getStaffRoles({props:{offset:offset,limit:limit}}));},[dispatch,limit,offset]);var onSearch=function onSearch(){dispatch(getStaffRoles({props:{offset:offset,limit:limit,title:searchTitle}}));};var onOpenModal=function onOpenModal(role){setCurrentRole(role);setIsVisibleCard(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:15}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(Input,{width:400,onChange:function onChange(e){return setSearchTitle(e.target.value);},value:searchTitle}),/*#__PURE__*/React.createElement(Button,{onClick:onSearch,icon:/*#__PURE__*/React.createElement(Icons.IconSearch,{fill:\"currentColor\"})},\"\\u041F\\u043E\\u0438\\u0441\\u043A\")),/*#__PURE__*/React.createElement(PaginationLimit,{setLimit:setLimit,limit:limit})),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"common-table-head\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{colSpan:2},\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"))),/*#__PURE__*/React.createElement(\"tbody\",null,roles===null||roles===void 0?void 0:roles.map(function(role){var id=role.id,title=role.title;return/*#__PURE__*/React.createElement(\"tr\",{key:id},editingTitleId===id?/*#__PURE__*/React.createElement(EditRoleTitleForm,{title:title,id:id,setEditingTitleId:setEditingTitleId}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"td\",null,title),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},/*#__PURE__*/React.createElement(Button,{kind:ButtonKinds.Secondary,onClick:function onClick(){return onOpenModal(role);}},\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0440\\u043E\\u043B\\u044C\"),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconPencil,{fill:\"currentColor\"}),onClick:function onClick(){return setEditingTitleId(id);},style:{marginLeft:'10px'}},\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"))));})),/*#__PURE__*/React.createElement(\"tfoot\",null,/*#__PURE__*/React.createElement(\"tr\",null,isOpenCreateForm?/*#__PURE__*/React.createElement(CreateRoleForm,{setIsOpenCreateForm:setIsOpenCreateForm}):/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(Icons.IconPlus,{fill:\"currentColor\"}),onClick:function onClick(){return setIsOpenCreateForm(true);}},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0440\\u043E\\u043B\\u044C\")),/*#__PURE__*/React.createElement(\"td\",{align:\"right\"},/*#__PURE__*/React.createElement(Pagination,{listLength:recordsTotal,setOffset:setOffset,limit:limit}))))),/*#__PURE__*/React.createElement(ModalRoleCard,{isVisible:isVisibleCard,hide:function hide(){return setIsVisibleCard(false);},currentRole:currentRole}));};","map":{"version":3,"sources":["C:/Users/Hovsep/Desktop/local/diflow_react/packages/app/src/pages/company/components/roles/Roles.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","ButtonKinds","Icons","Input","Pagination","PaginationLimit","getStaffRoles","selectStaffRoleRows","selectStaffRoleRecordsTotal","EditRoleTitleForm","CreateRoleForm","ModalRoleCard","Roles","limit","setLimit","offset","setOffset","searchTitle","setSearchTitle","editingTitleId","setEditingTitleId","isOpenCreateForm","setIsOpenCreateForm","isVisibleCard","setIsVisibleCard","currentRole","setCurrentRole","dispatch","roles","recordsTotal","props","onSearch","title","onOpenModal","role","display","justifyContent","marginBottom","e","target","value","map","id","Secondary","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, ButtonKinds, Icons, Input } from '@distate/components';\r\n\r\nimport { Pagination, PaginationLimit } from '../../../../common/pagination';\r\nimport { getStaffRoles } from '../../store/actions';\r\nimport { selectStaffRoleRows, selectStaffRoleRecordsTotal } from '../../store/selectors';\r\nimport { EditRoleTitleForm } from './EditRoleTitleForm';\r\nimport { CreateRoleForm } from './CreateRoleForm';\r\nimport { ModalRoleCard } from './modal-role-card';\r\n\r\n/** Роли сотрудников */\r\nexport const Roles = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [searchTitle, setSearchTitle] = useState<string>();\r\n  const [editingTitleId, setEditingTitleId] = useState<number>();\r\n  const [isOpenCreateForm, setIsOpenCreateForm] = useState(false);\r\n  const [isVisibleCard, setIsVisibleCard] = useState(false);\r\n  const [currentRole, setCurrentRole] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const roles = useSelector(selectStaffRoleRows);\r\n  const recordsTotal = useSelector(selectStaffRoleRecordsTotal);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getStaffRoles({ props: { offset, limit } })\r\n    );\r\n  }, [dispatch, limit, offset]);\r\n\r\n  const onSearch = () => {\r\n    dispatch(\r\n      getStaffRoles({ props: { offset, limit, title: searchTitle } })\r\n    );\r\n  }\r\n\r\n  const onOpenModal = (role: {title: string, id: number}) => {\r\n    setCurrentRole(role);\r\n    setIsVisibleCard(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 15 }}>\r\n        <div style={{ display: 'flex'}}>\r\n          <Input width={400} onChange={(e) => setSearchTitle(e.target.value)} value={searchTitle} />\r\n          <Button onClick={onSearch} icon={<Icons.IconSearch fill=\"currentColor\" />}>\r\n            Поиск\r\n          </Button>\r\n        </div>\r\n        <PaginationLimit setLimit={setLimit} limit={limit} />\r\n      </div>\r\n\r\n      <table className=\"table\">\r\n        <thead className=\"common-table-head\">\r\n          <tr>\r\n            <td colSpan={2}>Название</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            roles?.map(role => {\r\n              const { id, title } = role;\r\n              return (\r\n                <tr key={id}>\r\n                  {\r\n                    editingTitleId === id ? <EditRoleTitleForm title={title} id={id} setEditingTitleId={setEditingTitleId} /> : (\r\n                      <>\r\n                        <td>{title}</td>\r\n                        <td align=\"right\">\r\n                          <Button\r\n                            kind={ButtonKinds.Secondary}\r\n                            onClick={() => onOpenModal(role)}\r\n                          >\r\n                            Редактировать роль\r\n                          </Button>\r\n                          <Button\r\n                            icon={<Icons.IconPencil fill=\"currentColor\" />}\r\n                            onClick={() => setEditingTitleId(id)}\r\n                            style={{ marginLeft: '10px' }}\r\n                          >\r\n                            Изменить заголовок\r\n                          </Button>\r\n                        </td>\r\n                      </>\r\n                    )\r\n                  }\r\n                  \r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            {isOpenCreateForm ? <CreateRoleForm setIsOpenCreateForm={setIsOpenCreateForm}/> : (\r\n              <td>\r\n                <Button\r\n                  icon={<Icons.IconPlus fill=\"currentColor\" />}\r\n                  onClick={() => setIsOpenCreateForm(true)}\r\n                >\r\n                  Добавить роль\r\n                </Button>\r\n              </td>\r\n            )}\r\n            <td align=\"right\">\r\n              <Pagination listLength={recordsTotal} setOffset={setOffset} limit={limit} />\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n\r\n      <ModalRoleCard\r\n        isVisible={isVisibleCard}\r\n        hide={() => setIsVisibleCard(false)}\r\n        currentRole={currentRole as never}\r\n      />\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}