import IFNS from './IFNS';
import IFNSCode from './vo/Code';

describe('Неверные параметры ИФНС (Инспекция Федеральной налоговой службы)', () => {
  test('Код налогового органа плохой 1', () => expect(() => new IFNS(1, '1', 'Название налоговой')).toThrowError('Невозможно создать «Код налогового органа». Формат не верен.'));
  test('Код налогового органа плохой 12', () => expect(() => new IFNS(1, '12', 'Название налоговой')).toThrowError('Невозможно создать «Код налогового органа». Формат не верен.'));
  test('Код налогового органа плохой 123', () => expect(() => new IFNS(1, '123', 'Название налоговой')).toThrowError('Невозможно создать «Код налогового органа». Формат не верен.'));
  test('Код налогового органа плохой 12345', () => expect(() => new IFNS(1, '12345', 'Название налоговой')).toThrowError('Невозможно создать «Код налогового органа». Формат не верен.'));
  test('Без параметров', () => expect(() => new IFNS()).toThrowError('Невозможно создать ИФНС (входные параметры неверные)'));
  test('Передан только id', () => expect(() => new IFNS(1)).toThrowError('Невозможно создать ИФНС (входные параметры неверные)'));
  test('Передан только code', () => expect(() => new IFNS(null, 1)).toThrowError('Невозможно создать ИФНС (входные параметры неверные)'));
});

describe('Создание сущности ИФНС (Инспекция Федеральной налоговой службы)', () => {
  test('7847 ООО Дистэйт Межрайонная инспекция ФНС России № 15 по Санкт- Петербургу', () => {
    const ifns = new IFNS(1, '7847', 'ООО Дистэйт Межрайонная инспекция ФНС России № 15 по Санкт- Петербургу');
    expect(ifns.code.value).toBe('7847');
  });
  test('7847 ООО Дистэйт без title-a', () => {
    const ifns = new IFNS(1, '7847');
    expect(ifns.code.value).toBe('7847');
  });
});

describe('ИФНС проверка маски для кода', () => {
  test('7 8 4 7', () => expect(IFNSCode.mask('7 8 4 7')).toBe('7847'));
  test('   7 8 4 7', () => expect(IFNSCode.mask('   7 8 4 7')).toBe('7847'));
  test('abcd7847', () => expect(IFNSCode.mask('   7 8 4 7')).toBe('7847'));
  test('empty', () => expect(IFNSCode.mask('')).toBe(''));
  test('more then 4 symbols', () => expect(IFNSCode.mask('7847666')).toBe('7847'));
});
